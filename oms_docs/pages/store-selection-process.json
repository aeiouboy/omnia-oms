{
  "success": true,
  "permalink": "store-selection-process",
  "title": "Store Selection Process",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2164553\" href=\"/store-common\" class=\"breadcrumb-links\">Store Common</a></li><li> <span>››</span>Store Selection Process</li></ul>  \t\r\n\t\t<h2><a name=\"login-nbsp-store-selection-main-menu-nbsp-process\" id=\"login-nbsp-store-selection-main-menu-nbsp-process\"></a>Login,&nbsp;Store Selection & Main Menu&nbsp;Process</h2>\r\n\r\n<p></p>\r\n\r\n<p>Manhattan Active Store requires that store associates be logged into a store.&nbsp;The store selection process sets the store context that will be used by all application transactions for the device/user.</p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/store-selection-process$login-nbsp-store-selection-main-menu-nbsp-process\">Login,&nbsp;Store Selection & Main Menu&nbsp;Process</a><ul><li><a href=\"/store-selection-process$store-selection\">Store Selection</a><ul><li><a href=\"/store-selection-process$initial-login\">Initial Login</a></li><li><a href=\"/store-selection-process$configurable-store-display\">Configurable Store Display</a></li><li><a href=\"/store-selection-process$subsequent-logins\">Subsequent Logins</a><ul><li><a href=\"/store-selection-process$change-store\">Change Store</a></li><li><a href=\"/store-selection-process$clear-all\">Clear All</a></li></ul></li><li><a href=\"/store-selection-process$workflow\">Workflow</a><ul><li><a href=\"/store-selection-process$workflow-examples\">Workflow examples</a></li></ul></li></ul></li><li><a href=\"/store-selection-process$loading-home-screen\">Loading Home Screen.</a><ul><li><a href=\"/store-selection-process$main-menu-failure-handling\">Main Menu - Failure handling</a><ul><li><a href=\"/store-selection-process$configuration\">Configuration</a></li></ul></li><li><a href=\"/store-selection-process$keycloak-implementation\">Keycloak Implementation</a></li><li><a href=\"/store-selection-process$essential-nbsp-apis\">Essential&nbsp;APIs</a></li></ul></li><li><a href=\"/store-selection-process$services\">Services</a></li></ul></li></ul></div>\r\n\r\n<h3><a name=\"store-selection\" id=\"store-selection\"></a>Store Selection</h3>\r\n\r\n<h4><a name=\"initial-login\" id=\"initial-login\"></a>Initial Login</h4>\r\n\r\n<p>When the Store app is used for the first time after it has been installed on a device (or the first time the Store application is used on a device&#39;s browser), it requires that a store be associated to the device. The first user to sign in sets this default store (also referred to as the &quot;POS store&quot;.) If that&nbsp;user has access to multiple stores, after login the Store selection screen is displayed which lists the eligible stores that the user has access to and can choose from. If the&nbsp;user has access to only one&nbsp;store, the store selection screen is bypassed, and the default store is automatically&nbsp;set to that store. The List Locations For User API returns the stores that a user has access to. The store is saved on the device/browser and referred to as &quot;default Store&quot;.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: For&nbsp;the browser, the selected store is saved to the local&nbsp;browser cache. Once saved, the store selection screen&nbsp;is not displayed again unless the browser&nbsp;cache is cleared or if the browser is run in incognito/private mode.</div>\r\n\r\n<div class=\"warning\">When installing a new version of the mobile app, if the new app is installed without uninstalling the old app,&nbsp;the default store is retained. However, if the old app is uninstalled, the default store will be cleared and the app will behave as initial login.&nbsp;</div>\r\n\r\n<h4><a name=\"configurable-store-display\" id=\"configurable-store-display\"></a>Configurable Store Display</h4>\r\n\r\n<p>The home screen&nbsp;can display either LocationId, DisplayId or LocationName&nbsp;attribute of the Location entity as store&nbsp;in&nbsp;the Home screen. This&nbsp;can be configured in&nbsp;&quot;Store Display Field&quot; in the&nbsp;Store Common Configuration UI.</p>\r\n\r\n<p>The default value for the configuration&nbsp;is LocationId. If &nbsp;&quot;Store Display Field&quot; is set to &#39;LocationName&quot; and LocationName is not populated on the Location, then the system will fall back to display LocationId as store.</p>\r\n\r\n<div class=\"warning\">This configurable store display is not supported on the initial store selection screen . The store selection screen will always display LocationId and its organization id to help users choose the right store.</div>\r\n\r\n<h4><a name=\"subsequent-logins\" id=\"subsequent-logins\"></a>Subsequent Logins</h4>\r\n\r\n<p>After the default Store is set during the initial login, the store selection screen is bypassed, and the store is defaulted&nbsp;to the default store for all subsequent logins (for all users). On every&nbsp;login, this Store&nbsp;is validated&nbsp;against the list of stores from the List Locations For User&nbsp;API to make sure the user has appropriate access. If a logged in user does not have access to the device/browser&#39;s default store,&nbsp;an error message is displayed. The user can either request for access to the default Store or use the Change Store option (see below).</p>\r\n\r\n<h5><a name=\"change-store\" id=\"change-store\"></a><strong>Change Store</strong></h5>\r\n\r\n<p>Since most retailers do not move devices from one store to another, the default store will typically not change for a device. For scenarios when the store should change&nbsp;(i.e., temporarily accessing another store to view inventory, testing efforts by corporate/store IT users), the Change Store option can be selected on the device to temporarily change to a different store (that the user has access to). The change store option is temporary, meaning that the Store app will be set to the default Store on the next login.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: If the default store is different from the current selected&nbsp;store, POS features are disabled.&nbsp;The user can only perform SIF features when the default store is not the current selected store.</div>\r\n\r\n<h5><a name=\"clear-all\" id=\"clear-all\"></a><strong>Clear All</strong></h5>\r\n\r\n<p>A device can be untied from the default store using the Clear All&nbsp;function. This clears&nbsp;the default Store that is set on the device, allowing a new store to be set as default. This function is useful if the device needs to be transferred to another store.</p>\r\n\r\n<p>Refer to &quot;<a hqid=\"1985538\" href=\"/device-registration-management-process\">Device Registration and Management process</a>&quot; guide for more details on Clear All&nbsp;function.</p>\r\n\r\n<h4><a name=\"workflow\" id=\"workflow\"></a>Workflow</h4>\r\n\r\n<p><img height=\"650\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Store%20Selection%20Process%20(1).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL1N0b3JlJTIwU2VsZWN0aW9uJTIwUHJvY2VzcyUyMCgxKS5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTQwOTl9fX1dfQ__&Signature=EZLn1RlSGDmcBPhXuxxv7dUiV2ojbiW-wJYsYFqJ9mRgcllLVKKT9OBKmgPzhR4i3qLKEHES2qn38HxhcOJdE4~M1myR1C4LO5vNhFApdBQTqJlDM34lw4S-WSzi2mhWtmGFBOnmoiC2r85kkmRGBsM517SeotF8~ZoVAy6wMqCo10g0xdyuxQXAagFoZXIRVRVQmXIcgRJTkMjQKXjXxAY8x6n3DHgEIq5YhbiD8FLEpRpDZt~gj15W81HHq4AmHJwA0HFPwdGpW1jr8LoadMIbtEKqfsnceuLJbFWfQZrs4OE~ERG6OmAyPlnBYyU6bJA8mH5PNFoynr8NQEzozg__&Key-Pair-Id=K2TK3EG287XSFC\" width=\"1656\" /></p>\r\n\r\n<h5><a name=\"workflow-examples\" id=\"workflow-examples\"></a><strong>Workflow examples</strong></h5>\r\n\r\n<p>Take the following examples of Users A and B working on Device 1:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"0.6\" style=\"width: 900px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">User Scenario</th>\r\n\t\t\t<th scope=\"col\">Store Selection</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>Initial login on Device 1 by User A who only has access&nbsp;to&nbsp;Store 1.</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Store selection screen is bypassed on login</p>\r\n\r\n\t\t\t<p>Default Store is updated to&nbsp;Store1</p>\r\n\r\n\t\t\t<p>Current Store is updated&nbsp;to&nbsp;Store1&nbsp;</p>\r\n\r\n\t\t\t<p>Home screen displays Store1&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Subsequent login on Device 1 by User B who has access to Store 1,&nbsp;Store2 and Store3.</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Store selection screen is bypassed on login</p>\r\n\r\n\t\t\t<p>Default Store remains as Store1</p>\r\n\r\n\t\t\t<p>Current&nbsp;Store is updated to&nbsp;Store1</p>\r\n\r\n\t\t\t<p>Home screen displays Store1</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>User B takes Change Store option to change from Store1&nbsp;to&nbsp;Store2</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Default Store remains as&nbsp;Store1</p>\r\n\r\n\t\t\t<p>Current Store is updated to&nbsp;Store2</p>\r\n\r\n\t\t\t<p>POS features are disabled</p>\r\n\r\n\t\t\t<p>Home Screen displays Store2</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Subsequent login on Device 1 by User B</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Store selection screen is bypassed on login</p>\r\n\r\n\t\t\t<p>Default Store remains as&nbsp;Store1</p>\r\n\r\n\t\t\t<p>Current Store is updated to Store 1</p>\r\n\r\n\t\t\t<p>Home screen displays Store1</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>User B executes the Clears All function</td>\r\n\t\t\t<td>Toast message confirms that store data is cleared. Store selection is displayed for the user to set a new store.</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h3><a name=\"loading-home-screen\" id=\"loading-home-screen\"></a><a id=\"LoginFailure_Recovery\" name=\"LoginFailure_Recovery\"></a>Loading Home Screen.</h3>\r\n\r\n<p>After user logs into the store application, few essential APIs&nbsp;are needed to&nbsp;load the home screen menus. If any of these essential api fails,&nbsp;then the main menu will not be&nbsp;functional. This failure&nbsp;can be gracefully handled by providing auto-retry mechanism to successfully display the home screen&nbsp;menus.</p>\r\n\r\n<h4><a name=\"main-menu-failure-handling\" id=\"main-menu-failure-handling\"></a>Main Menu - Failure handling</h4>\r\n\r\n<p>After login, if&nbsp;essential API&nbsp;calls&nbsp;fail, then system auto-retries all the essential APIs&nbsp;(auto retries&nbsp;3 times&nbsp;before asking for&nbsp;users&#39; intervention).&nbsp;During&nbsp;this process users are&nbsp;informed with intuitive icons and&nbsp;messages about the longer wait time.</p>\r\n\r\n<p>The API failures could be&nbsp;due to network latency, slow bandwidth or technical exceptions.&nbsp;When such exception&nbsp;occurs system will automatically retry to load the main menu/home screen successfully.</p>\r\n\r\n<ol>\r\n\t<li>Upon login and past the store selection page, user is shown a loading mask until&nbsp;all the essential APIs pass.</li>\r\n\t<li>If for some reason there is a delay in getting the response, then based on a configured wait time user is&nbsp;presented a &quot;recovery screen&quot; with following&nbsp;actions.</li>\r\n\t<li><strong>Refresh data:</strong>\r\n\t<ol>\r\n\t\t<li>This button will be enabled only when all 3 auto retries are completed</li>\r\n\t\t<li>When enabled and upon&nbsp;clicking this button, application tries to load the essential apis once again.</li>\r\n\t\t<li>When clicked this button is disabled until the retry is completed</li>\r\n\t</ol>\r\n\t</li>\r\n\t<li><strong>Launch offline application:</strong>\r\n\t<ol>\r\n\t\t<li>This option is not applicable only for&nbsp;POS solution.</li>\r\n\t\t<li>This button will be displayed only when the store has an active edge server configured and central is receiving active heartbeat from edge server configured for this loged in store.</li>\r\n\t\t<li>Upon clicking this button the online store app is logged out and offline store app is launched.</li>\r\n\t\t<li>This button will not be disabled for SIF only customer or when POS store does not have a edge server configured and running for this store.</li>\r\n\t</ol>\r\n\t</li>\r\n\t<li><strong>Logout:</strong>\r\n\t<ol>\r\n\t\t<li>This is always available and upon clicking this would log the user out and goto login screen.</li>\r\n\t</ol>\r\n\t</li>\r\n</ol>\r\n\r\n<p>While user is waiting&nbsp;if all essential APIs are loaded then home menu is displayed to proceed with&nbsp;business functions.</p>\r\n\r\n<h5><a name=\"configuration\" id=\"configuration\"></a><strong>Configuration</strong></h5>\r\n\r\n<p>The wait time to navigate from first to second overlay while user is waiting for menu to load or if&nbsp;essential apis fail&nbsp;to respond can be configured from &quot;Display Home Screen Retry Options (milliseconds)&quot; under Manage Store Common configurations.</p>\r\n\r\n<p>The default value for this configuration is&nbsp;7000 ms.&nbsp;User can choose to update this time based on their network bandwidth and requirement. If this is configured as 0 or very small number then the&nbsp;user is presented with the recovery actions almost immediately.</p>\r\n\r\n<h4><a name=\"keycloak-implementation\" id=\"keycloak-implementation\"></a><strong>Keycloak Implementation</strong></h4>\r\n\r\n<p>Keycloak is the&nbsp;Identity and Authorization Management that Manhattan Active products use&nbsp;, instead of&nbsp;the present auth server as it provides advanced features and practices industry standard data security. The current auth server is being replaced by the Keycloak component.</p>\r\n\r\n<p>The following are the changes that we see in the Manhattan Store Application&nbsp;with Keycloak implementation.</p>\r\n\r\n<p>1. If the user stays on the login screen for longer times without logging in, Keycloak ensures to refresh the login screen for additional security to avoid unintentional login.</p>\r\n\r\n<p>2. In case logout of the app is unsuccessful, user can retry the logout in the confirmation screen that is presented to the user.</p>\r\n\r\n<h4><a name=\"essential-nbsp-apis\" id=\"essential-nbsp-apis\"></a><strong>Essential&nbsp;APIs</strong></h4>\r\n\r\n<p>Here is the list of essential apis needed for home screen - main menu&nbsp;to load successfully</p>\r\n\r\n<ul>\r\n\t<li>/storefacade/api/storefacade/menu/menuNode/storeAppRoot :&nbsp;Get Menu Options</li>\r\n\t<li>/storefacade/api/storefacade/grant/list/grantsForMe :&nbsp;Get list of grants for the user</li>\r\n\t<li>/storefacade/api/storefacade/storecommon/staticdata : Store common static data&nbsp;</li>\r\n\t<li>/storefacade/api/storefacade/staticdata : SIF static data&nbsp;</li>\r\n\t<li>/storefacade/api/storefacade/storeui/staticdata : POS static data</li>\r\n</ul>\r\n\r\n<div class=\"tip\">Please note that this functionality is&nbsp;to auto-recover main menu&nbsp;from unexpected network slowness or time-outs if any. This will only retry the above APIs. This will not resolve other functional / data errors such as APIs responding with incorrect values or component instance unavailability&nbsp;etc.,</div>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a>Services</h3>\r\n\r\n<p>The&nbsp;APIs listed in the following table are referenced in this document. Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 1330px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 207px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service</font></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 168px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Component</font></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 228px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Group</font></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 720px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service Endpoint</font></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 204px;\">List Locations For User</td>\r\n\t\t\t<td style=\"margin: 0px; width: 165px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Organization</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 225px;\">Location Services</td>\r\n\t\t\t<td style=\"margin: 0px; width: 717px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/organization/location/list/listLocationsForUser</font></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 16856,
  "scraped_at": "2025-08-09T22:36:39.904232"
}