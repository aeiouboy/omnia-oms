{
  "success": true,
  "permalink": "trigger-to-compute-soq",
  "title": "Trigger to Compute SOQ (Replenish vs. Allocation)",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500947\" href=\"/supply-chain-planning\" class=\"breadcrumb-links\">Manhattan Active® Supply Chain Planning</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500948\" href=\"/process-configuration-guides-5\" class=\"breadcrumb-links\">Process &amp; Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500956\" href=\"/orchestration-2\" class=\"breadcrumb-links\">Orchestration</a></li><li> <span>››</span>Trigger to Compute SOQ (Replenish vs. Allocation)</li></ul>  \t\r\n\t\t<p>&nbsp;</p>\r\n\r\n<h2>Trigger to Compute SOQ (Replenish vs. Allocation)</h2>\r\n\r\n<p></p>\r\n\r\n&nbsp;I&nbsp;\r\n<div class=\"info\"><ul><li><a href=\"/trigger-to-compute-soq$overview\">Overview</a></li><li><a href=\"/trigger-to-compute-soq$process-flow-nbsp\">Process Flow&nbsp;</a><ul><li><a href=\"/trigger-to-compute-soq$triggers-point-for-soq-computation-nbsp-nbsp\">Triggers point for SOQ Computation&nbsp;:&nbsp;</a></li><li><a href=\"/trigger-to-compute-soq$soq-computation\">SOQ Computation :</a></li></ul></li><li><a href=\"/trigger-to-compute-soq$implementation-flavors\">Implementation Flavors</a></li><li><a href=\"/trigger-to-compute-soq$uis-and-entities\">UIs and Entities</a></li><li><a href=\"/trigger-to-compute-soq$services\">Services</a></li><li><a href=\"/trigger-to-compute-soq$troubleshooting\">Troubleshooting</a></li><li><a href=\"/trigger-to-compute-soq$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"overview\" id=\"overview\"></a>Overview</h3>\r\n\r\n<p>The&nbsp;Suggested Order Quantity (SOQ) is a key concept in inventory management,&nbsp;SOQ is a&nbsp;recommended quantity of inventory that should be ordered to optimize&nbsp;inventory levels and associated costs.&nbsp;</p>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p><strong>Objective</strong>:&nbsp;To&nbsp;keep optimal inventory to meet customer demand while being cost-effective</p>\r\n\t</li>\r\n\t<li>\r\n\t<p><strong>Goal</strong>:&nbsp;To determine the amount of inventory to keep in stock&nbsp;</p>\r\n\t</li>\r\n</ul>\r\n\r\n<p>The Suggested Order Quantity (SOQ) computation is triggered whenever there is a change in inventory, demand, supply, or forecast. Specifically, any updates or changes in inventory levels or demand will lead to recalculation (computation) of the SOQ,&nbsp;ensuring that the order quantities are always aligned with the latest data.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"process-flow-nbsp\" id=\"process-flow-nbsp\"></a>Process Flow&nbsp;</h3>\r\n\r\n<p><img height=\"1207\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/52795/ckfinder/images/qu/2214/Trigger_SOQ_Computation-2.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1LzUyNzk1L2NrZmluZGVyL2ltYWdlcy9xdS8yMjE0L1RyaWdnZXJfU09RX0NvbXB1dGF0aW9uLTIucG5nIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzU0MTQ4fX19XX0_&Signature=Rq56TXFzOMEydQWC01uvGZaocOPORBRMW034-6e9NahIi0fVHnxDAjakPVjwbFynQe6N4abG9h-A9Y0X~2WzeGwImeO-mnfuVbvrBEuY~SVPZRqrOSc3~PAoxA8PZfuMRQrFF~nXXhYbTkzH7btVwGuxFKe6-YgIc0zmNGDr03o~52-8m~WoH-Z2k7fPRKPIhINtlb0ncdYokgXzbVrGPFvXdJDwWfAqDYgcgKXNO3d60aart9CvCC051Gv0ZH-ih4cl2RHUus-IY9Oyr~E38U-kd6fozlxzVlo7yFvSf2oEnvr61bbBcwgM7v7QnX3ShLbfzB45j4bVRS-GRXJltg__&Key-Pair-Id=K2TK3EG287XSFC\" width=\"1024\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5><a name=\"triggers-point-for-soq-computation-nbsp-nbsp\" id=\"triggers-point-for-soq-computation-nbsp-nbsp\"></a><strong>Triggers point for SOQ Computation&nbsp;:&nbsp;</strong></h5>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p><strong>Inventory Change</strong> - Whenever there&nbsp;is an update in inventory levels (e.g., stock depletion, new stock arrival), the SOQ calculation will be initiated to adjust order quantities based on the current stock.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p><strong>Forecast/ Demand Change</strong> - Whenever there is a change&nbsp;in demand patterns (e.g.&nbsp;increase or decrease in customer orders),&nbsp;the SOQ calculation will be initiated&nbsp;to ensure that the order quantities meet the new demand levels.</p>\r\n\t</li>\r\n</ul>\r\n\r\n<h5><a name=\"soq-computation\" id=\"soq-computation\"></a><strong>SOQ Computation :</strong></h5>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>When there is a trigger due to a change in&nbsp;supply, or forecast, a message is sent to the Inventory Optimization (IO) component.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>Upon receiving this message, the IO component checks whether the item is replenishment or allocation.</p>\r\n\r\n\t<ul>\r\n\t\t<li>\r\n\t\t<p>If the planning type is set to <strong>&quot;R&quot;</strong> the item is considered replenishable. If not set then it is considered as Replenishable.</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<p>If the planning type is set to <strong>&quot;A&quot;</strong> the item is categorized for allocation.</p>\r\n\t\t</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"computer_code\">\r\n<div>Save Replenishment Items - <span style=\"color: rgb(33, 33, 33); font-family: Inter, system-ui, -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, Helvetica, Arial, sans-serif; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre-wrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">/api/item/item/save</span></div>\r\n\r\n<div><span style=\"color: #000000;\">{</span></div>\r\n\r\n<p><span style=\"color: #a31515;\">&quot;</span>Description&quot;: &quot;AllocationItem&quot;,</p>\r\n\r\n<p>&quot;ItemId&quot;: &quot;AllocationItem&quot;,</p>\r\n\r\n<p>&quot;PlanningAttribute&quot;: {</p>\r\n\r\n<p>&quot;PlanningType&quot;: {</p>\r\n\r\n<p>&quot;PlanningTypeId&quot;: &quot;R&quot;</p>\r\n\r\n<div><span style=\"color: #000000;\">}</span></div>\r\n\r\n<div><span style=\"color: #000000;\">}</span></div>\r\n\r\n<div><span style=\"color: #000000;\">}</span></div>\r\n</div>\r\n\r\n<div class=\"computer_code\">\r\n<p>Save Allocatable Items - <span style=\"font-family: Inter, system-ui, -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, Helvetica, Arial, sans-serif; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: pre-wrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;\">/api/item/item/save</span></p>\r\n\r\n<p>{</p>\r\n\r\n<p>&quot;Description&quot;: &quot;AllocationItem&quot;,</p>\r\n\r\n<p>&quot;ItemId&quot;: &quot;AllocationItem&quot;,</p>\r\n\r\n<p>&quot;PlanningAttribute&quot;: {</p>\r\n\r\n<p>&quot;PlanningType&quot;: {</p>\r\n\r\n<p>&quot;PlanningTypeId&quot;: &quot;A&quot;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n</div>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>Once the IO component determines the item type, it triggers either the replenishment engine or the allocation engine accordingly.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>If Item is &quot;R&quot;, the&nbsp;IO component invokes the replenishment engine, which calculates the Suggested Order Quantity (SOQ). The calculated SOQ is then persisted or updated in the IMS, LIM, and IMF entities.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>If it is&nbsp;part of allocation, the IO component triggers the allocation engine, which calculates the RAQ. The calculated RAQ deatil is then persisted or updated in the IMS, LIM, and IMF entities.</p>\r\n\t</li>\r\n</ul>\r\n\r\n<p>This process ensures that the appropriate engine is invoked based on the item type, optimizing inventory management by accurately calculating and updating the necessary quantities in the system.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<p>NA</p>\r\n\r\n<ul type=\"disc\">\r\n</ul>\r\n\r\n<h3><a name=\"uis-and-entities\" id=\"uis-and-entities\"></a>UIs and Entities</h3>\r\n\r\n<p>NA</p>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a>Services</h3>\r\n\r\n<p>NA</p>\r\n\r\n<h3><a name=\"troubleshooting\" id=\"troubleshooting\"></a>Troubleshooting</h3>\r\n\r\n<p>NA</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"tip\">&nbsp;</div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 8845,
  "scraped_at": "2025-08-09T22:37:29.025746"
}