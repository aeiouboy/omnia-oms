{
  "id": "3415934",
  "permalink": "carriers",
  "title": "Carriers",
  "type": "topic",
  "level": 3,
  "path": "Administrator Tools/Master Data Guides/Master Data Guide - Omni/Carriers",
  "raw_item": {
    "id": "3415934",
    "text": "Carriers",
    "title": "Carriers",
    "permalink": "carriers",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "t;2161520",
    "parent": "2161520",
    "created_date": "1716808732",
    "modified_date": "1726838072",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "1"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"2161445\" href=\"/administrators\" class=\"breadcrumb-links\">Administrator Tools</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3502177\" href=\"/new-folder-5\" class=\"breadcrumb-links\">Master Data Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2161520\" href=\"/master-data-guide\" class=\"breadcrumb-links\">Master Data Guide - Omni</a></li><li> <span>››</span>Carriers</li></ul>  \t\r\n\t\t<h1>Carriers</h1>\r\n\r\n<p>Carriers are companies that transport goods to a given destination. Many different carriers, along with their service levels, can be configured and selected based on rank, rate, and prioritized based on a configured SLA.&nbsp;</p>\r\n\r\n<h2>Modes</h2>\r\n\r\n<p>Mode indicates the mode of transportation, such as air, ocean, truckload, less-than-truckload (LTL) or&nbsp;parcel. The mode used for all third-party carrier integration is &#39;Parcel&#39;. &nbsp;Available&nbsp;on the Modes UI.</p>\r\n\r\n<h2>Carriers</h2>\r\n\r\n<p>The carrier entity represents the third-party carriers&nbsp;(FedEx, UPS, DHL, USPS, etc.) with which the&nbsp;retailer has partnered. All parcel services use&nbsp;this entity to contact the correct carrier for shipping services. Carriers are configured in the Carriers UI.</p>\r\n\r\n<div class=\"warning\">Carrier code and carrier mapping code should be the same for FedEx&nbsp;and UPS.&nbsp;</div>\r\n\r\n<h2>Service Levels</h2>\r\n\r\n<p>This entity stores the service level&nbsp;information offered by each carrier that is defined in the Carrier entity.&nbsp;The service level&nbsp;indicates the service level agreement&nbsp;offered by a particular&nbsp;carrier for delivery. For example, the FedEx 2 Day service level guarantees delivery of shipments within 2 days. Configure the Carriers/Service Level UI.</p>\r\n\r\n<div class=\"tip\">Note :&nbsp;In order to obtain the most updated service levels and other data, work with the carrier.</div>\r\n\r\n<h2>Ship Vias</h2>\r\n\r\n<p>A ship via encapsulates a carrier, service level, and a ship via accessorial combination. This is often set up specifically by a retailer according to the standard shipping options that they offer. For example, a ship via can be created that is called &quot;Express FedEx with signature&quot; that has carrier= FedEx Express, Service level = FedEx Express Saver, and Accessorial = Adult Signature. Configure on the Ship&nbsp;Vias/Ship Via&nbsp;Accessorials&nbsp;UI.</p>\r\n\r\n<div class=\"tip\">Note:&nbsp;An order can be created with one combination of Carrier Code and Service Level and have a different combination of Carrier Code and Service Level at the time of shipment.</div>\r\n\r\n<h2><strong><a id=\"Shipping Method\" name=\"Shipping Method\"></a></strong>Shipping Methods</h2>\r\n\r\n<p>The&nbsp;shipping method defines the type of carrier services allowed for the shipment&nbsp;(isAirShippingAllowed,&nbsp;isParcelShippingAllowed,&nbsp;isFrozenShippingAllowed,&nbsp;isReturnShippingMethod.)&nbsp;For each shipping method, a prioritized&nbsp;list of ship&nbsp;vias&nbsp;is also&nbsp;defined. Configure on the Shipping Methods UI.</p>\r\n\r\n<h3>Ship Via Selection Logic</h3>\r\n\r\n<p>In addition to the ranking of ship vias in the shipping method entity, there is also configuration to indicate a preferred carrier for each location. The inventory location configuration has a preferred carrier which, if populated, overrides the ship via ranking within the shipping method.&nbsp;</p>\r\n\r\n<p>For example: Two Ship Vias from the same carrier are configured within a shipping method.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p>Ship via</p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">Rank</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>FDXFG</td>\r\n\t\t\t<td>1</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>FDX2D</td>\r\n\t\t\t<td>2</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When that shipping method is used, the system selects FDXFG since they are the same carrier, and it has a rank of 1.</p>\r\n\r\n<p>In a different example: Two ship via&#39;s from different carriers are configured in the shipping method, and the preferred carrier from the inventory location is UPS.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p>Ship via</p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">Rank</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>FDXFG</td>\r\n\t\t\t<td>1</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>UPSGR</td>\r\n\t\t\t<td>2</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>In this case, since there is a preferred carrier, UPSGR will be selected over the EDXFG option. If we remove the preferred carrier from the inventory location, then the FDXFG will be selected. If the preferred carrier is not set for a location, then the system always pickup the first ship via.</p>\r\n\r\n<p>If Rate-Based Carrier Selection, Rank-Based Carrier Selection, or On Hand SLA&nbsp;is enabled, the logic changes for selecting a Ship Via. See documentation for all three of these features <a href=\"https://omni.helpdocsonline.com/interactive-inventory-3$rate-based-carrier-selection\">here</a>.</p>\r\n\r\n<h3><strong><a id=\"facility-accounts\" name=\"facility-accounts\"></a></strong>Facility Accounts</h3>\r\n\r\n<p>Facility accounts hold the account details that are needed for integration with carriers. Some retailers have one corporate account that is used by all the stores, while some prefer to use separate accounts for each&nbsp;store. These accounts are used by the carrier to invoice the shipper.</p>\r\n\r\n<p><strong>Carrier specific information:</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>FedEx</strong>&nbsp;- The facility account contains the FedEx Account Number and the FedEx Meter Number. The Account Number represents the registered account with FedEx and its&nbsp;used by FedEx to identify the shipper. The FedEx Meter Number is used by FedEx to calculate invoices and track&nbsp;requests from Store Fulfillment to their system.</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>FedEx Account Number and Meter Number are required to be configured only for those accounts which are configured to utilize the FedEx web services. They are not needed in the accounts meant to leverage the FedEx REST Track service.</div>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;FedEx plans to deprecate the Web Services version of the Track API in May 2024. Refer to FedEx documentation&nbsp;<a href=\"https://www.fedex.com/en-us/developer/web-services.html\">here</a>&nbsp;for the exact date.</div>\r\n\r\n<ul>\r\n\t<li><strong>UPS</strong>&nbsp;- UPS uses a shipper number or account number as well as&nbsp;an access key number. A UPS account number or shipper number is a unique six-digit reference number&nbsp;assigned by UPS to a shipper for billing purposes. The access key number provided by UPS is used to validate access to the UPS system and&nbsp;holds the information needed to ship, track, or rate a package.</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>UPS plans to stop supporting access key based account authentication starting June 2024. Refer to the UPS Developer documentation available&nbsp;<a href=\"https://developer.ups.com/?loc=en_US\">here</a>&nbsp;and Manhattan Associates&#39;&nbsp;announcements related to this subject for the exact date. Once OAuth2.0 authentication is mandated by UPS, all access-key based authentications will stop working for existing accounts and all new and existing accounts will be required to leverage OAuth2.0.&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>UPS Access Key details (User Key and its Password) are not required to be configured for those accounts which utilize the UPS OAuth2.0 authentication.&nbsp;</div>\r\n\r\n<ul>\r\n\t<li><strong>Logistyx (Agile)</strong>&nbsp;- Logistyx&nbsp;provides the retailer with a user name which is required for any communication to the Logistyx server. The Logistyx server should be setup in the shipping location and it should be configured for supported carriers with the account name&nbsp;and any other necessary information.</li>\r\n\t<li>\r\n\t<p><strong>Steps to register FedEx through postman:</strong></p>\r\n\t</li>\r\n</ul>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>Open the postman</p>\r\n\t</li>\r\n\t<li>Select post request and copy the following URL based on the carrier.\r\n\t<ol>\r\n\t\t<li><strong>&nbsp;Fedex registration end point :</strong>&nbsp;{{url}}/parcel/api/parcel/process/fedex/register</li>\r\n\t\t<li><strong>&nbsp;Fedex subscription end point :</strong>&nbsp;{{url}}/parcel/api/parcel/process/fedex/subscribe</li>\r\n\t</ol>\r\n\t</li>\r\n\t<li>Choose form-data radio button.</li>\r\n\t<li>select Key as File (check the dropdown in the Key) and type file in the text box.</li>\r\n\t<li>Click Choose file button and upload the fedex registration excel sheet.</li>\r\n\t<li>Press Send and Download button, it will show the dialog(screenshot 2) then save it in .xlsx extension with the file name.</li>\r\n\t<li>Go to the path that we save the file in step 5 and open the excel.</li>\r\n</ol>\r\n\r\n<p><strong>Important note:&nbsp;</strong>The Send and Download button in postman ensure to store the documents based on server from the response.</p>\r\n\r\n<p>We can store PDF & other file formats with this option in case reprint is not working from UI.</p>\r\n\r\n<div class=\"warning\"><strong>Important note:&nbsp;</strong>Starting June 2024 (watch out for Manhattan Associates&#39;s communications regarding the exact date), all retailers using UPS services are required to migrate to the OAuth2.0 authentication. Retailers need to have a UPS user account&nbsp;to sign in to UPS and generate the required access and refresh tokens. Those retailers which do not have a user account should reach out to UPS to get one created.&nbsp;Retailers can choose to associate multiple shipper accounts with one user account, or they can maintain a user account per shipper account. The process of configuring UPS facility accounts&nbsp;in&nbsp;Manhattan Active&reg; Omni will be simpler if the shipper accounts are consolidated across as fewer UPS user accounts as possible.&nbsp;</div>\r\n\r\n<p><b><a id=\"Steps to adopt newer carrier webservice versions\" name=\"Steps to adopt newer carrier webservice versions\"></a></b><strong>Overview of Facility Account configuration</strong></p>\r\n\r\n<p>Facility accounts are configured in the Carrier Upgraded Facility Accounts UI or Carrier Facility Accounts UI:</p>\r\n\r\n<ul>\r\n\t<li><strong>Upgraded Carrier Facility Account</strong>&nbsp;- Use for implementation going live after the 21.2 market release when defining all carrier facility accounts. This configuration is maintained in the Upgraded Facility Account UI.\r\n\r\n\t<ul>\r\n\t\t<li><strong>Service Versions</strong>&nbsp;- Used in conjunction with the Upgraded Carrier Facility Account to define the web service version to use for the FedEx Ship API calls. This configuration is maintained in the Service Versions UI.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>Service Version is considered for FedEx web service implementations only.</div>\r\n\r\n<ul>\r\n\t<li><strong>Carrier Facility Accounts</strong>&nbsp;- This legacy table was used to define all carrier facility accounts for implementation prior to the 21.2 market release. This table is still supported for existing implementations,&nbsp;but new implementations should use the Upgraded Carrier Facility Account table to support easier future upgrades to newer carrier web service versions.&nbsp;This configuration is maintained in the Facility Account UI.</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;Since both&nbsp;the Upgraded Facility Account and&nbsp;Facility Account entities&nbsp;are&nbsp;considered transactional data, define these&nbsp;configurations from the org level where the orders are shipped (i.e., the org where the stores are defined).</div>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;Currently, upgraded&nbsp;web service&nbsp;versions&nbsp;are only supported for FedEx Ship API calls.&nbsp;</div>\r\n\r\n<p><strong><em>Use Case 1 - Add stores/facility accounts for a new&nbsp;implementation (no facility account records exist in either table)</em></strong></p>\r\n\r\n<p>To add Upgraded Facility Accounts for a new implementation or when a retailer wishes to upgrade its carrier web service version from the default version supported out of the box, follow these steps:</p>\r\n\r\n<ul>\r\n\t<li>List all available Service Versions either using the Provider Service Versions user interface or making the following Postman call</li>\r\n</ul>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp;{{url}}/parcel/api/parcel/serviceVersion</div>\r\n\r\n<ul>\r\n\t<li>\r\n\t<p>If the desired version&nbsp;is not available, use the API below to create it. Provider Service Versions UI can also be used for this purpose.</p>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp; {{url}}/parcel/api/parcel/serviceVersion/save</div>\r\n\r\n<div class=\"computer_code\">{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;VersionId&quot;: &quot;2&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;ShipServiceVersion&quot;: &quot;2020&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;TrackServiceVersion&quot;: &quot;2013&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Provider&quot;: &quot;FedEx&quot;<br />\r\n}</div>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;ShipServiceVersion and TrackSeviceVersion should be valid versions supported by Manhattan Active Omni. See&nbsp;<a href=\"https://omni.helpdocsonline.com/master-data-guide-2-2$serviceversions\">here</a>&nbsp;for further details.</div>\r\n\r\n<ul>\r\n\t<li>Open Carrier Upgraded Facility Accounts UI\r\n\t<ol>\r\n\t\t<li>Input the credentials to be used to connect to the carrier</li>\r\n\t\t<li>Input a valid Service Version&#39;s Version Id</li>\r\n\t\t<li>Mark Is Active as true</li>\r\n\t</ol>\r\n\t</li>\r\n</ul>\r\n\r\n<p>Alternatively, use the following Postman call to save the Upgraded Facility Account information</p>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp;{{url}}/parcel/api/parcel/upgradedFacilityAccount/save</div>\r\n\r\n<div class=\"computer_code\">{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;IsActive&quot;: false,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;UpgradedFacilityAccountId&quot;: &quot;2&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;CarrierCode&quot;: &quot;FDXE&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;FacilityCode&quot;: &quot;11224&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;VersionId&quot;: &quot;1&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;PrimaryAccountNumber&quot;: &quot;2312124214&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;SecondaryAccountNumber&quot;: &quot;123123&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;UserKey&quot;: &quot;User1314&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Password&quot;: &quot;2313a@3#$&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;HubId&quot;: &quot;21424&quot;<br />\r\n}</div>\r\n\r\n<p>All subsequent carrier requests should now go through the configured web service version using the</p>\r\n\r\n<ol>\r\n\t<li>Web service version configured against Version Id</li>\r\n\t<li>Upgraded Facility Account configured</li>\r\n</ol>\r\n\r\n<p><strong><em>Use Case 2 - Add stores/facility accounts to existing implementation where all existing records are in the Upgraded&nbsp;Facility Account entity</em></strong></p>\r\n\r\n<p>Follow the same steps as Use case 1</p>\r\n\r\n<p><strong><em>Use Case 3&nbsp;- Upgrade to a new web service version for existing implementation where all existing records reside in the legacy Carrier&nbsp;Facility Account</em></strong></p>\r\n\r\n<p>To add new Upgraded Facility Accounts, follow these steps:</p>\r\n\r\n<ul>\r\n\t<li>Open Carrier Upgraded Facility Accounts UI\r\n\t<ol>\r\n\t\t<li>Input the credentials to be used to connect to the carrier</li>\r\n\t\t<li>Input the Service Version&#39;s Version Id is already being used by the existing stores</li>\r\n\t\t<li>Mark Is Active as true</li>\r\n\t</ol>\r\n\t</li>\r\n</ul>\r\n\r\n<p>Alternatively, use the following Postman call to save the new Upgraded Facility Account information</p>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp;{{url}}/parcel/api/parcel/upgradedFacilityAccount/save</div>\r\n\r\n<div class=\"computer_code\">{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;IsActive&quot;: false,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;UpgradedFacilityAccountId&quot;: &quot;2&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;CarrierCode&quot;: &quot;FDXE&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;FacilityCode&quot;: &quot;11224&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;VersionId&quot;: &quot;1&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;PrimaryAccountNumber&quot;: &quot;2312124214&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;SecondaryAccountNumber&quot;: &quot;123123&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;UserKey&quot;: &quot;User1314&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Password&quot;: &quot;2313a@3#$&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;HubId&quot;: &quot;21424&quot;<br />\r\n}</div>\r\n\r\n<p>All carrier requests for the newly added stores should go through the configured web service version using the</p>\r\n\r\n<ol>\r\n\t<li>Web service version configured against Version Id</li>\r\n\t<li>Upgraded Facility Account configured</li>\r\n</ol>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div class=\"info\"><strong>Tip:</strong>&nbsp;If there are upgrade issues, set Is Active flag to false to rollback to default versions (version 2013 in the case of FedEx Ship API calls). For this to work, Carrier Facility Accounts should be setup.</div>\r\n\r\n<p><strong><em>Use Case 4&nbsp;- Upgrade to a new web service version for existing implementation where all existing records reside in the Upgraded Facility Account</em></strong></p>\r\n\r\n<p>To upgrade to an even newer carrier web service version (when the retailer is already using Upgraded Facility Accounts to connect to a non-default carrier version), follow the steps mentioned:</p>\r\n\r\n<ul>\r\n\t<li>Make a note of the Service Version&#39;s Version Id being used in the Upgraded Facility Accounts by either accessing the Carrier Upgraded Facility Accounts UI or making the following Postman call</li>\r\n</ul>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp;{{url}}/parcel/api/parcel/upgradedFacilityAccount</div>\r\n\r\n<ul>\r\n\t<li>Update the Service Version(s) for the Version Id noted down in the previous step by either utilizing the Provider Service Versions UI or making the following Postman call</li>\r\n</ul>\r\n\r\n<div class=\"computer_code\">API Name:&nbsp; {{url}}/parcel/api/parcel/serviceVersion/save</div>\r\n\r\n<div class=\"computer_code\">{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;VersionId&quot;: &quot;2&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;ShipServiceVersion&quot;: &quot;2020&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;TrackServiceVersion&quot;: &quot;2013&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Provider&quot;: &quot;FedEx&quot;<br />\r\n}</div>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: In the unlikely event of any upgrade issues, revert the service versions to the previous ones using the above-mentioned API.</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>If the Upgraded Facility Accounts are also required to be updated to enable connection to the newer webservice version - (a) Create new Upgraded Facility Accounts which are Active as false (b) Update the older Upgraded Facility Accounts&#39; Is Active to false (c) Update the new Upgraded Facility Accounts&#39; Is Active to true</div>\r\n\r\n<p><strong><em>Use Case 5&nbsp;- Add stores/facility accounts to existing implementation where&nbsp;all existing records reside&nbsp;in the legacy Carrier&nbsp;Facility Account&nbsp;entity</em></strong></p>\r\n\r\n<p>If the retailer does not wish to upgrade to any new web service versions while adding new stores/facility accounts, they can continue adding new accounts to the legacy Facility Account entity.</p>\r\n\r\n<p><strong><em><a id=\"fedex_rest_track_use_cases\" name=\"fedex_rest_track_use_cases\"></a>Use Case 6&nbsp;- Upgrade an&nbsp;existing implementation where all the existing records reside in the legacy Carrier&nbsp;Facility Account to the FedEx REST Track API</em></strong></p>\r\n\r\n<ul>\r\n\t<li><a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;required to leverage the FedEx REST Track API</li>\r\n\t<li>Update the Client Key and Client Secret in the FedEx Track REST Configuration section of the required Carrier Facility Accounts. Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities if needed.&nbsp;</li>\r\n\t<li>Retain the Primary Account Number, Secondary Account Number, User Key, and Password attributes, if already configured, as they are still required for the FedEx non-track web service APIs to work</li>\r\n\t<li>Enable the &quot;<strong>Manhattan Active - FedEx REST Track&quot;&nbsp;</strong>change in behavior. Refer to the&nbsp;<a href=\"/carriers$enable_fedex_rest_track\">Enable FedEx REST Track API Upgrade</a>&nbsp;for more details.</li>\r\n</ul>\r\n\r\n<p><strong><em>Use Case 7&nbsp;- Upgrade an&nbsp;existing implementation where all the existing records reside in the Carrier Upgraded Facility Account to the FedEx REST Track API</em></strong></p>\r\n\r\n<ul>\r\n\t<li><a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;required to leverage the FedEx REST Track API</li>\r\n\t<li>Update the Client Key and Client Secret in the FedEx Track REST Configuration section of the required Carrier Upgraded Facility Accounts. Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities if needed.&nbsp;</li>\r\n\t<li>Retain the Primary Account Number, Secondary Account Number, User Key, and Password attributes, if already configured, as they are still required for the FedEx non-track web service APIs to work. Ensure that the required Carrier Upgraded Facility Accounts are active (Is Active = true).</li>\r\n\t<li>Enable the &quot;<strong>Manhattan Active - FedEx REST Track&quot;&nbsp;</strong>change in behavior. Refer to the&nbsp;<a href=\"/carriers$enable_fedex_rest_track\">Enable FedEx REST Track API Upgrade</a>&nbsp;for more details.</li>\r\n</ul>\r\n\r\n<p><em><strong>Use Case 8 - Add new stores to an existing implementation which already uses the FedEx REST Track API and where all the existing records reside in the&nbsp;legacy Carrier&nbsp;Facility Account</strong></em></p>\r\n\r\n<ul>\r\n\t<li>If the retailer uses a separate FedEx Account per store, they need to set them&nbsp;up first. Next, they need to associate the new accounts with the existing project or a new one if its account limit is exhausted. Refer to the&nbsp;<a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;section for more information and execute the steps needed.&nbsp;</li>\r\n\t<li>Add new Carrier Facility Accounts for the new stores and configure the Client Key and Client Secret in them.&nbsp;Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them&nbsp;back, if needed.</li>\r\n\t<li>Configure the Primary Account Number, Secondary Account Number, User Key, and Password attributes as well if the retailer wishes to use the FedEx non-track APIs too in the new stores</li>\r\n</ul>\r\n\r\n<p><em><strong>Use Case 9&nbsp;- Add new stores to an existing implementation which already uses the FedEx REST Track API and where all the existing records reside in the&nbsp;Upgraded Carrier&nbsp;Facility Account</strong></em></p>\r\n\r\n<ul>\r\n\t<li>If the retailer uses a separate FedEx Account per store, they need to set them&nbsp;up first. Next, they need to associate the new accounts with the existing project or a new one if its account limit is exhausted. Refer to the&nbsp;<a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;section for more information and execute the steps needed.&nbsp;</li>\r\n\t<li>Add new Carrier Upgraded Facility Accounts for the new stores and configure the Client Key and Client Secret in them.&nbsp;Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them&nbsp;back, if needed.</li>\r\n\t<li>Configure the Primary Account Number, Secondary Account Number, User Key, and Password attributes as well&nbsp;if the retailer wishes to use FedEx non-track APIs too in the new stores.&nbsp;Ensure that the new Carrier Upgraded Facility Accounts are marked as active (Is Active = true).</li>\r\n</ul>\r\n\r\n<p><em><strong>Use Case 10 - An existing implementation implementing FedEx integration for the very first time where all the existing accounts are set up in the legacy Carrier Facility Account</strong></em></p>\r\n\r\n<ul>\r\n\t<li><a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;required to leverage the FedEx REST Track API</li>\r\n\t<li>Add new Carrier Facility Accounts for all the stores and configure the Client Key and Client Secret in them.&nbsp;Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them&nbsp;back, if needed.</li>\r\n\t<li>Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Facility Accounts.</li>\r\n\t<li>Enable the &quot;<strong>Manhattan Active - FedEx REST Track&quot;&nbsp;</strong>change in behavior. Refer to the&nbsp;<a href=\"/carriers$enable_fedex_rest_track\">Enable FedEx REST Track API Upgrade</a>&nbsp;for more details.</li>\r\n</ul>\r\n\r\n<p><em><strong>Use Case 11&nbsp;- An existing implementation implementing FedEx integration for the very first time where all the existing accounts are set up in the Upgraded Carrier Facility Account</strong></em></p>\r\n\r\n<ul>\r\n\t<li><a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;required to leverage the FedEx REST Track API</li>\r\n\t<li>Add new Carrier Upgraded Facility Accounts for all the stores and configure the Client Key and Client Secret in them.&nbsp;Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them&nbsp;back, if needed.</li>\r\n\t<li>Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Upgraded Facility Accounts.</li>\r\n\t<li>Ensure that the Carrier Upgraded Facility Accounts are marked as Active (Is Active = true).</li>\r\n\t<li>Enable the &quot;<strong>Manhattan Active - FedEx REST Track&quot;&nbsp;</strong>change in behavior. Refer to the&nbsp;<a href=\"/carriers$enable_fedex_rest_track\">Enable FedEx REST Track API Upgrade</a>&nbsp;for more details.</li>\r\n</ul>\r\n\r\n<p><em><strong>Use Case 12 - A new implementation wishing to implement FedEx</strong></em></p>\r\n\r\n<ul>\r\n\t<li><a href=\"/carriers$fedex_rest_track_client_id_secret\">Generate the FedEx Client Key and Client Secret</a>&nbsp;required to leverage the FedEx REST Track API</li>\r\n\t<li>Add new Carrier Upgraded Facility Accounts for all the stores and configure the Client Key and Client Secret in them.&nbsp;Use the&nbsp;<a href=\"/carriers$mass_updates_facility_accounts\">data loader</a>&nbsp;MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them&nbsp;back, if needed.</li>\r\n\t<li>Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Upgraded Facility Accounts.</li>\r\n\t<li>Ensure that the Carrier Upgraded Facility Accounts are marked as Active (Is Active = true).</li>\r\n\t<li>Enable the &quot;<strong>Manhattan Active - FedEx REST Track&quot;&nbsp;</strong>change in behavior. Refer to the&nbsp;<a href=\"/carriers$enable_fedex_rest_track\">Enable FedEx REST Track API Upgrade</a>&nbsp;for more details.</li>\r\n</ul>\r\n\r\n<div class=\"warning\">For use cases 6 through 12, enable the &quot;<strong>Manhattan Active - FedEx REST Track</strong>&quot; change in behavior only after the FedEx Client Key&nbsp;and Client Secret are configured in the Carrier Facility Accounts / Carrier Upgraded Facility Accounts meant to make use of&nbsp;the FedEx Track API.</div>\r\n\r\n<p><em><strong><a id=\"upsoauth2\" name=\"upsoauth2\"></a>Use Case 13 - UPS OAuth 2.0</strong></em></p>\r\n\r\n<p>Starting June 2024, UPS mandates that all its clients migrate from its access key-based authentication to OAuth 2.0. As a pre-requisite, all existing and new retailers, intending to use UPS services, are required to work with UPS to get a user account created if they don&rsquo;t have one already. Retailers can opt for associating multiple shipper accounts with one user account, or they can go for one user account per shipper account. The process of setting up the UPS facility accounts&nbsp;in&nbsp;MA Omni will be simpler if the shipper accounts are consolidated across as fewer UPS user accounts as possible.</p>\r\n\r\n<p>As part of UPS OAuth2.0 authentication, UPS provides access and refresh tokens. The access token is the bearer token that is included with a UPS API request, and it serves as the authorization method to the UPS API endpoint. The refresh token is used to obtain fresh access and refresh tokens after the current access token has expired. Once the access and refresh tokens are generated, they apply to all the shipper accounts associated with the user account used to sign in to UPS.&nbsp;</p>\r\n\r\n<p>Both the access and refresh tokens&rsquo; validities are governed by UPS. Manhattan Associates recommends that all retailers connect with UPS to learn the exact expiry durations of the two tokens. The access token, if expired, is systemically refreshed using the refresh token. However, reconfiguration efforts are involved if the refresh token has also expired due to inactivity. Consequently, it&rsquo;s imperative that UPS services go live before the refresh token&nbsp;expires. In other words, UPS facility accounts should be configured within the refresh token expiration window from the stipulated go live date to avoid UPS re-signin effort.</p>\r\n\r\n<p><i>13.1&nbsp;Upgrade an&nbsp;existing implementation to OAuth 2.0</i></p>\r\n\r\n<ol>\r\n\t<li>Ensure that the retailer has a valid&nbsp;<a href=\"http://ups.com/\">UPS.com</a>&nbsp;user account in place with the required shipper accounts configured.</li>\r\n\t<li>Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI (wherever the existing records reside) and filter for the UPS accounts. Choose an account and go into its details.</li>\r\n\t<li>Tap on the Sign in to UPS button and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes.</li>\r\n\t<li>Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account&rsquo;s UPS token&rsquo;s key to the other facility accounts belonging to the same organization. Refer to ProActive for more details on the API.</li>\r\n\t<li>Repeat steps 3 and 4 for the facility accounts belonging to other organizations.</li>\r\n</ol>\r\n\r\n<p><i>13.2&nbsp;Add new stores to an existing implementation which already uses UPS OAuth 2.0</i></p>\r\n\r\n<ol>\r\n\t<li>Associate the new stores&rsquo; shipper accounts with the&nbsp;<a href=\"http://ups.com/\">UPS.com</a>&nbsp;user account to be used for signing in to UPS.</li>\r\n\t<li>Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI (wherever the&nbsp;existing records reside) and create a new facility account for one of the new stores. No need to enter the User Key and the Password.</li>\r\n\t<li>Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes.</li>\r\n\t<li>Create the Carrier Facility Accounts / Carrier Upgraded Facility Accounts for other stores belonging to the same organization. No need to enter the User Key and the Password.</li>\r\n\t<li>Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account&rsquo;s UPS token&rsquo;s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API.</li>\r\n\t<li>Repeat steps 2 through 5 for stores belonging to other organizations.</li>\r\n</ol>\r\n\r\n<p><i>13.3&nbsp;An existing implementation implementing UPS integration for the very first time</i></p>\r\n\r\n<ol>\r\n\t<li>Ensure that the retailer has a valid&nbsp;<a href=\"http://ups.com/\">UPS.com</a>&nbsp;user account in place with the required shipper accounts configured.</li>\r\n\t<li>Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts&nbsp;UI (wherever the existing carriers&#39; records reside) and create a new UPS facility account for one of the stores. No need to enter the User Key and the Password.</li>\r\n\t<li>Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes.</li>\r\n\t<li>Create the UPS Carrier Facility Accounts / Carrier Upgraded Facility Accounts for other stores belonging to the same organization. No need to enter the User Key and the Password.</li>\r\n\t<li>Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account&rsquo;s UPS token&rsquo;s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API.</li>\r\n\t<li>Repeat steps 2 through 5 for stores belonging to other organizations.</li>\r\n</ol>\r\n\r\n<p><i>13.4&nbsp;A new implementation wishing to implement UPS</i></p>\r\n\r\n<ol>\r\n\t<li>Ensure that the retailer has a valid&nbsp;<a href=\"http://ups.com/\">UPS.com</a>&nbsp;user account in place with the required shipper accounts configured.</li>\r\n\t<li>Go to the Carrier Upgraded Facility Accounts UI and create a facility account for one of the stores. No need to enter the User Key and the Password.</li>\r\n\t<li>Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes.</li>\r\n\t<li>Create the Carrier Upgraded Facility Accounts for the other stores belonging to the same organization. No need to enter the User Key and the Password.</li>\r\n\t<li>Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account&rsquo;s UPS token&rsquo;s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API.</li>\r\n\t<li>Repeat steps 2 through 5 for stores belonging to other organizations.</li>\r\n</ol>\r\n\r\n<p><i>13.5&nbsp;An existing UPS implementation whose refresh tokens have expired</i></p>\r\n\r\n<ol>\r\n\t<li>Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI and filter for the UPS accounts. Choose an account and go into its details.</li>\r\n\t<li>Tap on the Sign in to UPS button and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes.</li>\r\n\t<li>Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account&rsquo;s UPS token&rsquo;s key to the other facility accounts belonging to the same organization. Refer to ProActive for more details on the API.&nbsp;</li>\r\n\t<li>Repeat steps 2 and 3 for the facility accounts belonging to other organizations.</li>\r\n</ol>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>As a general guideline, the UPS sign in key copy process will be the easiest if the shipper accounts (stores) which belong to a UPS user account have their corresponding Carrier Facility Accounts / Carrier Upgraded Facility Accounts belonging to the same organization in MA Omni.</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>To avoid re-sign in&nbsp;efforts, ensure that the UPS services go live before the UPS OAuth2.0 refresh token expiry. Reach out to UPS support to learn about the token expiry windows.</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>Even though, leveraging the&nbsp;POST {{url}}/parcel/api/parcel/copyUPSAuth API is the most effortless way of upgrading to / enabling UPS OAuth2.0 authentication, it is an optional process and the retailer can choose to manually sign in to each account individually.&nbsp;</div>\r\n\r\n<p><strong><a id=\"serviceversions\" name=\"serviceversions\"></a>Service Versions:</strong></p>\r\n\r\n<p>Service Versions configuration entity&nbsp;maintains the carrier web service versions supported by Manhattan Active Omni. These are maintained in the Provider Service Versions&nbsp;UI.</p>\r\n\r\n<p>The following FedEx web service versions are supported by Manhattan Active Omni:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p>Request Type</p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">Versions</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Ship</td>\r\n\t\t\t<td>2013 & 2020</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Track</td>\r\n\t\t\t<td>2013</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>The FedEx webservice versions 2013 and 2020, specified in this document, are the marketing versions used by FedEx and they correspond to FedEx WSDL versions 13&nbsp;and 26&nbsp;respectively.</div>\r\n\r\n<p>Tabulated is the seed data provided as part of this entity:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p>Version Id (BK)</p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">Provider</th>\r\n\t\t\t<th scope=\"col\">Ship</th>\r\n\t\t\t<th scope=\"col\">Track</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1</td>\r\n\t\t\t<td>FedEx</td>\r\n\t\t\t<td>2020</td>\r\n\t\t\t<td>2013</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Any combination of supported web service versions can be defined in the Service Versions table.</p>\r\n\r\n<p><strong>Upgraded Facility Account:</strong></p>\r\n\r\n<p>Upgraded Facility Account is a transaction entity which maintains facility account information along with the service version Id.&nbsp;It helps Manhattan Active Omni to communicate with carriers&nbsp;using the intended web service versions.</p>\r\n\r\n<p>Sample data:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p>Upgraded Facility Account Id (BK)</p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\">Carrier Code</th>\r\n\t\t\t<th scope=\"col\">Facility Code</th>\r\n\t\t\t<th scope=\"col\">Version Id</th>\r\n\t\t\t<th scope=\"col\">Primary Account Number</th>\r\n\t\t\t<th scope=\"col\">Secondary Account Number</th>\r\n\t\t\t<th scope=\"col\">User Key</th>\r\n\t\t\t<th scope=\"col\">Password</th>\r\n\t\t\t<th scope=\"col\">Hub Id</th>\r\n\t\t\t<th scope=\"col\">Is Active</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>1</td>\r\n\t\t\t<td>FDXE</td>\r\n\t\t\t<td>Store1</td>\r\n\t\t\t<td>1</td>\r\n\t\t\t<td>604337968</td>\r\n\t\t\t<td>118616237</td>\r\n\t\t\t<td>****</td>\r\n\t\t\t<td>****</td>\r\n\t\t\t<td>2348</td>\r\n\t\t\t<td>True</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>The following validation is&nbsp;enforced during insertion of records to this entity:</p>\r\n\r\n<ul>\r\n\t<li>Only one record can be active for each Carrier and Facility Code combination</li>\r\n\t<li>Version ID cannot be null for FedEx. However, the configured Service Version ID is considered for FedEx web service implementations only.</li>\r\n\t<li>For FedEx, Version ID must be a valid version ID specified in the Service Versions table</li>\r\n\t<li>Carrier code must already be configured in the carrier master</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>When FedEx&nbsp;Ground Economy&nbsp;is used, in the 2013 web service version, the FedEx Ground Economy Tracking Number is persisted. On the other hand, when the 2020 web service version is used, the USPS Tracking Number is persisted.</div>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p><a id=\"mup_upgrade\" name=\"mup_upgrade\"></a>The UIs for both the Carrier Facility Accounts and the Carrier Upgraded Facility Accounts use the MUP framework. Refer to the&nbsp;<a href=\"https://omni.helpdocsonline.com/config-ui$permissions\">Config UI</a>&nbsp;page for permissions required to view and maintain records in these UIs.</p>\r\n\r\n<h4>Package Types</h4>\r\n\r\n<p>Package type&nbsp;indicates&nbsp;the physical properties (dimensions) of the shipping container that is used for delivery. These package types are used by the Fulfillment component. Configure on the&nbsp;Package Types UI. The mapping with package types used by the carrier is contained in the Package Types UI.&nbsp;</p>\r\n\r\n<h4>Accessorials</h4>\r\n\r\n<p>Accessorials&nbsp;represent any&nbsp;special carrier-offered delivery services.&nbsp;Examples include Saturday pickup, Saturday delivery, hold at location. Configure the&nbsp;Accessorials&nbsp;UI.</p>\r\n\r\n<h4>Carrier Accessorials</h4>\r\n\r\n<p>Carrier accessorials&nbsp;define&nbsp;the list of accessorials that are supported for a particular carrier. Configure on the Carriers/Carrier Accessorial&nbsp;UI.</p>\r\n\r\n<h4>Ship Via Accessorials</h4>\r\n\r\n<p>Ship via accessorials define&nbsp;the list of accessorials used by a particular ship via. Configure on the Ship Vias/Ship Via Accessorials&nbsp;UI.</p>\r\n\r\n<h4>Carrier Package Types</h4>\r\n\r\n<p>Carrier package type&nbsp;defines&nbsp;the list of carrier-specific package types which a carrier uses and the mapping&nbsp;to the package types used by Fulfillment. Configure on the Carriers/Carrier Package Type&nbsp;UI.</p>\r\n\r\n<h4>Carrier Status Mapping</h4>\r\n\r\n<p>This defines the list of carrier-specific package&nbsp;statuses that the carrier considers as in transit. Fulfillment can reference this status list when receiving package status updates from the carrier to determine whether to update the package status to &quot;Shipped.&quot;&nbsp;Configure on the Carrier Status Mapping UI.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\"><strong>UI Name</strong></th>\r\n\t\t\t<th scope=\"col\"><strong>Component</strong></th>\r\n\t\t\t<th scope=\"col\">\r\n\t\t\t<p><strong>Entity Name</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th scope=\"col\"><strong>Seed Data Present?</strong></th>\r\n\t\t\t<th scope=\"col\"><strong>Seed Data Profil</strong>e</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Accessorials</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>Accessorial</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carrier Status Mapping</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>StatusMap</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\" rowspan=\"2\">Carriers</td>\r\n\t\t\t<td colspan=\"1\" rowspan=\"2\">Parcel</td>\r\n\t\t\t<td>Carrier</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>CarrierSchedulingHoliday</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carriers/Service Level</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ServiceLevel</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carriers/Carrier Accessorial</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>CarrierAccessorial</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carriers/Carrier Package Type</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>CarrierPackageType</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Facility Accounts</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>FacilityAccount</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N\\a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Modes</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>Mode</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Package Types</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>PackageType</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Ship&nbsp;Vias</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ShipVia</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Ship&nbsp;Vias/Ship Via&nbsp;Accessorials</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ShipViaAccessorial</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td rowspan=\"2\">Shipping Methods</td>\r\n\t\t\t<td rowspan=\"2\">Parcel</td>\r\n\t\t\t<td>ShippingMethod</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>ShippingMethodShipVia</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>Carrier Rates</p>\r\n\t\t\t</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ShippingRate</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carrier Scheduling</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>CarrierSchedulingOperatingHrs</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carrier Zone Transit Time</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ZoneTransitTime</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carrier Zones</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>Zone</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Provider Service Versions</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>ServiceVersion</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Base</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Carrier Upgraded Facility Accounts</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>UpgradedFacilityAccount</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Region Lookup</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>RegionLookUp</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Region Schemas</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>RegionSchema</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Region Schemas / Region</td>\r\n\t\t\t<td>Parcel</td>\r\n\t\t\t<td>Region</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>N/a</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><br />\r\nRegistration and Subscription</h4>\r\n\r\n<p>Initial registration and subscription configuration for UPS and FedEx must be performed before any shipping can occur.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Carrier</th>\r\n\t\t\t<th>Registration</th>\r\n\t\t\t<th>Subscription</th>\r\n\t\t\t<th>\r\n\t\t\t<p>Comments</p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>UPS</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>Reach out to UPS Support</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>FedEx</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>This should be done directly from FedEx website ( DRC)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Logistyx</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>No</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><br />\r\n<strong style=\"color: rgb(77, 77, 77); font-size: 12px;\"><a id=\"enable_fedex_rest_track\" name=\"enable_fedex_rest_track\"></a>&nbsp;FedEx REST Track API</strong></h4>\r\n\r\n<p>FedEx has upgraded their Track API from the Web Services to the REST protocol. Manhattan Associates is slated to release a new version of its FedEx Track API which is compatible with the REST protocol shortly after the 24.1 Omni market release in late January 2024.&nbsp;FedEx plans to deprecate the Web Services version of its Track API in May 2024.</p>\r\n\r\n<p>As of late January 2024, the FedEx REST Track API is available for use&nbsp;via&nbsp;<a hqid=\"3092761\" href=\"/behaviorchange\">Change in Behavior</a>.</p>\r\n\r\n<div class=\"warning\">Enable the &quot;<strong>Manhattan Active - FedEx REST Track</strong>&quot; change in behavior only when the FedEx Client Key&nbsp;and Client Secret are&nbsp;configured in the Carrier Facility Accounts / Carrier Upgraded Facility Accounts meant to utilize the FedEx Track API.</div>\r\n\r\n<p><strong><a id=\"fedex_rest_track_client_id_secret\" name=\"fedex_rest_track_client_id_secret\"></a></strong>Retailers are required to configure the Client Key and the Client Secret in the Carrier Facility Accounts or the Upgraded Carrier Facility Accounts they have set up the REST FedEx Track Service. They can obtain the Client Key and the Client Secret by following the steps below:</p>\r\n\r\n<ol>\r\n\t<li>Login to the FedEx Developer Portal using their existing or a new FedEx user account</li>\r\n\t<li>Create an Organization</li>\r\n\t<li>Create one or more FedEx Accounts; a retailer&nbsp;may choose to define an account per facility or may share an account across its facilities. However, at least one account needs to exist before moving on to the next step.</li>\r\n\t<li>Create a &quot;Track API&quot; Project within the Organization</li>\r\n\t<li>Associate the FedEx Accounts with the Project</li>\r\n\t<li>Once the Project is created, its Client Key and Client Secret are generated; all the Accounts associated with the Project share the same Client Key&nbsp;and Client Secret</li>\r\n\t<li>Configure the Client Key&nbsp;and Client Secret in the Carrier Facility Accounts / Upgraded Carrier Facility Accounts setup in Manhattan Active Omni for the required facilities</li>\r\n</ol>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;The details above, for example, Projects within an Organization, Accounts within a Project, are all subject to limits imposed by FedEx. Work with the FedEx team to get the latest updates on these limits.</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>Additionally, there are transaction quotas imposed by FedEx on the REST Track API calls made by a Project per day and per second. Work with them to get the latest information on these limits.</div>\r\n\r\n<p><strong><a id=\"mass_updates_facility_accounts\" name=\"mass_updates_facility_accounts\"></a></strong>If a retailer wishes&nbsp;to do mass updates, for example, configuring the Client Key and Client Secret while upgrading to the FedEx REST Track API,&nbsp;to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts, they can leverage the Data Loader facilities introduced as part of the MUP UIs. They can export the configured accounts to an Excel file by tapping on the &quot;Export Data Loader&quot; button, make configuration updates, and then import the updated data back by tapping on the &quot;Import Data Loader&quot; button. Retailers also have the capability to export only the filtered data to an Excel&nbsp;file and then import it back after making the required updates.</p>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>Export and Import Data Loader functionalities support up to 10,000 and 1,000 records respectively.</div>\r\n\r\n<p>Refer to&nbsp;<a href=\"/carriers$fedex_rest_track_use_cases\">use cases 6 - 12</a>&nbsp;above for examples.</p>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 50915,
  "scraped_at": "2025-08-09T22:11:12.476954",
  "content_clean": "Home ››Administrator Tools››Master Data Guides››Master Data Guide - Omni ››Carriers Carriers Carriers are companies that transport goods to a given destination. Many different carriers, along with their service levels, can be configured and selected based on rank, rate, and prioritized based on a configured SLA. Modes Mode indicates the mode of transportation, such as air, ocean, truckload, less-than-truckload (LTL) or parcel. The mode used for all third-party carrier integration is 'Parcel'.  Available on the Modes UI. Carriers The carrier entity represents the third-party carriers (FedEx, UPS, DHL, USPS, etc.) with which the retailer has partnered. All parcel services use this entity to contact the correct carrier for shipping services. Carriers are configured in the Carriers UI. Carrier code and carrier mapping code should be the same for FedEx and UPS. Service Levels This entity stores the service level information offered by each carrier that is defined in the Carrier entity. The service level indicates the service level agreement offered by a particular carrier for delivery. For example, the FedEx 2 Day service level guarantees delivery of shipments within 2 days. Configure the Carriers/Service Level UI. Note : In order to obtain the most updated service levels and other data, work with the carrier. Ship Vias A ship via encapsulates a carrier, service level, and a ship via accessorial combination. This is often set up specifically by a retailer according to the standard shipping options that they offer. For example, a ship via can be created that is called \"Express FedEx with signature\" that has carrier= FedEx Express, Service level = FedEx Express Saver, and Accessorial = Adult Signature. Configure on the Ship Vias/Ship Via Accessorials UI. Note: An order can be created with one combination of Carrier Code and Service Level and have a different combination of Carrier Code and Service Level at the time of shipment. Shipping Methods The shipping method defines the type of carrier services allowed for the shipment (isAirShippingAllowed, isParcelShippingAllowed, isFrozenShippingAllowed, isReturnShippingMethod.) For each shipping method, a prioritized list of ship vias is also defined. Configure on the Shipping Methods UI. Ship Via Selection Logic In addition to the ranking of ship vias in the shipping method entity, there is also configuration to indicate a preferred carrier for each location. The inventory location configuration has a preferred carrier which, if populated, overrides the ship via ranking within the shipping method. For example: Two Ship Vias from the same carrier are configured within a shipping method. Ship via Rank FDXFG 1 FDX2D 2 When that shipping method is used, the system selects FDXFG since they are the same carrier, and it has a rank of 1. In a different example: Two ship via's from different carriers are configured in the shipping method, and the preferred carrier from the inventory location is UPS. Ship via Rank FDXFG 1 UPSGR 2 In this case, since there is a preferred carrier, UPSGR will be selected over the EDXFG option. If we remove the preferred carrier from the inventory location, then the FDXFG will be selected. If the preferred carrier is not set for a location, then the system always pickup the first ship via. If Rate-Based Carrier Selection, Rank-Based Carrier Selection, or On Hand SLA is enabled, the logic changes for selecting a Ship Via. See documentation for all three of these features here. Facility Accounts Facility accounts hold the account details that are needed for integration with carriers. Some retailers have one corporate account that is used by all the stores, while some prefer to use separate accounts for each store. These accounts are used by the carrier to invoice the shipper. Carrier specific information: FedEx - The facility account contains the FedEx Account Number and the FedEx Meter Number. The Account Number represents the registered account with FedEx and its used by FedEx to identify the shipper. The FedEx Meter Number is used by FedEx to calculate invoices and track requests from Store Fulfillment to their system. Note: FedEx Account Number and Meter Number are required to be configured only for those accounts which are configured to utilize the FedEx web services. They are not needed in the accounts meant to leverage the FedEx REST Track service. Note: FedEx plans to deprecate the Web Services version of the Track API in May 2024. Refer to FedEx documentation here for the exact date. UPS - UPS uses a shipper number or account number as well as an access key number. A UPS account number or shipper number is a unique six-digit reference number assigned by UPS to a shipper for billing purposes. The access key number provided by UPS is used to validate access to the UPS system and holds the information needed to ship, track, or rate a package. Note: UPS plans to stop supporting access key based account authentication starting June 2024. Refer to the UPS Developer documentation available here and Manhattan Associates' announcements related to this subject for the exact date. Once OAuth2.0 authentication is mandated by UPS, all access-key based authentications will stop working for existing accounts and all new and existing accounts will be required to leverage OAuth2.0. Note: UPS Access Key details (User Key and its Password) are not required to be configured for those accounts which utilize the UPS OAuth2.0 authentication. Logistyx (Agile) - Logistyx provides the retailer with a user name which is required for any communication to the Logistyx server. The Logistyx server should be setup in the shipping location and it should be configured for supported carriers with the account name and any other necessary information. Steps to register FedEx through postman: Open the postman Select post request and copy the following URL based on the carrier. Fedex registration end point : {{url}}/parcel/api/parcel/process/fedex/register Fedex subscription end point : {{url}}/parcel/api/parcel/process/fedex/subscribe Choose form-data radio button. select Key as File (check the dropdown in the Key) and type file in the text box. Click Choose file button and upload the fedex registration excel sheet. Press Send and Download button, it will show the dialog(screenshot 2) then save it in .xlsx extension with the file name. Go to the path that we save the file in step 5 and open the excel. Important note: The Send and Download button in postman ensure to store the documents based on server from the response. We can store PDF & other file formats with this option in case reprint is not working from UI. Important note: Starting June 2024 (watch out for Manhattan Associates's communications regarding the exact date), all retailers using UPS services are required to migrate to the OAuth2.0 authentication. Retailers need to have a UPS user account to sign in to UPS and generate the required access and refresh tokens. Those retailers which do not have a user account should reach out to UPS to get one created. Retailers can choose to associate multiple shipper accounts with one user account, or they can maintain a user account per shipper account. The process of configuring UPS facility accounts in Manhattan Active® Omni will be simpler if the shipper accounts are consolidated across as fewer UPS user accounts as possible. Overview of Facility Account configuration Facility accounts are configured in the Carrier Upgraded Facility Accounts UI or Carrier Facility Accounts UI: Upgraded Carrier Facility Account - Use for implementation going live after the 21.2 market release when defining all carrier facility accounts. This configuration is maintained in the Upgraded Facility Account UI. Service Versions - Used in conjunction with the Upgraded Carrier Facility Account to define the web service version to use for the FedEx Ship API calls. This configuration is maintained in the Service Versions UI. Note: Service Version is considered for FedEx web service implementations only. Carrier Facility Accounts - This legacy table was used to define all carrier facility accounts for implementation prior to the 21.2 market release. This table is still supported for existing implementations, but new implementations should use the Upgraded Carrier Facility Account table to support easier future upgrades to newer carrier web service versions. This configuration is maintained in the Facility Account UI. Note: Since both the Upgraded Facility Account and Facility Account entities are considered transactional data, define these configurations from the org level where the orders are shipped (i.e., the org where the stores are defined). Note: Currently, upgraded web service versions are only supported for FedEx Ship API calls. Use Case 1 - Add stores/facility accounts for a new implementation (no facility account records exist in either table) To add Upgraded Facility Accounts for a new implementation or when a retailer wishes to upgrade its carrier web service version from the default version supported out of the box, follow these steps: List all available Service Versions either using the Provider Service Versions user interface or making the following Postman call API Name: {{url}}/parcel/api/parcel/serviceVersion If the desired version is not available, use the API below to create it. Provider Service Versions UI can also be used for this purpose. API Name:  {{url}}/parcel/api/parcel/serviceVersion/save { \"VersionId\": \"2\", \"ShipServiceVersion\": \"2020\", \"TrackServiceVersion\": \"2013\", \"Provider\": \"FedEx\" } Note: ShipServiceVersion and TrackSeviceVersion should be valid versions supported by Manhattan Active Omni. See here for further details. Open Carrier Upgraded Facility Accounts UI Input the credentials to be used to connect to the carrier Input a valid Service Version's Version Id Mark Is Active as true Alternatively, use the following Postman call to save the Upgraded Facility Account information API Name: {{url}}/parcel/api/parcel/upgradedFacilityAccount/save { \"IsActive\": false, \"UpgradedFacilityAccountId\": \"2\", \"CarrierCode\": \"FDXE\", \"FacilityCode\": \"11224\", \"VersionId\": \"1\", \"PrimaryAccountNumber\": \"2312124214\", \"SecondaryAccountNumber\": \"123123\", \"UserKey\": \"User1314\", \"Password\": \"2313a@3#$\", \"HubId\": \"21424\" } All subsequent carrier requests should now go through the configured web service version using the Web service version configured against Version Id Upgraded Facility Account configured Use Case 2 - Add stores/facility accounts to existing implementation where all existing records are in the Upgraded Facility Account entity Follow the same steps as Use case 1 Use Case 3 - Upgrade to a new web service version for existing implementation where all existing records reside in the legacy Carrier Facility Account To add new Upgraded Facility Accounts, follow these steps: Open Carrier Upgraded Facility Accounts UI Input the credentials to be used to connect to the carrier Input the Service Version's Version Id is already being used by the existing stores Mark Is Active as true Alternatively, use the following Postman call to save the new Upgraded Facility Account information API Name: {{url}}/parcel/api/parcel/upgradedFacilityAccount/save { \"IsActive\": false, \"UpgradedFacilityAccountId\": \"2\", \"CarrierCode\": \"FDXE\", \"FacilityCode\": \"11224\", \"VersionId\": \"1\", \"PrimaryAccountNumber\": \"2312124214\", \"SecondaryAccountNumber\": \"123123\", \"UserKey\": \"User1314\", \"Password\": \"2313a@3#$\", \"HubId\": \"21424\" } All carrier requests for the newly added stores should go through the configured web service version using the Web service version configured against Version Id Upgraded Facility Account configured Tip: If there are upgrade issues, set Is Active flag to false to rollback to default versions (version 2013 in the case of FedEx Ship API calls). For this to work, Carrier Facility Accounts should be setup. Use Case 4 - Upgrade to a new web service version for existing implementation where all existing records reside in the Upgraded Facility Account To upgrade to an even newer carrier web service version (when the retailer is already using Upgraded Facility Accounts to connect to a non-default carrier version), follow the steps mentioned: Make a note of the Service Version's Version Id being used in the Upgraded Facility Accounts by either accessing the Carrier Upgraded Facility Accounts UI or making the following Postman call API Name: {{url}}/parcel/api/parcel/upgradedFacilityAccount Update the Service Version(s) for the Version Id noted down in the previous step by either utilizing the Provider Service Versions UI or making the following Postman call API Name:  {{url}}/parcel/api/parcel/serviceVersion/save { \"VersionId\": \"2\", \"ShipServiceVersion\": \"2020\", \"TrackServiceVersion\": \"2013\", \"Provider\": \"FedEx\" } Note: In the unlikely event of any upgrade issues, revert the service versions to the previous ones using the above-mentioned API. Note: If the Upgraded Facility Accounts are also required to be updated to enable connection to the newer webservice version - (a) Create new Upgraded Facility Accounts which are Active as false (b) Update the older Upgraded Facility Accounts' Is Active to false (c) Update the new Upgraded Facility Accounts' Is Active to true Use Case 5 - Add stores/facility accounts to existing implementation where all existing records reside in the legacy Carrier Facility Account entity If the retailer does not wish to upgrade to any new web service versions while adding new stores/facility accounts, they can continue adding new accounts to the legacy Facility Account entity. Use Case 6 - Upgrade an existing implementation where all the existing records reside in the legacy Carrier Facility Account to the FedEx REST Track API Generate the FedEx Client Key and Client Secret required to leverage the FedEx REST Track API Update the Client Key and Client Secret in the FedEx Track REST Configuration section of the required Carrier Facility Accounts. Use the data loader MUP UI capabilities if needed. Retain the Primary Account Number, Secondary Account Number, User Key, and Password attributes, if already configured, as they are still required for the FedEx non-track web service APIs to work Enable the \"Manhattan Active - FedEx REST Track\" change in behavior. Refer to the Enable FedEx REST Track API Upgrade for more details. Use Case 7 - Upgrade an existing implementation where all the existing records reside in the Carrier Upgraded Facility Account to the FedEx REST Track API Generate the FedEx Client Key and Client Secret required to leverage the FedEx REST Track API Update the Client Key and Client Secret in the FedEx Track REST Configuration section of the required Carrier Upgraded Facility Accounts. Use the data loader MUP UI capabilities if needed. Retain the Primary Account Number, Secondary Account Number, User Key, and Password attributes, if already configured, as they are still required for the FedEx non-track web service APIs to work. Ensure that the required Carrier Upgraded Facility Accounts are active (Is Active = true). Enable the \"Manhattan Active - FedEx REST Track\" change in behavior. Refer to the Enable FedEx REST Track API Upgrade for more details. Use Case 8 - Add new stores to an existing implementation which already uses the FedEx REST Track API and where all the existing records reside in the legacy Carrier Facility Account If the retailer uses a separate FedEx Account per store, they need to set them up first. Next, they need to associate the new accounts with the existing project or a new one if its account limit is exhausted. Refer to the Generate the FedEx Client Key and Client Secret section for more information and execute the steps needed. Add new Carrier Facility Accounts for the new stores and configure the Client Key and Client Secret in them. Use the data loader MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them back, if needed. Configure the Primary Account Number, Secondary Account Number, User Key, and Password attributes as well if the retailer wishes to use the FedEx non-track APIs too in the new stores Use Case 9 - Add new stores to an existing implementation which already uses the FedEx REST Track API and where all the existing records reside in the Upgraded Carrier Facility Account If the retailer uses a separate FedEx Account per store, they need to set them up first. Next, they need to associate the new accounts with the existing project or a new one if its account limit is exhausted. Refer to the Generate the FedEx Client Key and Client Secret section for more information and execute the steps needed. Add new Carrier Upgraded Facility Accounts for the new stores and configure the Client Key and Client Secret in them. Use the data loader MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them back, if needed. Configure the Primary Account Number, Secondary Account Number, User Key, and Password attributes as well if the retailer wishes to use FedEx non-track APIs too in the new stores. Ensure that the new Carrier Upgraded Facility Accounts are marked as active (Is Active = true). Use Case 10 - An existing implementation implementing FedEx integration for the very first time where all the existing accounts are set up in the legacy Carrier Facility Account Generate the FedEx Client Key and Client Secret required to leverage the FedEx REST Track API Add new Carrier Facility Accounts for all the stores and configure the Client Key and Client Secret in them. Use the data loader MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them back, if needed. Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Facility Accounts. Enable the \"Manhattan Active - FedEx REST Track\" change in behavior. Refer to the Enable FedEx REST Track API Upgrade for more details. Use Case 11 - An existing implementation implementing FedEx integration for the very first time where all the existing accounts are set up in the Upgraded Carrier Facility Account Generate the FedEx Client Key and Client Secret required to leverage the FedEx REST Track API Add new Carrier Upgraded Facility Accounts for all the stores and configure the Client Key and Client Secret in them. Use the data loader MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them back, if needed. Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Upgraded Facility Accounts. Ensure that the Carrier Upgraded Facility Accounts are marked as Active (Is Active = true). Enable the \"Manhattan Active - FedEx REST Track\" change in behavior. Refer to the Enable FedEx REST Track API Upgrade for more details. Use Case 12 - A new implementation wishing to implement FedEx Generate the FedEx Client Key and Client Secret required to leverage the FedEx REST Track API Add new Carrier Upgraded Facility Accounts for all the stores and configure the Client Key and Client Secret in them. Use the data loader MUP UI capabilities to download existing records to an Excel file, add new records to it, and upload them back, if needed. Set up a FedEx web service account if the retailer wishes to leverage FedEx non-track APIs as well in its stores. Configure the Primary Account Number, Secondary Account Number, User Key, and Password obtained after setting up the web service account in the Carrier Upgraded Facility Accounts. Ensure that the Carrier Upgraded Facility Accounts are marked as Active (Is Active = true). Enable the \"Manhattan Active - FedEx REST Track\" change in behavior. Refer to the Enable FedEx REST Track API Upgrade for more details. For use cases 6 through 12, enable the \"Manhattan Active - FedEx REST Track\" change in behavior only after the FedEx Client Key and Client Secret are configured in the Carrier Facility Accounts / Carrier Upgraded Facility Accounts meant to make use of the FedEx Track API. Use Case 13 - UPS OAuth 2.0 Starting June 2024, UPS mandates that all its clients migrate from its access key-based authentication to OAuth 2.0. As a pre-requisite, all existing and new retailers, intending to use UPS services, are required to work with UPS to get a user account created if they don’t have one already. Retailers can opt for associating multiple shipper accounts with one user account, or they can go for one user account per shipper account. The process of setting up the UPS facility accounts in MA Omni will be simpler if the shipper accounts are consolidated across as fewer UPS user accounts as possible. As part of UPS OAuth2.0 authentication, UPS provides access and refresh tokens. The access token is the bearer token that is included with a UPS API request, and it serves as the authorization method to the UPS API endpoint. The refresh token is used to obtain fresh access and refresh tokens after the current access token has expired. Once the access and refresh tokens are generated, they apply to all the shipper accounts associated with the user account used to sign in to UPS. Both the access and refresh tokens’ validities are governed by UPS. Manhattan Associates recommends that all retailers connect with UPS to learn the exact expiry durations of the two tokens. The access token, if expired, is systemically refreshed using the refresh token. However, reconfiguration efforts are involved if the refresh token has also expired due to inactivity. Consequently, it’s imperative that UPS services go live before the refresh token expires. In other words, UPS facility accounts should be configured within the refresh token expiration window from the stipulated go live date to avoid UPS re-signin effort. 13.1 Upgrade an existing implementation to OAuth 2.0 Ensure that the retailer has a valid UPS.com user account in place with the required shipper accounts configured. Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI (wherever the existing records reside) and filter for the UPS accounts. Choose an account and go into its details. Tap on the Sign in to UPS button and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes. Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account’s UPS token’s key to the other facility accounts belonging to the same organization. Refer to ProActive for more details on the API. Repeat steps 3 and 4 for the facility accounts belonging to other organizations. 13.2 Add new stores to an existing implementation which already uses UPS OAuth 2.0 Associate the new stores’ shipper accounts with the UPS.com user account to be used for signing in to UPS. Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI (wherever the existing records reside) and create a new facility account for one of the new stores. No need to enter the User Key and the Password. Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes. Create the Carrier Facility Accounts / Carrier Upgraded Facility Accounts for other stores belonging to the same organization. No need to enter the User Key and the Password. Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account’s UPS token’s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API. Repeat steps 2 through 5 for stores belonging to other organizations. 13.3 An existing implementation implementing UPS integration for the very first time Ensure that the retailer has a valid UPS.com user account in place with the required shipper accounts configured. Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI (wherever the existing carriers' records reside) and create a new UPS facility account for one of the stores. No need to enter the User Key and the Password. Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes. Create the UPS Carrier Facility Accounts / Carrier Upgraded Facility Accounts for other stores belonging to the same organization. No need to enter the User Key and the Password. Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account’s UPS token’s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API. Repeat steps 2 through 5 for stores belonging to other organizations. 13.4 A new implementation wishing to implement UPS Ensure that the retailer has a valid UPS.com user account in place with the required shipper accounts configured. Go to the Carrier Upgraded Facility Accounts UI and create a facility account for one of the stores. No need to enter the User Key and the Password. Once the account is saved, tap on the Sign in to UPS button in the details tab, and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes. Create the Carrier Upgraded Facility Accounts for the other stores belonging to the same organization. No need to enter the User Key and the Password. Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account’s UPS token’s key (step 3) to the other new facility accounts belonging to the same organization (step 4). Refer to ProActive for more details on the API. Repeat steps 2 through 5 for stores belonging to other organizations. 13.5 An existing UPS implementation whose refresh tokens have expired Go to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts UI and filter for the UPS accounts. Choose an account and go into its details. Tap on the Sign in to UPS button and login using the UPS user account. A successful login confirmation should be displayed if the input credentials are valid. Close the tab and refresh the UI; UPS signed in should be displayed as Yes. Use POST {{url}}/parcel/api/parcel/copyUPSAuth API to copy the signed in facility account’s UPS token’s key to the other facility accounts belonging to the same organization. Refer to ProActive for more details on the API. Repeat steps 2 and 3 for the facility accounts belonging to other organizations. Note: As a general guideline, the UPS sign in key copy process will be the easiest if the shipper accounts (stores) which belong to a UPS user account have their corresponding Carrier Facility Accounts / Carrier Upgraded Facility Accounts belonging to the same organization in MA Omni. Note: To avoid re-sign in efforts, ensure that the UPS services go live before the UPS OAuth2.0 refresh token expiry. Reach out to UPS support to learn about the token expiry windows. Note: Even though, leveraging the POST {{url}}/parcel/api/parcel/copyUPSAuth API is the most effortless way of upgrading to / enabling UPS OAuth2.0 authentication, it is an optional process and the retailer can choose to manually sign in to each account individually. Service Versions: Service Versions configuration entity maintains the carrier web service versions supported by Manhattan Active Omni. These are maintained in the Provider Service Versions UI. The following FedEx web service versions are supported by Manhattan Active Omni: Request Type Versions Ship 2013 & 2020 Track 2013 Note: The FedEx webservice versions 2013 and 2020, specified in this document, are the marketing versions used by FedEx and they correspond to FedEx WSDL versions 13 and 26 respectively. Tabulated is the seed data provided as part of this entity: Version Id (BK) Provider Ship Track 1 FedEx 2020 2013 Any combination of supported web service versions can be defined in the Service Versions table. Upgraded Facility Account: Upgraded Facility Account is a transaction entity which maintains facility account information along with the service version Id. It helps Manhattan Active Omni to communicate with carriers using the intended web service versions. Sample data: Upgraded Facility Account Id (BK) Carrier Code Facility Code Version Id Primary Account Number Secondary Account Number User Key Password Hub Id Is Active 1 FDXE Store1 1 604337968 118616237 **** **** 2348 True The following validation is enforced during insertion of records to this entity: Only one record can be active for each Carrier and Facility Code combination Version ID cannot be null for FedEx. However, the configured Service Version ID is considered for FedEx web service implementations only. For FedEx, Version ID must be a valid version ID specified in the Service Versions table Carrier code must already be configured in the carrier master Note: When FedEx Ground Economy is used, in the 2013 web service version, the FedEx Ground Economy Tracking Number is persisted. On the other hand, when the 2020 web service version is used, the USPS Tracking Number is persisted. The UIs for both the Carrier Facility Accounts and the Carrier Upgraded Facility Accounts use the MUP framework. Refer to the Config UI page for permissions required to view and maintain records in these UIs. Package Types Package type indicates the physical properties (dimensions) of the shipping container that is used for delivery. These package types are used by the Fulfillment component. Configure on the Package Types UI. The mapping with package types used by the carrier is contained in the Package Types UI. Accessorials Accessorials represent any special carrier-offered delivery services. Examples include Saturday pickup, Saturday delivery, hold at location. Configure the Accessorials UI. Carrier Accessorials Carrier accessorials define the list of accessorials that are supported for a particular carrier. Configure on the Carriers/Carrier Accessorial UI. Ship Via Accessorials Ship via accessorials define the list of accessorials used by a particular ship via. Configure on the Ship Vias/Ship Via Accessorials UI. Carrier Package Types Carrier package type defines the list of carrier-specific package types which a carrier uses and the mapping to the package types used by Fulfillment. Configure on the Carriers/Carrier Package Type UI. Carrier Status Mapping This defines the list of carrier-specific package statuses that the carrier considers as in transit. Fulfillment can reference this status list when receiving package status updates from the carrier to determine whether to update the package status to \"Shipped.\" Configure on the Carrier Status Mapping UI. UI Name Component Entity Name Seed Data Present? Seed Data Profile Accessorials Parcel Accessorial Yes Base Carrier Status Mapping Parcel StatusMap Yes Base Carriers Parcel Carrier Yes Base CarrierSchedulingHoliday No N/a Carriers/Service Level Parcel ServiceLevel Yes Base Carriers/Carrier Accessorial Parcel CarrierAccessorial Yes Base Carriers/Carrier Package Type Parcel CarrierPackageType Yes Base Facility Accounts Parcel FacilityAccount No N\\a Modes Parcel Mode Yes Base Package Types Parcel PackageType Yes Base Ship Vias Parcel ShipVia Yes Base Ship Vias/Ship Via Accessorials Parcel ShipViaAccessorial Yes Base Shipping Methods Parcel ShippingMethod No N/a ShippingMethodShipVia No N/a Carrier Rates Parcel ShippingRate No N/a Carrier Scheduling Parcel CarrierSchedulingOperatingHrs No N/a Carrier Zone Transit Time Parcel ZoneTransitTime No N/a Carrier Zones Parcel Zone Yes Base Provider Service Versions Parcel ServiceVersion Yes Base Carrier Upgraded Facility Accounts Parcel UpgradedFacilityAccount No N/a Region Lookup Parcel RegionLookUp No N/a Region Schemas Parcel RegionSchema No N/a Region Schemas / Region Parcel Region No N/a Registration and Subscription Initial registration and subscription configuration for UPS and FedEx must be performed before any shipping can occur. Carrier Registration Subscription Comments UPS Yes No Reach out to UPS Support FedEx Yes Yes This should be done directly from FedEx website ( DRC) Logistyx No No FedEx REST Track API FedEx has upgraded their Track API from the Web Services to the REST protocol. Manhattan Associates is slated to release a new version of its FedEx Track API which is compatible with the REST protocol shortly after the 24.1 Omni market release in late January 2024. FedEx plans to deprecate the Web Services version of its Track API in May 2024. As of late January 2024, the FedEx REST Track API is available for use via Change in Behavior. Enable the \"Manhattan Active - FedEx REST Track\" change in behavior only when the FedEx Client Key and Client Secret are configured in the Carrier Facility Accounts / Carrier Upgraded Facility Accounts meant to utilize the FedEx Track API. Retailers are required to configure the Client Key and the Client Secret in the Carrier Facility Accounts or the Upgraded Carrier Facility Accounts they have set up the REST FedEx Track Service. They can obtain the Client Key and the Client Secret by following the steps below: Login to the FedEx Developer Portal using their existing or a new FedEx user account Create an Organization Create one or more FedEx Accounts; a retailer may choose to define an account per facility or may share an account across its facilities. However, at least one account needs to exist before moving on to the next step. Create a \"Track API\" Project within the Organization Associate the FedEx Accounts with the Project Once the Project is created, its Client Key and Client Secret are generated; all the Accounts associated with the Project share the same Client Key and Client Secret Configure the Client Key and Client Secret in the Carrier Facility Accounts / Upgraded Carrier Facility Accounts setup in Manhattan Active Omni for the required facilities Note: The details above, for example, Projects within an Organization, Accounts within a Project, are all subject to limits imposed by FedEx. Work with the FedEx team to get the latest updates on these limits. Note: Additionally, there are transaction quotas imposed by FedEx on the REST Track API calls made by a Project per day and per second. Work with them to get the latest information on these limits. If a retailer wishes to do mass updates, for example, configuring the Client Key and Client Secret while upgrading to the FedEx REST Track API, to the Carrier Facility Accounts / Carrier Upgraded Facility Accounts, they can leverage the Data Loader facilities introduced as part of the MUP UIs. They can export the configured accounts to an Excel file by tapping on the \"Export Data Loader\" button, make configuration updates, and then import the updated data back by tapping on the \"Import Data Loader\" button. Retailers also have the capability to export only the filtered data to an Excel file and then import it back after making the required updates. Note: Export and Import Data Loader functionalities support up to 10,000 and 1,000 records respectively. Refer to use cases 6 - 12 above for examples."
}