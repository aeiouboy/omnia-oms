{
  "id": "2617708",
  "permalink": "how-payment-processing-works",
  "title": "How Payment Processing Works",
  "type": "topic",
  "level": 5,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Order Selling/Payment/How Payment Processing Works",
  "raw_item": {
    "id": "2617708",
    "text": "How Payment Processing Works",
    "title": "How Payment Processing Works",
    "permalink": "how-payment-processing-works",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "129592",
    "parent": "f;129592",
    "created_date": "1597860935",
    "modified_date": "1695997583",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "4"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2163646\" href=\"/order-selling-2\" class=\"breadcrumb-links\">Order Selling</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2163647\" href=\"/payment-2\" class=\"breadcrumb-links\">Payment</a></li><li> <span>››</span>How Payment Processing Works</li></ul>  \t\r\n\t\t<h2>How Payment Processing Works</h2>\r\n\r\n<p></p>\r\n\r\n<a href=\"/payment-types\" hqid=\"2617707\">Previous</a>&nbsp;I&nbsp;<a href=\"/authorization\" hqid=\"2617709\">Next</a>\r\n<p>&nbsp;</p>\r\n\r\n<p>This section explains the payment life cycle for each payment type, how payment status is calculated, and how payment transactions are created and processed.</p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/how-payment-processing-works$payment-life-cycles\">Payment Life Cycles</a><ul><li><a href=\"/how-payment-processing-works$payment-status\">Payment Status</a></li><li><a href=\"/how-payment-processing-works$updating-order-payment-status\">Updating Order Payment Status</a></li></ul></li><li><a href=\"/how-payment-processing-works$payment-rules\">Payment Rules</a></li><li><a href=\"/how-payment-processing-works$payment-processing-using-the-payment-summary\">Payment Processing using the Payment Summary</a><ul><li><a href=\"/how-payment-processing-works$payment-summary-attribute-definitions\">Payment Summary Attribute Definitions</a></li><li><a href=\"/how-payment-processing-works$updates-to-the-payment-summary\">Updates to the Payment Summary</a></li><li><a href=\"/how-payment-processing-works$payment-summary-creation-logic\">Payment Summary Creation Logic</a></li><li><a href=\"/how-payment-processing-works$return-credit-calculations\">Return Credit Calculations</a></li></ul></li><li><a href=\"/how-payment-processing-works$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"payment-life-cycles\" id=\"payment-life-cycles\"></a>Payment Life Cycles</h3>\r\n\r\n<p>Typical credit card and debit payments have a life cycle which holds an authorization&nbsp;until items&nbsp;are fulfilled, at which time a settlement is created. Some gift card or store credit payment processors which support authorization can also use this life cycle. The life cycle for such payments is as follows:</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Credit%20card%20payment%20lifecycle.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0NyZWRpdCUyMGNhcmQlMjBwYXltZW50JTIwbGlmZWN5Y2xlLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTgyMH19fV19&Signature=hIbIbxRUH3D8nvDfSIDkkcxOd1aJjTjFeg9RUm9sC7eGdE9PTDYhjEmTxc2TlMxWvBKrMuHYkb0l4wojIXwwyXOW0SjJlet5xg2EwbTzw2ouS1O0ePVF8vBxjB6TygHfdBaD8wWVsxOhMpLMnm20nCRPUirm5s6qrI7NNcpL4P7GZnFYlEG6fmCN~nE4Ayq9IzlKJB2~HTCjLN-PcERQOje35Vz68KCYPgUu8qOjR4vcTJmCZElu7Hh4UOI4098xYVmWphJ1JW9PIEnrVTWl3KRjPBdCvTx-rCXUJWxB0pw4r5ZXl7HH6uCEX8QPp0Gy7Azwvn2cCVVEeqzh9HefUg__&Key-Pair-Id=K2TK3EG287XSFC\" /></p>\r\n\r\n<p>Some payment types do not hold authorizations, but instead these payments are directly settled upon capturing the payment. For instance, many gift card or store credit payment processors do not hold authorizations.&nbsp;The life&nbsp;cycle for such payments are as follows:</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Gift%20card%20payment%20lifecycle.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0dpZnQlMjBjYXJkJTIwcGF5bWVudCUyMGxpZmVjeWNsZS5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE4MjB9fX1dfQ__&Signature=lzI5EmTuQL~58qTmINZLVm3rG3yz7uSjFPyS9lDsMP5xvm0ULGYAX6gXV~wI98wbgj1AXj2HJuAvuzgQmQXnUg~laXcinJ9M91ztuCqu5d3Tz4OIQfmNJZVKY0HVkaIRUYjOaDg6X518J8hkymRkV10L8mTXq~A~K2OfcI1yQIl-cSnJuVETDDMSgVEjCiKhyzvARTi9TCPbPeSwonXzgaa0RffRmGpTt-qm4rul72kV17R68x3YW5DJWEV01clTPNBkx32fMBzeBpx495y7yYTAMYoJKSm9XaySg~35Mimliy93coVTwbyDPK~rN~PY4tKAtrdvuwj8cNzbbfDmsA__&Key-Pair-Id=K2TK3EG287XSFC\" /></p>\r\n\r\n<p>Pre-paid payment types such as cash, check, and traveler&#39;s check are assumed to be settled when the payment method is saved. The life cycle is as follows:</p>\r\n\r\n<p><img alt=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Cash%20payment%20life%20cycle(1).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0Nhc2glMjBwYXltZW50JTIwbGlmZSUyMGN5Y2xlKDEpLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTgyMH19fV19&Signature=BvzleP~raGyT2JufjpOEtnet4p5KvtLQrRcrLtQ7YXyPhy1lf39A6Ugfz6iMUIv15Cgjvpa-OSIcIgqnYUKSDBH3tRzOEOGl3vP-n9Rx8thfwk-k36GDB~9jNaJwfrPDCkDqaecNH~NLmqmhvPLxKgyEBrln6cVpxU5R7FfyhbvBSBLj0Uwo-BGk1Vbj7sHXF0icn13vrAUFUEH3jZMGdRart6vD6TuRhCRvIfM4ByS3MjHMe-PFxN2AVsxjrNiynJDY5NkfgMCnGlBxgApxPxV9rXY1VDjhx8IEJhwAX59MefLANK7gLw-AWF25om-a4fyZWat-jrQhOlGiBLjkgQ__&Key-Pair-Id=K2TK3EG287XSFC\" /></p>\r\n\r\n<p>E-Check payments follow a unique life cycle, because these&nbsp;electronic funds transfers&nbsp;can take a few days to transfer funds from one account to another. This asynchronous process differs from payments such as credit cards or gift cards which are immediately deducted from the payee&#39;s account. The e-check life cycle is as follows:</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/E-check%20payment%20lifecycle(1).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0UtY2hlY2slMjBwYXltZW50JTIwbGlmZWN5Y2xlKDEpLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTgyMH19fV19&Signature=OmdWBRECiVeqE0dZ8hEydtPYmaaTTcNFXlhXXH8WvpORhEWhzcjo4l1h871dwuRciBosT1hvye~1aoa06eAP3-QlIVeXxE6OrjkIXQCQoPBjvQ2im8uErtjLDwlapUEZ0bvgmpBIPtGuRm0X5Z9qCBXcWwTLAaPGpXAjFcLiu8bYRVcZF1I2b3ti6CHLpS5tDglx2CFyicr1FiEsBLz8tkV~xzssyKH78ZrdAE3J1cMMdH4PVssrSayDHLASmR-K-MmUCxLvviDsrGlNYzsvh2va5xMYNT3qtY71bP2Eg9TEZecIka4mbRldBlJdGb5ubOY-WJZnnzM4yXpjVvZAWg__&Key-Pair-Id=K2TK3EG287XSFC\" /></p>\r\n\r\n<p>PayPal payments follow a slightly different life cycle, since these payments are authorized outside of the system. When a PayPal payment is imported with an authorization, the life cycle is as follows:</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/PayPal%20Lifecycle.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL1BheVBhbCUyMExpZmVjeWNsZS5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE4MjB9fX1dfQ__&Signature=H516d0Fim4WghV3eMGM47QEASoujq1RmXGL7olCbh5B5Uc0vJ~P6-l8V-0~43jQXKkUogzLASCV1scHnQFNItOcqpxRiEkTg2B3am3ePa2mSWN9nt-P5sqf4iKCSkRPJnLl5suRs7lOyfBO13EhZFdQy4Ce2KfmRcnfZJa1HunL6uyBrB0PPG~g0awkXgaMK87piE0izsOdJ2kaB4nvs4d4LGCtKVvbE6q6CTCwS60fCiOKQsknDpZDK3D~BZzHdaH1mW5P3Y~3qsHNdN~iLk4vfYBDuRCpm9N9IGf0wLzz2tnvJ6BWjL1cg48abK9rTL~R1wQ~a6~nlid~eIY3BSg__&Key-Pair-Id=K2TK3EG287XSFC\" /></p>\r\n\r\n<h4><a name=\"payment-status\" id=\"payment-status\"></a>Payment Status</h4>\r\n\r\n<p>Payment status is calculated for each payment header and can be used to&nbsp;track the payment life cycle of an order. The payment status is calculated as the lowest numeric payment status on the order. For example, if a $100 order has $50 authorized and $50 paid, then the payment status is &quot;Authorized&quot;. There are no failure-specific payment statuses; when authorization, settlement, or refund fails,&nbsp;then the Awaiting Payment Info and Awaiting Refund statuses are&nbsp;used to signal that action needs to be taken on the order.</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/2016_11_28_18_40_532.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzLzIwMTZfMTFfMjhfMThfNDBfNTMyLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTgyMH19fV19&Signature=EWpZM8oRUnmjR~3k~FO-BeBUUHgZh8jy-ph5C3Rt7kmE2u4IOwzBtDRFVV37yWHPfe2eENggya5Fdx6s2FfgXL-mtz4qwMa2Rbpu1hVgZlFCJGRxcgAfw~6w3Sf0cPZqig83CFHJ7-fmRP~DOUpYz7MsxpENqLpaBLsjKJOXFcaJk3E2YV-lv6KUkQ0vXEXhlOkOt9rJd5vS1kW86fkV1hVO~9fs0Icb6r7BEXPC0e7U8-OOyxwLYZiwkx0pFrTvNWzlXjrf5m4b78SNjogSo8ZwUWjroIfXMWYSW6JsnLhdLBE9YFMbcKx-HrW-erWFV83tl7PWaqNdD1lTyF1ERw__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 800px; height: 87px;\" /></p>\r\n\r\n<p>The following&nbsp;table provides an overview of each payment status. All payment statuses except for Not Applicable are maintained in the Payment component.&nbsp;Not Applicable status is calculated by the Order component in scenarios where payment processing&nbsp;is disabled.</p>\r\n\r\n<table border=\"1\" style=\"width: 945px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 135px;\">Status</th>\r\n\t\t\t<th style=\"width: 53px;\">Status Id</th>\r\n\t\t\t<th style=\"width: 716px;\">Description</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Not Applicable</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">0</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Payment is not required for this order. Occurs&nbsp;when payment is disabled for the given order type (for example,&nbsp;replenishment orders), or when the order total is zero.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Awaiting Payment Info</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">1000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Insufficient payment has been captured for the value of the ordered items. Occurs&nbsp;when items are added to an order, but no payment has been added, or when an authorization or settlement fails.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Awaiting Authorization</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">2000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Sufficient payment has been provided, but authorization has not yet been attempted. Occurs&nbsp;when open authorizations are pending to be executed. Once the execute service is invoked for the open authorizations, then the authorization transactions are closed, and the payment status is updated to Authorized (if authorization is successful) or Awaiting Payment Info (if authorization fails).</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Authorized</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">3000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Sufficient payment has been authorized for the order. Indicates that the order can&nbsp;be released to the DC or stores for fulfillment.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Awaiting Settlement</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">4000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Open settlements are&nbsp;pending. Once settlement is executed, then the transactions are closed, and the payment status is updated to Paid (if settlement succeeds) or Awaiting Payment Info (if settlement fails).</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Paid</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">5000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>Sufficient payment has been settled for the order.&nbsp;For non pre-paid payments, this&nbsp;occurs after all items are fulfilled and settlements have been processed. For pre-paid payments, this occurs when an&nbsp;order is captured with closed, successful settlements.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Awaiting Refund</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">6000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>The order total is negative, and the refund is pending. Occurs when an appeasement or return triggers an open refund to be created, but the Payment&nbsp;component has not yet attempted to execute the refund. Once the execute service is invoked for the open refunds, then the refund transactions are closed and the payment status is updated to Refunded. This status is also used when an order total is negative, and insufficient refund transactions exist for the order.</p>\r\n\r\n\t\t\t<p>If payment refund fails or goes unavailable and all the retries are exhausted, the order payment status is moved back to Paid.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 132px;\">\r\n\t\t\t<p>Refunded</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 50px;\">7000</td>\r\n\t\t\t<td style=\"width: 713px;\">\r\n\t\t\t<p>The order has been fully refunded. Occurs when&nbsp;a full order refund has been issued via an appeasement, or after all items on an order have been returned.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Custom Payment Statuses</h5>\r\n\r\n<p>It&#39;s currently&nbsp;not possible to define custom payment statuses or to customize the payment status displayed in the order or contact center UIs. If this is required, an extended attribute can be added for custom payment status. This attribute can be calculated by a custom component and displayed on the UI via an extension point.</p>\r\n\r\n<h4><a name=\"updating-order-payment-status\" id=\"updating-order-payment-status\"></a>Updating Order Payment Status</h4>\r\n\r\n<p>When the payment status changes, the payment component updates the order with the latest status. The order payment status can be updated in both synchronous and asynchronous scenarios.&nbsp;Both scenarios leverage a single set of payment status calculation logic&nbsp;which exists in the order component.&nbsp;In asynchronous flows,&nbsp;the payment component puts the order Id in a queue to notify the order component that the payment status has changed. The order component picks up the order id from the queue and calculates the payment status.&nbsp;For example,&nbsp;if the payment component initiates an authorization which fails, then the order is updated with payment status Awaiting Payment Info. In synchronous flows, the order component&#39;s payment status calculation logic&nbsp;is invoked with an&nbsp;input order id, and the order payment status is updated.</p>\r\n\r\n<h3><a name=\"payment-rules\" id=\"payment-rules\"></a>Payment Rules</h3>\r\n\r\n<p>The payment rule is used to choose a payment configuration and a payment gateway for&nbsp;each payment type. For each payment type, a payment rule is selected using three attributes: payment type, order type, and card type. One payment rule is required per payment type. Within a payment type, unique payment rules can optionally be configured by order type and/or card type.&nbsp;If multiple rules are eligible for a payment type, then the rule which matches the card type and order type is selected. If no such rule exists, then a rule with matching card type and null order type is selected. If no such rule exists, then a rule with matching order type and null card type is selected. To configure payment rules, navigate to the <a hqid=\"1827458\" href=\"/payment-configuration-2$payment_rule_UI\">Payment Rule UI.</a></p>\r\n\r\n<h3><a name=\"payment-processing-using-the-payment-summary\" id=\"payment-processing-using-the-payment-summary\"></a>Payment Processing using the Payment Summary</h3>\r\n\r\n<p>The Payment Summary table is a ledger which keeps record of debits and credits for each order. Throughout the life cycle of an order, the payment summary tracks the amount to be authorized for ordered items, the amount to be settled for fulfilled items, and the amount to be refunded for returned items or appeasements.&nbsp;Since the payment summary is the master record of all order payments, this table is used for:</p>\r\n\r\n<ol>\r\n\t<li>Calculating balance due</li>\r\n\t<li>Determining if any payment transactions need to be created</li>\r\n\t<li>Calculating order payment status</li>\r\n</ol>\r\n\r\n<p>To view the payment summary totals for an order, the Total Payment Summary API can be used. This service returns the sum of all Payment Summary columns as well as the total balance due.</p>\r\n\r\n<h4 id=\"PaymentProcessing-ColumnDefinitions\"><a name=\"payment-summary-attribute-definitions\" id=\"payment-summary-attribute-definitions\"></a>Payment Summary Attribute Definitions</h4>\r\n\r\n<table border=\"1\" resolved=\"\" role=\"grid\">\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Attribute: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" data-column=\"0\" role=\"columnheader\" scope=\"col\" tabindex=\"0\" unselectable=\"on\">Column</th>\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Definition: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" data-column=\"1\" role=\"columnheader\" scope=\"col\" tabindex=\"0\" unselectable=\"on\">Definition</th>\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Master record of data: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" data-column=\"2\" role=\"columnheader\" scope=\"col\" tabindex=\"0\" unselectable=\"on\">Master record of data</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody aria-live=\"polite\" aria-relevant=\"all\">\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td>Credit Amount</td>\r\n\t\t\t<td>Amount the customer has paid; amount the retailer has collected for the order</td>\r\n\t\t\t<td>Payment transactions</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td>Debit Amount</td>\r\n\t\t\t<td>Amount the customer owes the retailer, or total value of goods and services that the retailer has provided to the customer</td>\r\n\t\t\t<td>Order invoices</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td>Book Amount</td>\r\n\t\t\t<td>Total value of ordered items, or goods and services that the retailer has promised to the customer but not yet fulfilled</td>\r\n\t\t\t<td>Order; Calculated as order total minus sum of invoice totals</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Authorized Amount</td>\r\n\t\t\t<td colspan=\"1\">Amount which is authorized for an order</td>\r\n\t\t\t<td colspan=\"1\">Payment transactions</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Requested Authorization Amount</td>\r\n\t\t\t<td colspan=\"1\">Amount for which open authorization records exist</td>\r\n\t\t\t<td colspan=\"1\">Payment transactions</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Requested Settlement Amount</td>\r\n\t\t\t<td colspan=\"1\">Amount for which open settlement records exist</td>\r\n\t\t\t<td colspan=\"1\">Payment transactions</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Requested Refund Amount</td>\r\n\t\t\t<td colspan=\"1\">Amount for which open refund records exist</td>\r\n\t\t\t<td colspan=\"1\">Payment transactions</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Credit In</td>\r\n\t\t\t<td colspan=\"1\">Amount of return credit which has been borrowed from the original order, in case of a return</td>\r\n\t\t\t<td colspan=\"1\">Order lines</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Credit Out</td>\r\n\t\t\t<td colspan=\"1\">Amount of return credit which has been loaned to return orders; tracked on the original order</td>\r\n\t\t\t<td colspan=\"1\">Order lines</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Returned Amount</td>\r\n\t\t\t<td colspan=\"1\">Total value of return items which have been booked but not yet shipped to the return center</td>\r\n\t\t\t<td colspan=\"1\">Order lines</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>These columns are used when calculating the&nbsp;types of payment transactions that need to be created, if any. For instance, if a $300 order has not yet been shipped and has a $300 authorization, then the Payment component recognizes that Book Amount = 300 and Authorized Amount = 300, so no new payment transactions are required. However, if a&nbsp;$300 order has not yet been shipped and has a $100 authorization, then the Payment component&nbsp;recognizes there is $200 that still needs to be authorized.</p>\r\n\r\n<h4 id=\"PaymentProcessing-UpdatestothePaymentSummary\"><a name=\"updates-to-the-payment-summary\" id=\"updates-to-the-payment-summary\"></a>Updates to the Payment Summary</h4>\r\n\r\n<p>There are two types of events which result in updates to the payment summary: order updates and payment updates.&nbsp;</p>\r\n\r\n<p>Order updates reflected in the payment summary include any change in order totals or invoice totals. The sum of order total minus invoice totals is used to calculate the amount due at a later point in time, for which an authorization is required. For instance, if a $50 order is placed online for items to ship to a customer&#39;s address, then the order total is $50. Order totals are reflected in the&nbsp;Book Amount&nbsp;column. Invoice totals, or the sum of shipment, adjustment, and return invoices, are used to calculate the amount due immediately, for which a settlement or refund is required. For instance, if a $50 order is placed online for items to ship to a customer&#39;s address, then the invoice total is $0. Once the $50 worth of items ship, then the invoice total is $50. Invoice totals are reflected in the&nbsp;Debit Amount&nbsp;column.</p>\r\n\r\n<p>Payment updates reflected in the payment summary include any updates to payment transactions. For instance, when an open authorization payment transaction is created but has not yet been sent to the payment gateway, the&nbsp;Requested Authorization Amount&nbsp;column is updated. Similarly, when an open settlement or refund transaction is created, the&nbsp;Requested Settlement Amount&nbsp;or&nbsp;Requested Refund Amount&nbsp;columns are updated, respectively. A payment summary record is also created each time a payment transaction is updated. For instance, when an open authorization payment transaction is sent to the payment gateway and the payment gateway responds with a success decision, then the&nbsp;Authorized Amount&nbsp;is updated. Similarly, when an open settlement or refund transaction is successfully executed, the&nbsp;Credit Amount&nbsp;column is increased in case of settlement or decreased in case of refund.</p>\r\n\r\n<table border=\"1\" resolved=\"\" role=\"grid\" style=\"width: 938px;\">\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Update Type: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" colspan=\"1\" data-column=\"0\" role=\"columnheader\" scope=\"col\" tabindex=\"0\" unselectable=\"on\">Update Type</th>\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Event: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" data-column=\"1\" role=\"columnheader\" scope=\"col\" style=\"width: 246px;\" tabindex=\"0\" unselectable=\"on\">Event</th>\r\n\t\t\t<th aria-disabled=\"false\" aria-label=\"Record Created in Payment Summary: No sort applied, activate to apply an ascending sort\" aria-sort=\"none\" data-column=\"3\" role=\"columnheader\" scope=\"col\" style=\"width: 586px;\" tabindex=\"0\" unselectable=\"on\">Record Created in Payment Summary</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody aria-live=\"polite\" aria-relevant=\"all\">\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Payment</td>\r\n\t\t\t<td style=\"width: 243px;\">A payment method is captured for an order.</td>\r\n\t\t\t<td style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>None</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Payment</td>\r\n\t\t\t<td style=\"width: 243px;\">A payment transaction is created against a payment method and is in open status.</td>\r\n\t\t\t<td style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>If transaction type = Authorization, then create record with Requested Auth Amount.</li>\r\n\t\t\t\t<li>If transaction type = Settlement, then create record with Requested Settlement Amount.</li>\r\n\t\t\t\t<li>If transaction type = Refund, then create record with Requested Refund Amount.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Payment</td>\r\n\t\t\t<td style=\"width: 243px;\">An open payment transaction is processed successfully.</td>\r\n\t\t\t<td style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>If transaction type = Authorization, then create record which moves the amount from Requested Auth Amount to Authorized Amount.</li>\r\n\t\t\t\t<li>If transaction type = Settlement and an invoice exists for the payment transaction, then create record which moves the amount from Requested Settlement Amount to Credit Amount.</li>\r\n\t\t\t\t<li>If transaction type = Refund, then create record which moves the amount from Requested Refund Amount to Credit Amount.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Payment</td>\r\n\t\t\t<td style=\"width: 243px;\">\r\n\t\t\t<p>An open payment transaction is processed, but the transaction fails.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>If transaction type = Authorization, then create record which decreases&nbsp;Requested Auth Amount.</li>\r\n\t\t\t\t<li>If transaction type = Settlement, then create record&nbsp;which decreases&nbsp;Requested Settlement Amount.</li>\r\n\t\t\t\t<li>If transaction type = Refund, then create record&nbsp;which decreases&nbsp;Requested Refund Amount.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Order</td>\r\n\t\t\t<td style=\"width: 243px;\">A shipment invoice is created for an order.</td>\r\n\t\t\t<td style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Create a record which moves invoice amount from Book Amount to Debit Amount.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Order</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 243px;\">An adjustment invoice is created for an order.</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Create a record which moves invoice amount from Book Amount to Debit Amount.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Order</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 243px;\">A return is created against an existing order.</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Create a record against the parent order with Credit Out equal to return credit loaned.</li>\r\n\t\t\t\t<li>Create a record against the return order with Credit In equal to return credit borrowed and Returned amount equal to return order total.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr role=\"row\">\r\n\t\t\t<td colspan=\"1\">Order</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 243px;\">A return invoice is created for an order.</td>\r\n\t\t\t<td colspan=\"1\" style=\"width: 583px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Create a record which moves invoice amount from Book Amount to Debit Amount.</li>\r\n\t\t\t\t<li>Move payment transactions from parent to return order and decrease Credit In and Credit Out.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><a name=\"payment-summary-creation-logic\" id=\"payment-summary-creation-logic\"></a>Payment Summary Creation Logic</h4>\r\n\r\n<p>New records are created to capture any change in the payment summary. Records in the Payment Summary table are not updated. The Payment component makes a web service call to the Order component to get the order total and a list of invoice totals. Based on the response, payment summary records get created as follows</p>\r\n\r\n<ul>\r\n\t<li>For each invoice, create a record with Book = -Debit with reference to the invoice ID</li>\r\n\t<li>If Book Amount is not equal to Order Total - sum(Invoice Totals), then create a record to adjust Book Amount</li>\r\n</ul>\r\n\r\n<h5>Payment Summary Examples</h5>\r\n\r\n<p><strong>Order Creation and Fulfillment</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 1083px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 501px;\">Event</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 46px;\">Credit</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 41px;\">Debit</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 44px;\">Book</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 66px;\">Authorized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 85px;\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 66px;\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 65px;\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 49px;\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">For example, when a customer places an order in the call center with one $60 item and one $40 item, then the Customer Service UI generates a payment request and the Book Amount is updated with the order total of $100.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">100</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">After adding a credit card payment method, the customer confirms the order, and the Customer Service UI generates a payment request and an open authorization is created for $100. The Requested Auth Amount is updated with $100.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">100</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the payment gateway response is received and indicates that authorization was successful, then the $100 moves from Requested Auth Amount to Authorized Amount.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">100</td>\r\n\t\t\t<td style=\"width: 82px;\">-100</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the $60 item ships, then a shipment invoice INV01&nbsp;is created for $60, and the&nbsp;Order component generates a payment request. $60 moves from Book Amount to Debit Amount.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">60</td>\r\n\t\t\t<td style=\"width: 41px;\">-60</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">INV01</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">An open settlement transaction is created against the authorization, and the Requested Settle Amount is increased by $60.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">-60</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">60</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the payment gateway response is received and indicates that settlement was successful, then the $60&nbsp;moves from Requested Settle Amount to Credit Amount.</td>\r\n\t\t\t<td style=\"width: 43px;\">60</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">-60</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the $40 item ships, then a shipment invoice INV02 is created for $40, and the&nbsp;Order component&nbsp;generates a payment request. $40 moves from Book Amount to Debit Amount.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">40</td>\r\n\t\t\t<td style=\"width: 41px;\">-40</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">INV02</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">An open settlement transaction is created against the authorization, and the Requested Settle Amount is increased by $40.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">-40</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">40</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the payment gateway response is received and indicates that settlement was successful, then the $40&nbsp;moves from Requested Settle Amount to Credit Amount. At this point, the total Credit Amount = $100 and total Debit Amount = $100, so the order is fully paid.</td>\r\n\t\t\t<td style=\"width: 43px;\">40</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">-40</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the customer calls to complain about a delayed shipment and the CSR applies a -$15 appeasement, then an adjustment invoice INV03 is created for -$15. The Debit Amount decreases by $15.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">-15</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 46px;\">INV03</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">An open refund transaction is created against the settlement, and the Requested Refund Amount is increased by $15.</td>\r\n\t\t\t<td style=\"width: 43px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">15</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 498px;\">When the payment gateway response is received and indicates that settlement was successful, then the $15&nbsp;moves from Requested Refund Amount to Credit Amount.</td>\r\n\t\t\t<td style=\"width: 43px;\">-15</td>\r\n\t\t\t<td style=\"width: 38px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 41px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 82px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 63px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 62px;\">-15</td>\r\n\t\t\t<td style=\"width: 46px;\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Scenarios resulting in an Adjustment Invoice</h5>\r\n\r\n<p><strong>Appeasement Applied After Shipment (prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$80 worth of items ship</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 appeasement - create Adjustment Invoice</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>$30 is refunded</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Scenarios not resulting in an Adjustment Invoice</h5>\r\n\r\n<p><strong>Order Line Cancellation&nbsp;(prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 line is canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>$30 is refunded</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$50 ships&nbsp;- Shipment Invoice</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Appeasement Applied Before Shipment&nbsp;(prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 appeasement</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>$30 is refunded</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">\r\n\t\t\t<p>$80 ships</p>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Order Cancellation&nbsp;(prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Order canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$80 refunded</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Order Line Cancellation (prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$50 worth of items ship</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 line is canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>$30 is refunded</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Scenarios resulting in an Adjustment Invoice</h5>\r\n\r\n<p><strong>Appeasement Applied After Shipment (not prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$80 worth of items ship</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Settle $80</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 appeasement -&nbsp;create Adjustment Invoice</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 is refunded</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Scenarios not resulting in an Adjustment Invoice</h5>\r\n\r\n<p><strong>Order Line Cancellation (not prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 line is canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Reduce authorization</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$50 worth of items ship - Shipment Invoice</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Settle $50</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Appeasement Applied Before Shipment (not prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 appeasement applied</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Reduce authorization</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">\r\n\t\t\t<p>$50 worth of items ship</p>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Settle $50</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Order Line Cancellation (not prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$50 worth of items ship</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Settle $50</td>\r\n\t\t\t<td colspan=\"1\">50</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-50</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">$30 line is canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Reduce authorization</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-30</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>Order Cancellation (not prepaid)</strong></p>\r\n\r\n<table>\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th colspan=\"1\">\r\n\t\t\t<p><strong>Event</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Credit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Debit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Book</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Auth</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Customer places $80 order</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;80</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Order canceled</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colspan=\"1\">Reduce authorization</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">&nbsp;</td>\r\n\t\t\t<td colspan=\"1\">-80</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><a name=\"return-credit-calculations\" id=\"return-credit-calculations\"></a><a id=\"Return Credit\" name=\"Return Credit\"></a>Return Credit Calculations</h4>\r\n\r\n<p>Return credit is the mechanism to transfer funds from the parent order to the return order and can be used to issue a refund or can be used towards exchange of items. The payment summary is used to manage the borrowing and transfer of return credit. For ship to return center order lines, return credit is borrowed from the parent order when a return order is created. When credit is borrowed, the parent order Credit Out is increased to reflect outgoing credit. The return order Credit In amount is increased to reflect incoming credit, and the Returned amount reflects the total value of return items.</p>\r\n\r\n<p>When a return invoice is created, then the return credit is fully transferred from the parent order to the return order in the form of settlement transactions.&nbsp;On the return order, the invoiced amount moves from the Credit In column to the Credit column, signifying that the amount is no longer borrowed but has been secured. On the parent order, a return credit payment transaction is created to ensure that the transferred amount is deducted from the available funds. The&nbsp;Returned&nbsp;amount is updated on both the parent and the return order, and&nbsp;the Credit and Credit Out amounts are decreased to reflect the transfer of credit to the return order.</p>\r\n\r\n<h5>Example 1: Pure Return Order</h5>\r\n\r\n<p>For example, when if a $100 parent order is fully shipped and settled, and a -$40 ship to return center&nbsp;order is created against it, then the Customer Service UI generates a payment request when the return order is created, and an entry is created for the return order with Book Amount = -40. $40 of return credit is &quot;borrowed&quot; from the parent order, to reserve these funds so that they cannot be used for other refunds, which increments the Credit In Amount on the return order and&nbsp;the Credit Out Amount on the parent order.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t</tr>\r\n\t</tbody>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When the return items are received and verified, a return invoice INV01 is created for -$40, which triggers a payment request to be sent from the Order component to the Payment component. This return invoice updates the return order payment summary by moving -$40 from the Book Amount to the Debit Amount, which triggers the movement of payment methods and settlement transactions from the parent order to return order. When the $40 payment method and $40 settlement is copied from the parent to return, then the return order Credit Amount is incremented, Credit In is decremented (since the funds are fully transferred and no longer &quot;borrowed&quot;), and the Returned amount is updated to reflect the return invoice total. On the parent order, when the settlement is copied and a $40 return credit transaction is created, then the Credit Amount and Credit Out are decreased, and the Returned amount is increased to track the total value of returned items against this order.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t</tr>\r\n\t</tbody>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>INV01</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When the calculate service&nbsp;runs, which could be immediately or via the next scheduled run (depending on configuration), then an open refund transaction is created against the copied settlement on the return order, which increments Requested Refund Amount by $40. When the execute service runs, the open refund is executed, and the $40 moves from Requested Refund to decrement Credit Amount.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>INV01</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Return Order</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5>Example 2: Even Exchange Order</h5>\r\n\r\n<p>For example, when if a $100 parent order is fully shipped and settled, and an even exchange order is created with a&nbsp;-$40 ship to return center&nbsp;item and a $40 ship to address item, then the Customer Service UI generates a payment request&nbsp;when the exchange&nbsp;order is created.&nbsp;$40 of return credit is &quot;borrowed&quot; from the parent order,&nbsp;which increments the Credit In Amount on the exchange order and&nbsp;the Credit Out Amount on the parent order.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t</tr>\r\n\t</tbody>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When the return items are received and verified, a return invoice INV01 is created for -$40.&nbsp;-$40 is moved from the Book Amount to the Debit Amount, which triggers the movement of payment methods and settlement transactions from the parent order to exchange order. When the&nbsp;payment method and $40 settlement is copied to the exchange order, then the exchange&nbsp;order Credit Amount is incremented, Credit In is decremented, and the Returned amount is updated to reflect the return invoice total. On the parent order, a $40 return credit transaction is created,&nbsp;the Credit Amount and Credit Out are decreased, and the Returned amount is increased.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t</tr>\r\n\t</tbody>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>INV01</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When the calculate service&nbsp;runs, no updates occur on the exchange order, since there is still $40 worth of exchange items which are pending shipment. When the exchange items ship, a shipment invoice INV02 is created, and $40 moves from Book Amount to Debit Amount on the exchange order. When the calculate service runs, no new transactions are created, since the balance due is zero.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Order</th>\r\n\t\t\t<th scope=\"col\">Credit</th>\r\n\t\t\t<th scope=\"col\">Debit</th>\r\n\t\t\t<th scope=\"col\">Book</th>\r\n\t\t\t<th scope=\"col\">Authorized</th>\r\n\t\t\t<th scope=\"col\">Requested Auth</th>\r\n\t\t\t<th scope=\"col\">Requested Settle</th>\r\n\t\t\t<th scope=\"col\">Requested Refund</th>\r\n\t\t\t<th scope=\"col\">Returned</th>\r\n\t\t\t<th scope=\"col\">Credit In</th>\r\n\t\t\t<th scope=\"col\">Credit Out</th>\r\n\t\t\t<th scope=\"col\">Invoice Id</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>100</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td><font>Parent Order</font></td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>INV01</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Parent Order</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Exchange Order</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>40</td>\r\n\t\t\t<td>-40</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t\t<td>INV02</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/payment-health-dashboard\" hqid=\"3127204\">Payment Health Dashboard</a></li><li><a href=\"/authorization\" hqid=\"2617709\">Authorization</a></li><li><a href=\"/payment-rest-apis-and-user-exits\" hqid=\"2617717\">Rest APIs and User Exits</a></li><li><a href=\"/other-transaction-types\" hqid=\"2617712\">Other Transaction Types</a></li><li><a href=\"/capturing-payment\" hqid=\"2617706\">Capturing Payment</a></li><li><a href=\"/payment-schedulers\" hqid=\"2617715\">Payment Schedulers & Batch Processing</a></li><li><a href=\"/paymentfailures\" hqid=\"2660553\">Payment Failures</a></li><li><a href=\"/invoicing-sales-posting\" hqid=\"2617713\">Invoicing and Sales Posting</a></li><li><a href=\"/paymentoverview\" hqid=\"2688302\">Payment Overview</a></li><li><a href=\"/settlement\" hqid=\"2617710\">Settlement</a></li><li><a href=\"/refunds\" hqid=\"2617711\">Refunds</a></li><li><a href=\"/payment-fraud\" hqid=\"2617716\">Fraud</a></li><li><a href=\"/payment-types\" hqid=\"2617707\">Payment Types</a></li><li><a href=\"/payment-gateway-integration\" hqid=\"2617714\">Payment Gateway Integration</a></li><li><a href=\"/einvoice\" hqid=\"3061519\">eInvoice </a></li><li><a href=\"/payment-troubleshooting\" hqid=\"2617718\">Testing & Troubleshooting Payment</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 68303,
  "scraped_at": "2025-08-09T21:58:40.430839",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Order Selling››Payment ››How Payment Processing Works How Payment Processing Works Previous I Next This section explains the payment life cycle for each payment type, how payment status is calculated, and how payment transactions are created and processed. Payment Life CyclesPayment StatusUpdating Order Payment StatusPayment RulesPayment Processing using the Payment SummaryPayment Summary Attribute DefinitionsUpdates to the Payment SummaryPayment Summary Creation LogicReturn Credit CalculationsRelated Articles Payment Life Cycles Typical credit card and debit payments have a life cycle which holds an authorization until items are fulfilled, at which time a settlement is created. Some gift card or store credit payment processors which support authorization can also use this life cycle. The life cycle for such payments is as follows: Some payment types do not hold authorizations, but instead these payments are directly settled upon capturing the payment. For instance, many gift card or store credit payment processors do not hold authorizations. The life cycle for such payments are as follows: Pre-paid payment types such as cash, check, and traveler's check are assumed to be settled when the payment method is saved. The life cycle is as follows: E-Check payments follow a unique life cycle, because these electronic funds transfers can take a few days to transfer funds from one account to another. This asynchronous process differs from payments such as credit cards or gift cards which are immediately deducted from the payee's account. The e-check life cycle is as follows: PayPal payments follow a slightly different life cycle, since these payments are authorized outside of the system. When a PayPal payment is imported with an authorization, the life cycle is as follows: Payment Status Payment status is calculated for each payment header and can be used to track the payment life cycle of an order. The payment status is calculated as the lowest numeric payment status on the order. For example, if a $100 order has $50 authorized and $50 paid, then the payment status is \"Authorized\". There are no failure-specific payment statuses; when authorization, settlement, or refund fails, then the Awaiting Payment Info and Awaiting Refund statuses are used to signal that action needs to be taken on the order. The following table provides an overview of each payment status. All payment statuses except for Not Applicable are maintained in the Payment component. Not Applicable status is calculated by the Order component in scenarios where payment processing is disabled. Status Status Id Description Not Applicable 0 Payment is not required for this order. Occurs when payment is disabled for the given order type (for example, replenishment orders), or when the order total is zero. Awaiting Payment Info 1000 Insufficient payment has been captured for the value of the ordered items. Occurs when items are added to an order, but no payment has been added, or when an authorization or settlement fails. Awaiting Authorization 2000 Sufficient payment has been provided, but authorization has not yet been attempted. Occurs when open authorizations are pending to be executed. Once the execute service is invoked for the open authorizations, then the authorization transactions are closed, and the payment status is updated to Authorized (if authorization is successful) or Awaiting Payment Info (if authorization fails). Authorized 3000 Sufficient payment has been authorized for the order. Indicates that the order can be released to the DC or stores for fulfillment. Awaiting Settlement 4000 Open settlements are pending. Once settlement is executed, then the transactions are closed, and the payment status is updated to Paid (if settlement succeeds) or Awaiting Payment Info (if settlement fails). Paid 5000 Sufficient payment has been settled for the order. For non pre-paid payments, this occurs after all items are fulfilled and settlements have been processed. For pre-paid payments, this occurs when an order is captured with closed, successful settlements. Awaiting Refund 6000 The order total is negative, and the refund is pending. Occurs when an appeasement or return triggers an open refund to be created, but the Payment component has not yet attempted to execute the refund. Once the execute service is invoked for the open refunds, then the refund transactions are closed and the payment status is updated to Refunded. This status is also used when an order total is negative, and insufficient refund transactions exist for the order. If payment refund fails or goes unavailable and all the retries are exhausted, the order payment status is moved back to Paid. Refunded 7000 The order has been fully refunded. Occurs when a full order refund has been issued via an appeasement, or after all items on an order have been returned. Custom Payment Statuses It's currently not possible to define custom payment statuses or to customize the payment status displayed in the order or contact center UIs. If this is required, an extended attribute can be added for custom payment status. This attribute can be calculated by a custom component and displayed on the UI via an extension point. Updating Order Payment Status When the payment status changes, the payment component updates the order with the latest status. The order payment status can be updated in both synchronous and asynchronous scenarios. Both scenarios leverage a single set of payment status calculation logic which exists in the order component. In asynchronous flows, the payment component puts the order Id in a queue to notify the order component that the payment status has changed. The order component picks up the order id from the queue and calculates the payment status. For example, if the payment component initiates an authorization which fails, then the order is updated with payment status Awaiting Payment Info. In synchronous flows, the order component's payment status calculation logic is invoked with an input order id, and the order payment status is updated. Payment Rules The payment rule is used to choose a payment configuration and a payment gateway for each payment type. For each payment type, a payment rule is selected using three attributes: payment type, order type, and card type. One payment rule is required per payment type. Within a payment type, unique payment rules can optionally be configured by order type and/or card type. If multiple rules are eligible for a payment type, then the rule which matches the card type and order type is selected. If no such rule exists, then a rule with matching card type and null order type is selected. If no such rule exists, then a rule with matching order type and null card type is selected. To configure payment rules, navigate to the Payment Rule UI. Payment Processing using the Payment Summary The Payment Summary table is a ledger which keeps record of debits and credits for each order. Throughout the life cycle of an order, the payment summary tracks the amount to be authorized for ordered items, the amount to be settled for fulfilled items, and the amount to be refunded for returned items or appeasements. Since the payment summary is the master record of all order payments, this table is used for: Calculating balance due Determining if any payment transactions need to be created Calculating order payment status To view the payment summary totals for an order, the Total Payment Summary API can be used. This service returns the sum of all Payment Summary columns as well as the total balance due. Payment Summary Attribute Definitions Column Definition Master record of data Credit Amount Amount the customer has paid; amount the retailer has collected for the order Payment transactions Debit Amount Amount the customer owes the retailer, or total value of goods and services that the retailer has provided to the customer Order invoices Book Amount Total value of ordered items, or goods and services that the retailer has promised to the customer but not yet fulfilled Order; Calculated as order total minus sum of invoice totals Authorized Amount Amount which is authorized for an order Payment transactions Requested Authorization Amount Amount for which open authorization records exist Payment transactions Requested Settlement Amount Amount for which open settlement records exist Payment transactions Requested Refund Amount Amount for which open refund records exist Payment transactions Credit In Amount of return credit which has been borrowed from the original order, in case of a return Order lines Credit Out Amount of return credit which has been loaned to return orders; tracked on the original order Order lines Returned Amount Total value of return items which have been booked but not yet shipped to the return center Order lines These columns are used when calculating the types of payment transactions that need to be created, if any. For instance, if a $300 order has not yet been shipped and has a $300 authorization, then the Payment component recognizes that Book Amount = 300 and Authorized Amount = 300, so no new payment transactions are required. However, if a $300 order has not yet been shipped and has a $100 authorization, then the Payment component recognizes there is $200 that still needs to be authorized. Updates to the Payment Summary There are two types of events which result in updates to the payment summary: order updates and payment updates. Order updates reflected in the payment summary include any change in order totals or invoice totals. The sum of order total minus invoice totals is used to calculate the amount due at a later point in time, for which an authorization is required. For instance, if a $50 order is placed online for items to ship to a customer's address, then the order total is $50. Order totals are reflected in the Book Amount column. Invoice totals, or the sum of shipment, adjustment, and return invoices, are used to calculate the amount due immediately, for which a settlement or refund is required. For instance, if a $50 order is placed online for items to ship to a customer's address, then the invoice total is $0. Once the $50 worth of items ship, then the invoice total is $50. Invoice totals are reflected in the Debit Amount column. Payment updates reflected in the payment summary include any updates to payment transactions. For instance, when an open authorization payment transaction is created but has not yet been sent to the payment gateway, the Requested Authorization Amount column is updated. Similarly, when an open settlement or refund transaction is created, the Requested Settlement Amount or Requested Refund Amount columns are updated, respectively. A payment summary record is also created each time a payment transaction is updated. For instance, when an open authorization payment transaction is sent to the payment gateway and the payment gateway responds with a success decision, then the Authorized Amount is updated. Similarly, when an open settlement or refund transaction is successfully executed, the Credit Amount column is increased in case of settlement or decreased in case of refund. Update Type Event Record Created in Payment Summary Payment A payment method is captured for an order. None Payment A payment transaction is created against a payment method and is in open status. If transaction type = Authorization, then create record with Requested Auth Amount. If transaction type = Settlement, then create record with Requested Settlement Amount. If transaction type = Refund, then create record with Requested Refund Amount. Payment An open payment transaction is processed successfully. If transaction type = Authorization, then create record which moves the amount from Requested Auth Amount to Authorized Amount. If transaction type = Settlement and an invoice exists for the payment transaction, then create record which moves the amount from Requested Settlement Amount to Credit Amount. If transaction type = Refund, then create record which moves the amount from Requested Refund Amount to Credit Amount. Payment An open payment transaction is processed, but the transaction fails. If transaction type = Authorization, then create record which decreases Requested Auth Amount. If transaction type = Settlement, then create record which decreases Requested Settlement Amount. If transaction type = Refund, then create record which decreases Requested Refund Amount. Order A shipment invoice is created for an order. Create a record which moves invoice amount from Book Amount to Debit Amount. Order An adjustment invoice is created for an order. Create a record which moves invoice amount from Book Amount to Debit Amount. Order A return is created against an existing order. Create a record against the parent order with Credit Out equal to return credit loaned. Create a record against the return order with Credit In equal to return credit borrowed and Returned amount equal to return order total. Order A return invoice is created for an order. Create a record which moves invoice amount from Book Amount to Debit Amount. Move payment transactions from parent to return order and decrease Credit In and Credit Out. Payment Summary Creation Logic New records are created to capture any change in the payment summary. Records in the Payment Summary table are not updated. The Payment component makes a web service call to the Order component to get the order total and a list of invoice totals. Based on the response, payment summary records get created as follows For each invoice, create a record with Book = -Debit with reference to the invoice ID If Book Amount is not equal to Order Total - sum(Invoice Totals), then create a record to adjust Book Amount Payment Summary Examples Order Creation and Fulfillment Event Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Invoice Id For example, when a customer places an order in the call center with one $60 item and one $40 item, then the Customer Service UI generates a payment request and the Book Amount is updated with the order total of $100. 100 After adding a credit card payment method, the customer confirms the order, and the Customer Service UI generates a payment request and an open authorization is created for $100. The Requested Auth Amount is updated with $100. 100 When the payment gateway response is received and indicates that authorization was successful, then the $100 moves from Requested Auth Amount to Authorized Amount. 100 -100 When the $60 item ships, then a shipment invoice INV01 is created for $60, and the Order component generates a payment request. $60 moves from Book Amount to Debit Amount. 60 -60 INV01 An open settlement transaction is created against the authorization, and the Requested Settle Amount is increased by $60. -60 60 When the payment gateway response is received and indicates that settlement was successful, then the $60 moves from Requested Settle Amount to Credit Amount. 60 -60 When the $40 item ships, then a shipment invoice INV02 is created for $40, and the Order component generates a payment request. $40 moves from Book Amount to Debit Amount. 40 -40 INV02 An open settlement transaction is created against the authorization, and the Requested Settle Amount is increased by $40. -40 40 When the payment gateway response is received and indicates that settlement was successful, then the $40 moves from Requested Settle Amount to Credit Amount. At this point, the total Credit Amount = $100 and total Debit Amount = $100, so the order is fully paid. 40 -40 When the customer calls to complain about a delayed shipment and the CSR applies a -$15 appeasement, then an adjustment invoice INV03 is created for -$15. The Debit Amount decreases by $15. -15 INV03 An open refund transaction is created against the settlement, and the Requested Refund Amount is increased by $15. 15 When the payment gateway response is received and indicates that settlement was successful, then the $15 moves from Requested Refund Amount to Credit Amount. -15 -15 Scenarios resulting in an Adjustment Invoice Appeasement Applied After Shipment (prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $80 worth of items ship 80 -80 $30 appeasement - create Adjustment Invoice -30 $30 is refunded -30 Scenarios not resulting in an Adjustment Invoice Order Line Cancellation (prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $30 line is canceled -30 $30 is refunded -30 $50 ships - Shipment Invoice 50 -50 Appeasement Applied Before Shipment (prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $30 appeasement -30 $30 is refunded -30 $80 ships 50 -50 Order Cancellation (prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 Order canceled -80 $80 refunded -80 Order Line Cancellation (prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $50 worth of items ship 50 -50 $30 line is canceled -30 $30 is refunded -30 Scenarios resulting in an Adjustment Invoice Appeasement Applied After Shipment (not prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $80 worth of items ship 80 -80 Settle $80 80 -80 $30 appeasement - create Adjustment Invoice -30 $30 is refunded -30 Scenarios not resulting in an Adjustment Invoice Order Line Cancellation (not prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $30 line is canceled -30 Reduce authorization -30 $50 worth of items ship - Shipment Invoice 50 -50 Settle $50 50 -50 Appeasement Applied Before Shipment (not prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $30 appeasement applied -30 Reduce authorization -30 $50 worth of items ship 50 -50 Settle $50 50 -50 Order Line Cancellation (not prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 $50 worth of items ship 50 -50 Settle $50 50 -50 $30 line is canceled -30 Reduce authorization -30 Order Cancellation (not prepaid) Event Credit Debit Book Auth Customer places $80 order 80 80 Order canceled -80 Reduce authorization -80 Return Credit Calculations Return credit is the mechanism to transfer funds from the parent order to the return order and can be used to issue a refund or can be used towards exchange of items. The payment summary is used to manage the borrowing and transfer of return credit. For ship to return center order lines, return credit is borrowed from the parent order when a return order is created. When credit is borrowed, the parent order Credit Out is increased to reflect outgoing credit. The return order Credit In amount is increased to reflect incoming credit, and the Returned amount reflects the total value of return items. When a return invoice is created, then the return credit is fully transferred from the parent order to the return order in the form of settlement transactions. On the return order, the invoiced amount moves from the Credit In column to the Credit column, signifying that the amount is no longer borrowed but has been secured. On the parent order, a return credit payment transaction is created to ensure that the transferred amount is deducted from the available funds. The Returned amount is updated on both the parent and the return order, and the Credit and Credit Out amounts are decreased to reflect the transfer of credit to the return order. Example 1: Pure Return Order For example, when if a $100 parent order is fully shipped and settled, and a -$40 ship to return center order is created against it, then the Customer Service UI generates a payment request when the return order is created, and an entry is created for the return order with Book Amount = -40. $40 of return credit is \"borrowed\" from the parent order, to reserve these funds so that they cannot be used for other refunds, which increments the Credit In Amount on the return order and the Credit Out Amount on the parent order. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Return Order -40 Parent Order 40 Return Order 40 When the return items are received and verified, a return invoice INV01 is created for -$40, which triggers a payment request to be sent from the Order component to the Payment component. This return invoice updates the return order payment summary by moving -$40 from the Book Amount to the Debit Amount, which triggers the movement of payment methods and settlement transactions from the parent order to return order. When the $40 payment method and $40 settlement is copied from the parent to return, then the return order Credit Amount is incremented, Credit In is decremented (since the funds are fully transferred and no longer \"borrowed\"), and the Returned amount is updated to reflect the return invoice total. On the parent order, when the settlement is copied and a $40 return credit transaction is created, then the Credit Amount and Credit Out are decreased, and the Returned amount is increased to track the total value of returned items against this order. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Return Order -40 Parent Order 40 Return Order 40 Return Order 40 Return Order -40 INV01 Return Order 40 -40 -40 Parent Order -40 40 -40 When the calculate service runs, which could be immediately or via the next scheduled run (depending on configuration), then an open refund transaction is created against the copied settlement on the return order, which increments Requested Refund Amount by $40. When the execute service runs, the open refund is executed, and the $40 moves from Requested Refund to decrement Credit Amount. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Return Order -40 Parent Order 40 Return Order 40 Return Order 40 Return Order -40 INV01 Return Order 40 -40 -40 Parent Order -40 40 -40 Return Order 40 Return Order -40 -40 Example 2: Even Exchange Order For example, when if a $100 parent order is fully shipped and settled, and an even exchange order is created with a -$40 ship to return center item and a $40 ship to address item, then the Customer Service UI generates a payment request when the exchange order is created. $40 of return credit is \"borrowed\" from the parent order, which increments the Credit In Amount on the exchange order and the Credit Out Amount on the parent order. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Parent Order 40 Exchange Order 40 When the return items are received and verified, a return invoice INV01 is created for -$40. -$40 is moved from the Book Amount to the Debit Amount, which triggers the movement of payment methods and settlement transactions from the parent order to exchange order. When the payment method and $40 settlement is copied to the exchange order, then the exchange order Credit Amount is incremented, Credit In is decremented, and the Returned amount is updated to reflect the return invoice total. On the parent order, a $40 return credit transaction is created, the Credit Amount and Credit Out are decreased, and the Returned amount is increased. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Parent Order 40 Exchange Order 40 Exchange Order 40 Exchange Order -40 INV01 Exchange Order 40 -40 -40 Parent Order -40 40 -40 When the calculate service runs, no updates occur on the exchange order, since there is still $40 worth of exchange items which are pending shipment. When the exchange items ship, a shipment invoice INV02 is created, and $40 moves from Book Amount to Debit Amount on the exchange order. When the calculate service runs, no new transactions are created, since the balance due is zero. Order Credit Debit Book Authorized Requested Auth Requested Settle Requested Refund Returned Credit In Credit Out Invoice Id Parent Order 100 100 Parent Order 40 Exchange Order 40 Exchange Order 40 Exchange Order -40 INV01 Exchange Order 40 -40 -40 Parent Order -40 40 -40 Exchange Order 40 -40 INV02 Related Articles Payment Health DashboardAuthorizationRest APIs and User ExitsOther Transaction TypesCapturing PaymentPayment Schedulers & Batch ProcessingPayment FailuresInvoicing and Sales PostingPayment OverviewSettlementRefundsFraudPayment TypesPayment Gateway IntegrationeInvoice Testing & Troubleshooting Payment"
}