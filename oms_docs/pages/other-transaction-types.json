{
  "success": true,
  "permalink": "other-transaction-types",
  "title": "Other Transaction Types",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2163646\" href=\"/order-selling-2\" class=\"breadcrumb-links\">Order Selling</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2163647\" href=\"/payment-2\" class=\"breadcrumb-links\">Payment</a></li><li> <span>››</span>Other Transaction Types</li></ul>  \t\r\n\t\t<h2>Other Transaction Types</h2>\r\n\r\n<p></p>\r\n\r\n<a href=\"/refunds\" hqid=\"2617711\">Previous</a>&nbsp;I&nbsp;<a href=\"/invoicing-sales-posting\" hqid=\"2617713\">Next</a>\r\n<p>&nbsp;</p>\r\n\r\n<p>This section describes transaction types other than authorization, settlement, and refund, such as gift card reloads and balance checks, voids, and post voids.</p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/other-transaction-types$gift-nbsp-card-transaction-types\">Gift&nbsp;Card Transaction Types</a></li><li><a href=\"/other-transaction-types$balance-check\">Balance Check</a></li><li><a href=\"/other-transaction-types$void\">Void</a><ul><li><a href=\"/other-transaction-types$void-as-follow-on-vs-standalone\">Void as Follow-On vs. Standalone</a></li><li><a href=\"/other-transaction-types$void-configuration\">Void Configuration</a></li></ul></li><li><a href=\"/other-transaction-types$post-void-cancel-payment\">Post Void/Cancel Payment</a><ul><li><a href=\"/other-transaction-types$post-void-cancel-configuration\">Post Void/Cancel Configuration</a></li></ul></li><li><a href=\"/other-transaction-types$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"gift-nbsp-card-transaction-types\" id=\"gift-nbsp-card-transaction-types\"></a>Gift&nbsp;Card Transaction Types</h3>\r\n\r\n<p>A few transaction types exist for the scenario where a gift card item is sold, which is different from when a gift card is used as tender. When a gift card item is sold, a reload transaction is used to add value to an existing gift card. An Activate transaction is used to activate and add value to a new gift card. A Deactivate transaction can be used when a gift card is \"cashed out,\" and the customer is issued change for the remaining balance. For example, if a customer pays for a $39 order with a $40 gift card, the retailer can \"cash out\" the customer by giving them the remaining gift card balance of $1 in cash, and then deactivating the gift card.</p>\r\n\r\n<p>Activate, Deactivate, and Reload transactions are currently not created by any process in&nbsp;the payment component. These transactions must be initiated by an external system such as POS, and then they can be saved in the payment component. Activate, Deactivate, and Reload transactions do not affect the payment status or payment summary for an order.</p>\r\n\r\n<h3><a name=\"balance-check\" id=\"balance-check\"></a><a id=\"Balance Check Payment Concept Guide\" name=\"Balance Check Payment Concept Guide\"></a>Balance Check</h3>\r\n\r\n<p>A balance check transaction gets the current balance of a payment account. For example,&nbsp;when a customer uses a gift card to pay for an order, a balance check transaction is used to tell the customer how much money remains on the gift card,&nbsp;before authorizing or settling funds against the gift card.&nbsp;If a payment header is saved with Execution Mode 'BalanceCheck', then the Payment component creates and executes a balance check payment transaction.&nbsp;</p>\r\n\r\n<p>When the customer is present and a gift card is swiped as a form of tender, then the gift card remaining balance is included as part of the authorization or settlement transaction response. The remaining balance is displayed for informational purposes after the payment has been tendered. If the gift card processor includes the remaining balance as part of the authorization or settlement response, then it can be saved in the remaining balance field in the payment transaction. No funds are moved or reserved in a balance check transaction. Balance check transactions do not update the payment summary or payment status; they are purely informational.</p>\r\n\r\n<p original-title=\"Gift card balance check - card not present\"><img alt=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Gift%20card%20balance%20check%20-%20card%20not%20present.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0dpZnQlMjBjYXJkJTIwYmFsYW5jZSUyMGNoZWNrJTIwLSUyMGNhcmQlMjBub3QlMjBwcmVzZW50LnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1Mzk2Nn19fV19&Signature=a8T200EYbBk3TBLLh9B-1ZDn18ijv9MooDCvv4t6JW8sUIX-BHqf9iUI0ogiOdcStbsnEhCZSQCkVWmlyUmteg1yipw9VXbC4NC0Y8bztt2blGSu2qMZpIRm8y5VkQX4tgUCKnpzfClTINawzoGqfihbSfk4ghC4rJrbeVkR~yUj9rqWg~8md8a0zxmBZeIYSi76jEHQtvgePzgHYtsgE18gAxaxZEDHj3i7~NyVLSCSBdR2oDf-5CyRZrINJEExOn4xZGDZy-GM~DvNLzMY-cSCy-ud~q6rRHBKmu383xkllNZRR-t~L0Jz8tQwxIUp9F5dL8MP~AAh1zQJ~tNpHw__&Key-Pair-Id=K2TK3EG287XSFC\"></p>\r\n\r\n<h3><a name=\"void\" id=\"void\"></a>Void</h3>\r\n\r\n<p>Void transactions cancel a payment transaction from the open batch in the third-party payment gateway. For example, if a customer at the point of sale has already swiped a $30 credit card, then a $30 settlement has already been submitted to the payment gateway and is marked as closed in the payment component. If the customer then wishes to remove the credit card, then the credit card payment method can be voided by updating&nbsp;isVoided&nbsp;to true. When a payment method is voided, a void transaction is created against the original settlement (or refund) transaction, and that void transaction cancels the open settlement&nbsp;in the payment gateway. By voiding the settlement instead of performing a refund, the customer never sees a charge on their account statement, since the settlement never gets processed.</p>\r\n\r\n<p>If the payment gateway has already sent the settlement to the processor, then a void transaction will fail. If a void against a settlement fails, then the Payment component attempts a follow-on refund against the settlement. If a void against a refund fails, then additional funds must be captured in the form of a new payment method.</p>\r\n\r\n<p>When a payment method is voided, a void transaction is created against each settlement and refund transaction within the payment method. If the payment type can be processed using a thirdparty gateway, like credit&nbsp;card and gift card, then the Payment component immediately executes the open void transaction and includes the outcome in the Save Payment Header response. If the payment type cannot be processed using a third party gateway but instead require some manual intervention, like cash, check, or traveler's check, then the Payment component leaves the void transaction in open status and expects the external system such as point of sale to close the transaction.</p>\r\n\r\n<h4><a name=\"void-as-follow-on-vs-standalone\" id=\"void-as-follow-on-vs-standalone\"></a>Void as Follow-On vs. Standalone</h4>\r\n\r\n<p>When a payment header is canceled, the payment component reads the voidAction&nbsp;attribute for each payment type on the order to determine what action to take. This configuration&nbsp;indicates whether a void or refund should be initiated as a follow-on against the original payment method, or as a new payment method with a standalone refund. For example, follow-on voids and refunds are not supported for debit, so the voidAction&nbsp;on the debit payment type is set to 'New payment method'. This ensures&nbsp;that the payment component creates a new debit payment method with an open refund transaction to suggest to point of sale (or another order capture system) that a&nbsp;debit card is swiped to issue a refund.</p>\r\n\r\n<p>A voidAction&nbsp;should be configured for each&nbsp;payment type.</p>\r\n\r\n<h4><a name=\"void-configuration\" id=\"void-configuration\"></a>Void Configuration</h4>\r\n\r\n<p>The Void Action configuration indicates the behavior when a payment is voided before the transaction is completed (called a \"mid-void\").&nbsp;Possible values include:</p>\r\n\r\n<ol>\r\n\t<li><strong>Create open void transaction:&nbsp;</strong>When a payment method of this payment type is voided, a follow-on void gets created for each closed settlement and refund transaction. The void transaction is not sent to a gateway, but instead is left open, so that POS can perform actions and close the transaction. For example, when a cash payment with a closed settlement is voided, an open follow-on void is created against the settlement, and POS is expected to close the void transaction after issuing cash to the customer.</li>\r\n\t<li><strong>Auto process void transaction:&nbsp;</strong>When a payment method of this payment type is voided, a follow-on void gets created for each closed settlement and refund transaction. The void transaction is immediately sent to the gateway to be processed, and the payment header response includes the details of the outcome. For example, when a credit card with a closed settlement is voided, a follow-on void is created against the settlement and executed in the gateway.</li>\r\n\t<li><strong>Void Not supported:</strong>&nbsp;Voiding the payment method is not supported.</li>\r\n</ol>\r\n\r\n<div class=\"warning\">Void Behavior in Payment Type was deprecated and it should be left as null so that the right void action configuration is picked up.</div>\r\n\r\n<h3><a name=\"post-void-cancel-payment\" id=\"post-void-cancel-payment\"></a>Post Void/Cancel Payment</h3>\r\n\r\n<p>Post voids occur when a customer or store associate wants to effectively invalidate an order. A post void most commonly occurs when a store associate has made a mistake in ringing up an order. Unlike voids, post voids can occur a couple of hours after the transaction has been completed, meaning that certain payment types such as traveler's check cannot be refunded back to the original traveler's check; instead, they are refunded via a different payment method like cash.</p>\r\n\r\n<p>To post void an order, use the Save Payment Header service with the payment header&nbsp;isCancelled&nbsp;flag set to true. When a payment header&nbsp;is post voided, the Payment component uses configuration to determine how to proceed for each payment method on the order.&nbsp; Each payment type has a&nbsp;cancelRefundPaymentType&nbsp;configured, and this is used in the case of post voids. For example, the&nbsp;cancelRefundPaymentType&nbsp;for a&nbsp;credit card payment method could be&nbsp;credit card, and the&nbsp;cancelRefundPaymentType&nbsp;for check payment method could be&nbsp;cash. The diagram below outlines the updates made to a payment header when it is&nbsp;canceled.</p>\r\n\r\n<p><img alt=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Post%20void%20payment.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL1Bvc3QlMjB2b2lkJTIwcGF5bWVudC5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTM5NjZ9fX1dfQ__&Signature=qcogR63Wro3yLyS7-kar6XXSGFxPvhYR~0TofrJdH2RzIsXHIELA8xhEOckJFTVIkmWqJadKA9Ik6InvhkWWmiWDOQrHZ3yRPs3tzIMRFt7k0yt9mGL9dH-zIPQL8Toq~ZD9hKK9Dq3nazvessv3~qTZVXLjFdApQtxZ9ION7mgDe1NGuiyhUIlMG8uMnZkpdVIPRcN0WpqWPh-3pa0Gx1xmKy3XKWyPCxFTS59vKd92AStb86pxUIawjnI~nokzpXGfsxp~tKVKFl8StMKot~yB~MEHciRdubTziDCdMx4iauQTTcDSO6mjVZ9wYQ59KY8IbJivNAm~4OIdrfAyYw__&Key-Pair-Id=K2TK3EG287XSFC\"></p>\r\n\r\n<h4><a name=\"post-void-cancel-configuration\" id=\"post-void-cancel-configuration\"></a>Post Void/Cancel Configuration</h4>\r\n\r\n<p>Indicates the behavior when a payment is&nbsp;canceled&nbsp;during a Post Void in POS.&nbsp; For example, some payment types such as cash should have an open void transaction created, so POS can issue cash to the customer and close the transaction. Other payment types like&nbsp;credit cards can have void transactions created and executed in the gateway immediately, since no follow-up action is required by POS.</p>\r\n\r\n<p>Possible values for cancel behavior include:</p>\r\n\r\n<ol>\r\n\t<li><strong>New payment method</strong>:&nbsp;When a payment method of this payment type is&nbsp;canceled, a new payment method gets created to issue a refund for any closed settlement amounts. For example, follow-on voids against Traveler’s Check are not supported as checks cannot be given back to the customer.&nbsp; So, instead of creating a cancel transaction, this flag tells the payment component to create a new payment method. The new payment type is created based on the payment capture configuration called 'Cancel Refund Payment Type.'</li>\r\n\t<li><strong>Create and process cancel against original payment method</strong>:&nbsp;When a payment method of this payment type is&nbsp;canceled, a follow-on void gets created for each closed settlement and refund transaction. The cancel transaction is immediately sent to the gateway to be processed, and the payment header response includes the details of the outcome. For example, when a credit card with a closed settlement is&nbsp;canceled, a follow-on cancel is created against the settlement and executed in the gateway.&nbsp;&nbsp;&nbsp;</li>\r\n\t<li value=\"3\"><strong>Create open cancel against original payment method</strong>:&nbsp;When a payment method of this payment type is&nbsp;canceled, a follow-on void gets created for each closed settlement and refund transaction. The cancel transaction is not sent to a gateway, but instead is left open, so that POS can perform actions and close the transaction. For example, when a cash payment with a closed settlement is&nbsp;canceled, an open follow-on cancel is created against the settlement, and POS is expected to close the cancel transaction after issuing cash to the customer.</li>\r\n</ol>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/payment-fraud\" hqid=\"2617716\">Fraud</a></li><li><a href=\"/payment-types\" hqid=\"2617707\">Payment Types</a></li><li><a href=\"/paymentoverview\" hqid=\"2688302\">Payment Overview</a></li><li><a href=\"/capturing-payment\" hqid=\"2617706\">Capturing Payment</a></li><li><a href=\"/einvoice\" hqid=\"3061519\">eInvoice </a></li><li><a href=\"/invoicing-sales-posting\" hqid=\"2617713\">Invoicing and Sales Posting</a></li><li><a href=\"/authorization\" hqid=\"2617709\">Authorization</a></li><li><a href=\"/payment-gateway-integration\" hqid=\"2617714\">Payment Gateway Integration</a></li><li><a href=\"/payment-schedulers\" hqid=\"2617715\">Payment Schedulers & Batch Processing</a></li><li><a href=\"/paymentfailures\" hqid=\"2660553\">Payment Failures</a></li><li><a href=\"/payment-rest-apis-and-user-exits\" hqid=\"2617717\">Rest APIs and User Exits</a></li><li><a href=\"/refunds\" hqid=\"2617711\">Refunds</a></li><li><a href=\"/how-payment-processing-works\" hqid=\"2617708\">How Payment Processing Works</a></li><li><a href=\"/payment-health-dashboard\" hqid=\"3127204\">Payment Health Dashboard</a></li><li><a href=\"/payment-troubleshooting\" hqid=\"2617718\">Testing & Troubleshooting Payment</a></li><li><a href=\"/settlement\" hqid=\"2617710\">Settlement</a></li></ul></div>\r\n\r\n<div id=\"\" style=\"left: 15px; top: 422.828px;\">&nbsp;</div>\r\n\r\n<div id=\"\" style=\"left: 15px; top: 422.828px;\">&nbsp;</div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 15847,
  "scraped_at": "2025-08-09T22:34:26.487945"
}