{
  "success": true,
  "permalink": "rfid-reader-custom-screen",
  "title": "RFID Reader - Custom Screen",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2164553\" href=\"/store-common\" class=\"breadcrumb-links\">Store Common</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2195072\" href=\"/storerfid\" class=\"breadcrumb-links\">Store RFID</a></li><li> <span>››</span>RFID Reader - Custom Screen</li></ul>  \t\r\n\t\t<h2>Store RFID - Custom Screens</h2>\r\n\r\n<p data-renderer-start-pos=\"1\">This page explains how to interact with an RFID reader from&nbsp;custom screens or base screens that do not offer base RFID support.</p>\r\n\r\n<p data-renderer-start-pos=\"75\">Below are actions to be performed on the RFID reader from the custom code (without a return value):</p>\r\n\r\n<table data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"559\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"171\"><strong data-renderer-mark=\"true\">Actions</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"558\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"182\"><strong data-renderer-mark=\"true\">Description</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" data-colwidth=\"558\" rowspan=\"1\"><strong data-renderer-mark=\"true\">Implementation</strong></th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"559\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"217\"><code data-renderer-mark=\"true\">initScanRfid()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"558\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"235\">This method connects our app to the RFID scanner.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"558\" rowspan=\"1\">MAExtension.RfidUtil.actions.initScanRfid();</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"559\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"338\"><code data-renderer-mark=\"true\">unsubscribeMultiTagLocating()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"558\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"371\">This method unsubscribe from the <code data-renderer-mark=\"true\">subscribeMultiTagLocating</code> subscription.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"558\" rowspan=\"1\">MAExtension.RfidUtil.actions.unsubscribeMultiTagLocating();</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"559\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"513\"><code data-renderer-mark=\"true\">unsubscribeSingleTagDistance()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"558\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"547\">This method unsubscribe from the <code data-renderer-mark=\"true\">subscribeSingleTagDistance</code> subscription.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"558\" rowspan=\"1\">MAExtension.RfidUtil.actions.unsubscribeSingleTagDistance();</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p data-renderer-start-pos=\"690\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"693\">Below are actions to be performed on the RFID reader from the custom code (with a return value):</p>\r\n\r\n<table data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"786\"><strong data-renderer-mark=\"true\">Return Action</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"803\"><strong data-renderer-mark=\"true\">Description</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" data-colwidth=\"375\" rowspan=\"1\"><strong data-renderer-mark=\"true\">Implementation</strong></th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"838\"><code data-renderer-mark=\"true\">readTags()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"852\">This method returns each tag that is read by the scanner. When the user pulls the trigger, &ldquo;START&rdquo; is returned. When the user releases the trigger, &ldquo;STOP&rdquo; is returned.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.readTags(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1171\"><code data-renderer-mark=\"true\">scanBarcode()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1188\">This method returns each barcode that is scanned by the scanner.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.scanBarcode(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1407\"><code data-renderer-mark=\"true\">showAvailableReaders()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1433\">This method returns a scanner that has been paired to the device.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.showAvailableReaders(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1662\"><code data-renderer-mark=\"true\">startScanRfid()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1681\">This method enables the RFID scanner so that it is now ready to start reading tags.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.startScanRfid(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1921\"><code data-renderer-mark=\"true\">stopScanRfid()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1939\">This method disables the RFID scanner so that it can no longer read tags.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.stopScanRfid(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2168\"><code data-renderer-mark=\"true\">clearReaderMemory()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2191\">This method clears the scanner&rsquo;s memory of any tags it has read (so that you can read the same tag once again).</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.clearReaderMemory(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2463\"><code data-renderer-mark=\"true\">disconnectFromReader()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2489\">This method disconnects our app from the RFID scanner.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.disconnectFromReader(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2707\"><code data-renderer-mark=\"true\">setShortRange()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2726\">This method configures the scanner to a short range (have to be closer distance to tags in order to read).</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.setShortRange(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2989\"><code data-renderer-mark=\"true\">setMediumRange()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3009\">This method configures the scanner to the medium range.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.setMediumRange(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3222\"><code data-renderer-mark=\"true\">setLongRange()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3240\">This method configures the scanner to a longer range.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.setLongRange(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3449\"><code data-renderer-mark=\"true\">switchToBarcode()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3470\">This method switches the scanner to Barcode mode.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.switchToBarcode(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3678\"><code data-renderer-mark=\"true\">switchToRfid()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3696\">This method switches the scanner to RFID mode.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.switchToRfid(request, (response) =&gt; { console.log(&quot;Response: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3898\"><code data-renderer-mark=\"true\">decodeSgtin96Epc()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3920\">This method decodes an SGTIN-96 EPC to get a GTIN-14.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = { epc: &quot;3074257bf7194e4000001a85&quot; } MAExtension.RfidUtil.returnActions.decodeSgtin96Epc(request, (response) =&gt; { console.log(&quot;GTIN: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4164\"><code data-renderer-mark=\"true\">encodeSgtin96Epc()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4186\">This method encodes an SGTIN-96 EPC given the filter, partition, GTIN-14, and serial number.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = { filter: &quot;0&quot;, partition: &quot;5&quot;, gtin: &quot;00123412341001&quot;, serialNo: &quot;6789&quot; } MAExtension.RfidUtil.returnActions.encodeSgtin96Epc(request, (response) =&gt; { console.log(&quot;EPC: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4512\"><code data-renderer-mark=\"true\">isScannerConnected()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4536\">This returns whether our app is connected to the RFID scanner or not.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.isScannerConnected(request, (response) =&gt; { console.log(&quot;Scanner Connected: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4776\"><code data-renderer-mark=\"true\">rfidRange()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"4791\">This returns the scanner&rsquo;s current range setting - &ldquo;SHORT&rdquo;, &ldquo;MEDIUM&rdquo;, or &ldquo;LONG&rdquo;.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.rfidRange(request, (response) =&gt; { console.log(&quot;Scanner Range: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5029\"><code data-renderer-mark=\"true\">readerMode()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5045\">This returns the scanner&rsquo;s current mode - &ldquo;RFID&rdquo; or &ldquo;BARCODE&rdquo;.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = {} MAExtension.RfidUtil.returnActions.readerMode(request, (response) =&gt; { console.log(&quot;Scanner Mode: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5265\"><code data-renderer-mark=\"true\">subscribeMultiTagLocating()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5296\">This method accepts list of EPC&rsquo;s and returns the nearest EPC tag from scanner. When the user pulls the trigger, &ldquo;START&rdquo; is returned. When the user releases the trigger, &ldquo;STOP&rdquo; is returned.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = { data: [&quot;30F6143C7C385C4020000000&quot;, &quot;30F6143C7C385C8020001306&quot;] } MAExtension.RfidUtil.returnActions.subscribeMultiTagLocating(request, (response) =&gt; { console.log(&quot;Nearest Tag: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"567\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5724\"><code data-renderer-mark=\"true\">subscribeSingleTagDistance()</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"5756\">This method accepts single tag and returns distance (0 - 100) of the tag from the scanner. When the user pulls the trigger, &ldquo;START&rdquo; is returned. When the user releases the trigger, &ldquo;STOP&rdquo; is returned.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" data-colwidth=\"375\" rowspan=\"1\">\r\n\t\t\t<div class=\"media_embed\">let request = { data: &quot;30F6143C7C385C4020000000&quot; } MAExtension.RfidUtil.returnActions.subscribeSingleTagDistance(request, (response) =&gt; { console.log(&quot;Tag Distance: &quot; + response.responseData); });</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p data-renderer-start-pos=\"6165\">&nbsp;</p>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 17480,
  "scraped_at": "2025-08-09T22:36:39.109094"
}