{
  "id": "2624646",
  "permalink": "paybylink",
  "title": "Pay by Link",
  "type": "topic",
  "level": 4,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Digital Self-Service/Pay by Link",
  "raw_item": {
    "id": "2624646",
    "text": "Pay by Link",
    "title": "Pay by Link",
    "permalink": "paybylink",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "193441",
    "parent": "f;193441",
    "created_date": "1599574702",
    "modified_date": "1751548927",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "12"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158714\" href=\"/digital-self-service-3\" class=\"breadcrumb-links\">Digital Self-Service</a></li><li> <span>››</span>Pay by Link</li></ul>  \t\r\n\t\t<h2>Pay by Link</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/paybylink$pay-by-link-flow-csr-confirms-order\">Pay by Link Flow - CSR Confirms Order</a></li><li><a href=\"/paybylink$customer-service-pay-by-link\">Customer Service Pay by Link</a></li><li><a href=\"/paybylink$exit-order-from-pay-by-link-for-contact-center-agents-nbsp\">Exit Order From Pay by Link for Contact Center Agents&nbsp;</a></li><li><a href=\"/paybylink$pay-by-link-outbound-emails\">Pay by Link - Outbound Emails</a></li><li><a href=\"/paybylink$pay-by-link-outbound-text-messages\">Pay by Link - Outbound Text Messages</a><ul><li><a href=\"/paybylink$sending-outbound-text-messages-with-twilio-for-u-s-phone-numbers\">Sending Outbound Text Messages with Twilio for U.S. Phone Numbers</a></li><li><a href=\"/paybylink$sending-outbound-text-messages-with-twilio-for-non-u-s-phone-numbers\">Sending Outbound Text Messages with Twilio for Non-U.S. Phone Numbers</a></li></ul></li><li><a href=\"/paybylink$pay-by-link-reminder-and-unconfirmed-orders-cancellation\">Pay by Link Reminder and Unconfirmed Orders Cancellation</a><ul><li><a href=\"/paybylink$auto-confirm-pay-by-link-orders\">Auto Confirm Pay by Link Orders</a></li><li><a href=\"/paybylink$pay-by-link-reminder\">Pay by Link Reminder</a></li><li><a href=\"/paybylink$paybylink-unconfirmed-orders-cancellation\">PayByLink Unconfirmed Orders Cancellation</a></li></ul></li><li><a href=\"/paybylink$digital-self-service-pay-by-link\">Digital Self-Service Pay by Link</a><ul><li><a href=\"/paybylink$digital-self-service-integration-with-payment-providers\">Digital Self-Service Integration with Payment Providers</a></li></ul></li><li><a href=\"/paybylink$pay-by-link-expiry\">Pay by Link Expiry</a></li><li><a href=\"/paybylink$multiple-payment-gateways\">Multiple Payment Gateways</a></li><li><a href=\"/paybylink$configurations\">Configurations</a><ul><li><a href=\"/paybylink$order-configuration\">Order Configuration</a></li><li><a href=\"/paybylink$customer-service-configuration\">Customer Service Configuration</a></li><li><a href=\"/paybylink$digital-self-service-configuration\">Digital Self-Service Configuration</a></li><li><a href=\"/paybylink$payment-gateway-configuration\">Payment Gateway Configuration</a><ul><li><a href=\"/paybylink$cybersource-configuration\">CyberSource Configuration</a></li><li><a href=\"/paybylink$implementing-hosted-checkout-for-other-payment-gateways\">Implementing Hosted Checkout for Other Payment Gateways</a><ul><li><a href=\"/paybylink$request-mapping\">Request Mapping</a></li></ul></li><li><a href=\"/paybylink$adyen-nbsp-configuration\">Adyen&nbsp;Configuration</a></li></ul></li><li><a href=\"/paybylink$pay-by-link-email-configuration\">Pay by Link Email Configuration</a></li><li><a href=\"/paybylink$pay-by-link-text-message-configuration\">Pay by Link Text Message Configuration</a></li><li><a href=\"/paybylink$multiple-payment-gateways-configuration\">Multiple Payment Gateways Configuration</a></li></ul></li><li><a href=\"/paybylink$feature-scope\">Feature Scope</a></li><li><a href=\"/paybylink$services\">Services</a></li><li><a href=\"/paybylink$how-to-test\">How to Test</a></li><li><a href=\"/paybylink$implementation-flavors\">Implementation Flavors</a><ul><li><a href=\"/paybylink$how-to-systematically-trigger-pay-by-link-messages\">How to Systematically Trigger Pay by Link Messages</a></li></ul></li><li><a href=\"/paybylink$troubleshooting-nbsp\">Troubleshooting&nbsp;</a><ul><li><a href=\"/paybylink$cybersource-certificate-issue\">Cybersource certificate issue</a></li><li><a href=\"/paybylink$need-additional-attributes-from-order-to-be-included-in-paybylink-email-outbouund-message\">Need additional attributes from order to be included in PayByLink Email outbouund message:</a></li></ul></li><li><a href=\"/paybylink$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<p>With Pay by Link, customers can input their&nbsp;credit card information using their own mobile device, tablet, or laptop, rather than providing their sensitive credit card information to contact center&nbsp;agents. This reduces the level of risk for customers who are placing orders or making order edits over the phone, while also providing opportunities to capture sales in&nbsp;channels such as chat or text. The Pay by Link feature also enables contact center agents who are working from home&nbsp;to capture sales in a secure manner.</p>\r\n\r\n<p>The Pay by Link flow is as follows:</p>\r\n\r\n<ol>\r\n\t<li>Customer calls the contact center (or chat, text, etc.) and chooses items to order</li>\r\n\t<li>When it's time to provide payment, the contact center agent clicks 'Send Email' or 'Send Text' to send the customer an email or text message</li>\r\n\t<li>The customer receives the email or text&nbsp;on their own device, and clicks a link to launch Digital Self-Service</li>\r\n\t<li>The customer enters their own credit or debit card information using&nbsp;Digital Self-Service and the third party payment gateway (CyberSource or Adyen)&nbsp;</li>\r\n\t<li>The customer lets the CSR know that payment has been added, and the CSR&nbsp;confirms the order</li>\r\n</ol>\r\n\r\n<p>The CSR remains on the phone with the customer throughout the process. See below for a more detailed diagram of the flow.</p>\r\n\r\n<p>Pay by Link is supported out of the box with CyberSource and Adyen. Other third party payment providers can be used if they provide hosted checkout capabilities.</p>\r\n\r\n<h3><a name=\"pay-by-link-flow-csr-confirms-order\" id=\"pay-by-link-flow-csr-confirms-order\"></a>Pay by Link Flow - CSR Confirms Order</h3>\r\n\r\n<p><img height=\"1129\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/1534/PayByLink%20Order%20Flow.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1LzE1MzQvUGF5QnlMaW5rJTIwT3JkZXIlMjBGbG93LnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTYzMX19fV19&Signature=rSfItLqoiHfy3Bb6UNhW6He2TL8b~si769RNNcW3gJ5ULBGOEMb-tWPS8AlJ3dFkNa1r6ZhsQXR1lHz14AD54LRpt~MDqbFDbIhj9nkIYLuGtSlToa5urU1kCbbPA4Sxdk1VyjKwvM0ARqzhlRm~wKiEnoucH2oeX3w05xxOFBT1yCNnIN8yavqpaVdN3e~2oTUIy2RKqxvyt3bUBnFtbJLr8AQsi05vYIlMoRsBMnvP-bAZ~Rghv0MOTSAC2urKYbedY0laCpfgIBsoaxSPtqnuKmxXXc33jK7bzHeiRfPpZ5X5FhbjR-BSy-RMivfGVOIl2zhGGGq8JtYzL6hJ4g__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 897px; height: 989px;\" width=\"1024\"></p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: Refund to new credit card using pay by link is not supported.</div>\r\n\r\n<h3><a name=\"customer-service-pay-by-link\" id=\"customer-service-pay-by-link\"></a>Customer Service Pay by Link</h3>\r\n\r\n<p>In the contact center, the Pay by Link option can be enabled to be displayed as a payment option alongside credit card, gift card, and other payment types. Alternatively, Pay by Link can be enabled as the only payment option in scenarios where the contact center agents should not come into contact with sensitive payment data.&nbsp;</p>\r\n\r\n<p>On the Pay by Link panel, the full balance due is displayed. Neither the CSR nor the customer can edit this amount. After a CSR clicks 'Send Email' or 'Send Text', a green icon is displayed if the outbound Email Message json or Text Message json was published successfully. This green icon does not indicate successful delivery of the email or text, as delivery is not currently tracked. If the Email Message or Text Message json was not successfully published, then a red error icon or an&nbsp;error popup appears. The red error icon indicates that the message could not be posted to the queue, but the error popup indicates a data error (missing configuration, phone number, etc.).</p>\r\n\r\n<p>The customer receives an email or text&nbsp;and adds payment on their own device. When the customer has completed this, they verbally notify the CSR that payment has been added. The CSR clicks the&nbsp;'Refresh' button on the Pay by Link panel, and the customer service page refreshes to show the newly-added payment and updated balance due. If the balance due is 0, then the CSR can proceed to confirm the order. When the CSR confirms the order, the open authorization is processed, and the CSR is notified if authorization fails. If authorization fails, the CSR can instruct the customer to use the same link to add a new credit card. Alternatively, CSR can send a new link to the customer, but the link will remain the same as the one previously sent.</p>\r\n\r\n<p>Within the Pay by Link panel, different methods of sending the link can be displayed:</p>\r\n\r\n<ul>\r\n\t<li>Send Email</li>\r\n\t<li>Send Text</li>\r\n\t<li>Send Email & Send Text</li>\r\n</ul>\r\n\r\n<p>Pay by Link is always displayed as the first payment option on the customer service 'Add Payment' page; This is not configurable. If additional payment types are supported, then they are listed below Pay by Link according to the configured sequence from the payment capture config. For instance, if credit card is configured with sequence '1' for assisted selling, then if Pay by Link is enabled, the 'Add Payment' page lists Pay by Link at the top, followed by credit card.</p>\r\n\r\n<p>There is currently not any extensibility on the Pay by Link panel. Therefore, adding custom buttons, links, or text is not supported.</p>\r\n\r\n<h3 data-renderer-start-pos=\"1128\"><a name=\"exit-order-from-pay-by-link-for-contact-center-agents-nbsp\" id=\"exit-order-from-pay-by-link-for-contact-center-agents-nbsp\"></a>Exit Order From Pay by Link for Contact Center Agents&nbsp;</h3>\r\n\r\n<p data-renderer-start-pos=\"1160\">Contact center agents can use the leave order button in the pay by link section for the pay by link fire and forget flow where the agent captures customer info while creating or updating an order, but the customer may say that they will pay later after using the link.</p>\r\n\r\n<p data-renderer-start-pos=\"1431\">In this scenario, there is no need for the agent to confirm the order and go till the last page to leave the order, they can just send the link and leave the order using the leave order button. &nbsp;Agents can see the leave order button if they have the “customerservice::order::exitorderforpaybylink“ grant.</p>\r\n\r\n<p data-renderer-start-pos=\"1738\">Before leaving the order, retailers can choose to save the customer information captured as part of the flow. This can be done by enabling the&nbsp;<a data-renderer-mark=\"true\" data-testid=\"link-with-safety\" href=\"https://omni.helpdocsonline.com/call-center-configuration$enable-register-customer\" title=\"https://omni.helpdocsonline.com/call-center-configuration$enable-register-customer\">register customer</a>&nbsp;or&nbsp;<a data-renderer-mark=\"true\" data-testid=\"link-with-safety\" href=\"https://omni.helpdocsonline.com/call-center-configuration$enable-update-customer\" title=\"https://omni.helpdocsonline.com/call-center-configuration$enable-update-customer\">update customer config</a>&nbsp;in the contact center configuration. If both these configurations are disabled and the agent clicks on leave order in the pay by link section, they will leave the order and land on the customer dashboard.</p>\r\n\r\n<p data-renderer-start-pos=\"2130\">Having the register customer or update customer configuration enabled but closing it without saving the customer information will leave the order and land on the customer dashboard.</p>\r\n\r\n<div class=\"tip\">In scenarios where the agent sends the pay by link to the customer and the customer decides to pay later, if retailers wish for these orders to be auto confirmed automatically when the payment is made by the customers , they can make use of the&nbsp;<a href=\"https://omni.helpdocsonline.com/paybylink$pay-by-link-auto-confirm-configuration\">Pay by Link Auto Confirm Configuration</a>.</div>\r\n\r\n<p data-renderer-start-pos=\"678\">Contact center agents can use the Copy URL button in the pay by link section to “copy” the Digital Self-Service Pay by Link URL to their clipboard, which can then be used to paste the URL in the chat window (or other 3rd party app) that the agent is using to have a conversation with the customer so that the customer can pay for the order using the link.</p>\r\n\r\n<p data-renderer-start-pos=\"678\">The Digital Self-Service PayByLink URL will contain the domain name based on the order.selfServieHostName configured in KV store. To include the domain name, configure the order.selfServieHostName in the KV store by working with services.</p>\r\n\r\n<p data-renderer-start-pos=\"1037\">The Copy URL button is protected by the “<em data-renderer-mark=\"true\">customerservice::order::copypaybylinkurl</em>“ grant</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: Copy URL and leave order buttons are not applicable for return flows</div>\r\n\r\n<h3><a name=\"pay-by-link-outbound-emails\" id=\"pay-by-link-outbound-emails\"></a>Pay by Link - Outbound Emails</h3>\r\n\r\n<p>When the CSR clicks 'Send Email', the customer receives&nbsp;an email with the link to add payment in Digital Self-Service. To send this email, an outbound Email Message json is published when the CSR clicks 'Send Email'. The Email Message json includes the Digital Self-Service Pay By Link URL and basic order information including customer email, name, items, etc. Additional order fields can be included by using template configuration (see <a hqid=\"2444800\" href=\"/transactional-emails\">here</a> for details).</p>\r\n\r\n<p>This Email Message json can be consumed in a few ways to generate the email:</p>\r\n\r\n<ol>\r\n\t<li>The Email Message json&nbsp;can be&nbsp;consumed by a third party email provider, who forms an email and delivers to the customer</li>\r\n\t<li>The Email Message json can be consumed by the Active®&nbsp;Omni email component, which can form the email body (HTML), and publish the HTML to a third party email provider who delivers the email as-is</li>\r\n</ol>\r\n\r\n<p>See <a hqid=\"2444800\" href=\"/transactional-emails\">here</a> for more details on the supported email delivery options.</p>\r\n\r\n<div class=\"info\">The email address input by the customer updates the CustomerEmail field on the order.</div>\r\n\r\n<h3><a name=\"pay-by-link-outbound-text-messages\" id=\"pay-by-link-outbound-text-messages\"></a>Pay by Link - Outbound Text Messages</h3>\r\n\r\n<p>When the CSR clicks 'Send Text', the customer receives&nbsp;an text&nbsp;with the link (using a short URL) to add payment in Digital Self-Service. To send this text, an outbound Text&nbsp;Message json is published. The Text Message json includes the Digital Self-Service Pay By Link short URL and basic order information.</p>\r\n\r\n<p>To send text messages, two integrations are required:&nbsp;</p>\r\n\r\n<ul>\r\n\t<li>A text provider; Twilio is supported out of the box (using a retailer's Twilio account)</li>\r\n\t<li>A URL shortener, to provide a concise URL in the text message; Bitly is supported out of the box (using a retailer's Bitly account)</li>\r\n</ul>\r\n\r\n<p>Details on Text Message Configurations can be found <a href=\"https://omni.helpdocsonline.com/transactional-texts$how-to-enable-texts\">here</a>.</p>\r\n\r\n<h5><a name=\"sending-outbound-text-messages-with-twilio-for-u-s-phone-numbers\" id=\"sending-outbound-text-messages-with-twilio-for-u-s-phone-numbers\"></a>Sending Outbound Text Messages with Twilio for U.S. Phone Numbers</h5>\r\n\r\n<p>Sending texts to customers with U.S. phone numbers (country code 1) is available without mapping any additional country code phone prefix. If the customer's country code prefix is null on the order (in the customerCommPref), the country code is set to 1 (U.S.) when integrating with Twilio. For U.S. phone numbers, only the Order.CustomerPhone field needs to be populated (and it does not need any country code prefix - just the 10-digit phone number).&nbsp;</p>\r\n\r\n<h5><a name=\"sending-outbound-text-messages-with-twilio-for-non-u-s-phone-numbers\" id=\"sending-outbound-text-messages-with-twilio-for-non-u-s-phone-numbers\"></a>Sending Outbound Text Messages with Twilio for Non-U.S. Phone Numbers</h5>\r\n\r\n<p>Sending texts to customers with non-U.S. phone numbers requires the country code phone prefix to be&nbsp;saved on the customer record (for registered customers) or the order (for unregistered customers).&nbsp;For registered customers, the customer's country code must be populated on the customer&nbsp;in the CustomerCommPref entity for interaction type 'TextMessage'. For example, to send a text to a customer in France (country code +33), the customer&nbsp;needs to have:</p>\r\n\r\n<pre><code class=\"json\">\"CustomerCommPref\": [{\r\n    \"InteractionType\": {\r\n        \"InteractionTypeId\": \"TextMessage\"\r\n    },\r\n    \"OptInStatus\": {\r\n        \"OptInStatusId\": \"OptIn\"\r\n    },\r\n    \"PreferenceType\": {\r\n        \"PreferenceTypeId\": \"All\"\r\n    },\r\n    \"CountryCode\": \"33\",\r\n    \"ContactValue\": \"(988) 09 51 45 76 91\"\r\n}]</code></pre>\r\n\r\n<p>When an order is created for a registered customer (with order.customerId populated), if the order.customerPhone matches the phone number in the contact value in the customerCommPref for interaction type 'TextMessage', then the customerCommPref is copied from the customer and stamped on the order. If order.customerPhone is null or does not match the phone number in customerCommPref, then the customerCommPref is not copied to the order, and Twilio cannot send texts to this customer.&nbsp;</p>\r\n\r\n<p>For unregistered customers, the customer's country code must be populated on the order&nbsp;in the CustomerCommPref entity for interaction type 'TextMessage' (see the same json above).</p>\r\n\r\n<p>Populating the customer's country code phone prefix is currently not supported for customers created in the contact center.&nbsp;Prefixing the order.customerPhone is not a valid workaround, as the country code must be saved in a separate field; It cannot simply be appended to the customerPhone on the order header.</p>\r\n\r\n<p>The below mentioned property has to be configured with a common phone number for sending Pay by Link&nbsp;text messages.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Key Value Property Name&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Example&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Description&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Mandatory</th>\r\n\t\t\t<th scope=\"col\">Component</th>\r\n\t\t\t<th scope=\"col\">Path</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>order.sms.from.phone&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td>14092481501&nbsp;</td>\r\n\t\t\t<td>A common phone number provided by third party text message provider for sending Order Confirmation text messages&nbsp;</td>\r\n\t\t\t<td>Yes</td>\r\n\t\t\t<td>Order</td>\r\n\t\t\t<td>\r\n\t\t\t<p>CONFIG/COM-MANH-CP-ORDER/</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>See <a hqid=\"2607998\" href=\"/transactional-texts\">here</a> for more details on text message integration.</p>\r\n\r\n<h3><a name=\"pay-by-link-reminder-and-unconfirmed-orders-cancellation\" id=\"pay-by-link-reminder-and-unconfirmed-orders-cancellation\"></a>Pay by Link Reminder and Unconfirmed Orders Cancellation</h3>\r\n\r\n<p lang=\"en-US\">When a customer receives a Pay by Link email or text to make a payment on their device, and if&nbsp;the contact center agent&nbsp;needs to end the call either because the customer has dropped off or because the customer wants to pay later, the contact center agent can&nbsp;gracefully exit by clicking the&nbsp;Leave Order&nbsp;button in the PayByLink section on the CSR payment screen. This allows the contact center agent to continue assisting other customers while keeping the payment option available for the customer to complete the payment whenever&nbsp;convenient.&nbsp;</p>\r\n\r\n<p lang=\"en-US\"><img alt=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/1088/Payment_Recovery_Flow_Auth_Copy_Copy_Copy_Copy__7_.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1LzEwODgvUGF5bWVudF9SZWNvdmVyeV9GbG93X0F1dGhfQ29weV9Db3B5X0NvcHlfQ29weV9fN18ucG5nIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzUxNjMxfX19XX0_&Signature=AmjS3k-Er4Pi77bZk1bstijcJ8LmZv3s9OfVrbeKMcuXMBeytiYqac6UYCP7nTnZgaqsaa3mZited8o0RO5puyWN9Za68GnXB7Wo5Lt9V4sw-LPlLmfd6xTeVkH~g1xQCqKRs0Cgxb4Reva4FFRGGWU9k6uVTFcsyYNmkTc7m1kHU-G~jVCZvsgRVbQKgX2X0uCHp4LHHYgWejAbiGCv2a6FLsBIHmH35ZF5uK5ANGf-pepqzs0rhIfHDzYYgzhD0nY29Wt9~2u8YXRNue0kbNthKQsZPGYbkQKQJVLAONowi6mQ4Q4UOXenWyK-~QrEl7OdAzJzFlSnxdvHfuq8~Q__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"border-style: solid; width: 898px; height: 1460.48px;\"></p>\r\n\r\n<h5 lang=\"en-US\"><a name=\"auto-confirm-pay-by-link-orders\" id=\"auto-confirm-pay-by-link-orders\"></a>Auto Confirm Pay by Link Orders</h5>\r\n\r\n<p lang=\"en-US\">All the Pay by Link orders will be auto confirmed after a configured number of minutes from the time pay by link was sent provided the payment is added. If the payment is not added, the order will remain unconfirmed. Retailers can change this threshold value based on the average time it takes for a CSR to confirm a pay by link order after the payment is added.&nbsp;By default, orders won't be auto-confirmed if there is no value defined.</p>\r\n\r\n<p>Refer <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-auto-confirm-configuration\">here&nbsp;</a>to configure the time in minutes,&nbsp;after which the pay by Link orders will be auto-confirmed.</p>\r\n\r\n<h5 lang=\"en-US\"><a name=\"pay-by-link-reminder\" id=\"pay-by-link-reminder\"></a>Pay by Link Reminder</h5>\r\n\r\n<p lang=\"en-US\">In the event that the system has not received payment from the customer within the configured number of hours, the system sends the customer a reminder email or text.</p>\r\n\r\n<p>For example: The reminder threshold (PayByLink Reminder Threshold) is configured as 2 hours. If the PayByLink was sent to the customer at 1:00 p.m. and the customer delays adding payment, the reminder notification via email/text will be sent to the customer by 3:00 p.m.</p>\r\n\r\n<p>Refer <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-reminder-threshold-configuration-nbsp\">here&nbsp;</a>to configure the reminder threshold value in hours</p>\r\n\r\n<h5 lang=\"en-US\"><a name=\"paybylink-unconfirmed-orders-cancellation\" id=\"paybylink-unconfirmed-orders-cancellation\"></a>PayByLink Unconfirmed Orders Cancellation</h5>\r\n\r\n<p lang=\"en-US\">To exclude Pay by Link unconfirmed orders that are awaiting payment from getting cancelled by the agent or scheduler, add the additional condition 'payByLinkStatus=PaymentRequested' to the cancelation agent query. To cancel Pay by Link unconfirmed orders, set this flag to 'PaymentNotReceived'.</p>\r\n\r\n<p>By default, the 'payByLinkStatus' flag is set to 'Null' and gets updated to 'PaymentRequested' after the Pay by Link is sent. The value is updated to</p>\r\n\r\n<ol>\r\n\t<li>\r\n\t<p>'PaymentReceived' - If&nbsp;the payment is received from the customer.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>'PaymentNotReceived' - If the payment is not received from the customer within the configured number of hours.</p>\r\n\t</li>\r\n</ol>\r\n\r\n<p>&nbsp;For example: Consider the cancelation threshold is configured as 5 hours. If the Pay by Link was sent to the customer at 1:00 p.m. and if payment is not added by the customer before 6:00 p.m., the order will become&nbsp;eligible for cancelation.</p>\r\n\r\n<p>If the threshold is not configured, then the orders are eligible for cancellation based on the Pay by Link expiry date.</p>\r\n\r\n<p>Refer <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-unconfirmed-order-nbsp-cancel-threshold-configuration\">here&nbsp;</a>to configure the cancelation threshold value in hours</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: In case a retailer wants to use this feature and is currently cancelling unconfirmed Pay by Link orders with order milestone, it is recommended to use an agent or scheduler with 'payByLinkStatus' flag set to false in the query.</div>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-1\" class=\"toggle-content\"><span class=\"toggle-title\">Unconfirmed PayByLink Orders Cancel Agent Job</span></a></p><div id=\"tg-1\"><div class=\"computer_code\">{<br />\n&nbsp; &nbsp; &quot;IsDisabled&quot;: false,<br />\n&nbsp; &nbsp; &quot;IsAdHoc&quot;: false,<br />\n&nbsp; &nbsp; &quot;StartDelay&quot;: null,<br />\n&nbsp; &nbsp; &quot;ExecutionOffsetWindow&quot;: null,<br />\n&nbsp; &nbsp; &quot;TriggerKey&quot;: &quot;cancelUnconfirmedPayByLinkOrderScheduleTrigger&quot;,<br />\n&nbsp; &nbsp; &quot;TimeZone&quot;: &quot;UTC&quot;,<br />\n&nbsp; &nbsp; &quot;JobTypeId&quot;: &quot;cancelUnconfirmedPayByLinkOrderJob&quot;,<br />\n&nbsp; &nbsp; &quot;CronExpression&quot;: &quot;0 0 0/2 1/1 * ? *&quot;,<br />\n&nbsp; &nbsp; &quot;JobParameters&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;(IsConfirmed = false and PayByLinkStatus = &#39;PaymentNotReceived&#39;)&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;Query&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;Rest&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;QueryType&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;Order&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;Entity&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;CancelUnconfirmedOrderHandler&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;HandlerName&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;OrderIdAgentTemplate&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;Template&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;cancelUnconfirmedPayByLinkOrderJob&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;MessageType&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;DEFINED_MESSAGE_TYPE&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;MessageTypeMode&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; ],<br />\n&nbsp; &nbsp; &quot;JobScheduleId&quot;: &quot;cancelUnconfirmedPayByLinkOrderSchedule&quot;,<br />\n&nbsp; &nbsp; &quot;RepeatInterval&quot;: null<br />\n}</div>\n</div></div></p>\r\n\r\n<h3><a name=\"digital-self-service-pay-by-link\" id=\"digital-self-service-pay-by-link\"></a>Digital Self-Service Pay by Link</h3>\r\n\r\n<p>In the Digital Self-Service&nbsp;Pay by Link page, the order total, summary amounts, existing payment methods, and balance due are displayed&nbsp;along with the items being ordered and order totals. For example, if a CSR added a gift card and then sent the customer a link to pay for the remaining balance, then the customer would see the gift card applied on the Digital Self-Service Pay by Link page. Payment methods which are suspended are not displayed. The Order Summary section displays the Order Subtotal and aggregate&nbsp;charge (labeled as 'Shipping'), discount, and tax amounts.&nbsp;</p>\r\n\r\n<p>If configured, the Pay By Link page also allows the user to select from multiple payment methods to make the payment. Each payment method&nbsp;can be configured&nbsp;with different payment gateway, if needed.&nbsp;&nbsp;When the customer selects 'Pay Now' on the Digital Self-Service page, the browser redirects to the third party payment page. The customer's shipping address is used to pre-populate the billing address, which the customer can optionally edit. The shipping address is picked from the first order line, so if the first line is buy online, pick up in store or does not have an address, then the customer needs to enter their billing address.&nbsp;</p>\r\n\r\n<p>Currently, the customer cannot edit the amount to be charged. The full balance due is attempted for authorization.</p>\r\n\r\n<div class=\"tip\"><strong>Note :</strong>&nbsp;Instructions to enable different payment methods and configuring a payment gateway for the same can be found in the&nbsp;<a href=\"https://omni.helpdocsonline.com/paybylink$multiple-payment-gateways-configuration\">Multiple Payment Gateways Configuration</a>&nbsp;section.</div>\r\n\r\n<h5><a name=\"digital-self-service-integration-with-payment-providers\" id=\"digital-self-service-integration-with-payment-providers\"></a>Digital Self-Service Integration with Payment Providers</h5>\r\n\r\n<p>Out of the box integration with CyberSource and Adyen is provided. CyberSource provides some UI themeing capabilities, like changing the logo and background color. Refer to the CyberSource&nbsp;Secure Acceptance documentation for details.</p>\r\n\r\n<p>If the contact center is already using a secure hosted checkout with a different payment provider (e.g.&nbsp;Adyen), then the integration may be similar to contact center, but separate effort is required to integrate the Digital Self-Service Pay by Link page with the Adyen hosted checkout. The contact center integration cannot be reused as-is.&nbsp;</p>\r\n\r\n<p>There are a few key differences between the Digital Self-Service Pay by Link hosted checkout and the contact center hosted checkout:</p>\r\n\r\n<ul>\r\n\t<li>In Digital Self-Service, the customer needs to add their billing address in the third party payment page. In the contact center, this is done on the contact center page before launching the third party page, so only the credit card details are captured in the third party page.</li>\r\n\t<li>Digital Self-Service redirects to the hosted checkout page, and then back to Digital Self-Service in the same browser window, so there is no popup window. In contact center, there is a popup window.</li>\r\n</ul>\r\n\r\n<h3><a name=\"pay-by-link-expiry\" id=\"pay-by-link-expiry\"></a>Pay by Link Expiry</h3>\r\n\r\n<p>The Digital Self-Service Pay by Link page expires after a period of time to remain secure. Upon loading the Pay by Link page, Digital Self-Service&nbsp;checks a field in the order entity (SelfServiceAttribute.PayByLinkExpiryDate), and if this date is in the past, the customer is not able to add payment. A 'page expired' message is displayed and the customer is not able to add payment or view order details. If the expiry date is null on the order, then the Digital Self-Service page displays the expired state.</p>\r\n\r\n<p>The expiry date is populated when the 'Send Email' or 'Send Text' buttons are clicked in the contact center. If sending the customer links to launch the Digital Self-Service Pay by Link page from channels other than contact center, then call this API to ensure the expiry date is populated:&nbsp;/order/api/order/order/payByLink</p>\r\n\r\n<p>The expiry date is saved in the database in UTC. When the UI&nbsp;loads, the expiry date is converted to the user's local time zone and compared with the current date/time.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: The expiry date is calculated and populated when either the 'Pay By Link Send Email' or 'Send Text' buttons are clicked in the contact center, or when the pay by link is triggered upon settlement retry after the attempts are exhausted. It cannot be calculated or populated manually or by any other third party service provider. The pay by link expiry date will be determined based on the order.payByLink.validity consul property configuration. Work with the service team to configure the same as per your requirements.</div>\r\n\r\n<h3><a name=\"multiple-payment-gateways\" id=\"multiple-payment-gateways\"></a>Multiple Payment Gateways</h3>\r\n\r\n<p>The Digital Self-Service Pay by Link page allows user to select from different payment methods, if configured. For each of the payment methods, retailers can configure a different payment gateway, if needed.</p>\r\n\r\n<div class=\"tip\"><strong>Note :</strong> Instructions to enable different payment methods and configuring a payment gateway for the same can be found in the&nbsp;<a href=\"https://omni.helpdocsonline.com/paybylink$multiple-payment-gateways-configuration\">Multiple Payment Gateways Configuration</a>&nbsp;section.</div>\r\n\r\n<h3><a name=\"configurations\" id=\"configurations\"></a>Configurations</h3>\r\n\r\n<h4><a name=\"order-configuration\" id=\"order-configuration\"></a>Order Configuration</h4>\r\n\r\n<p>To configure the valid time duration for the Digital Self-Service Pay by Link page,&nbsp;work with services to specify the expiry hours&nbsp;in the order.payByLink.validity in the consul server (order component).&nbsp;For example, if you want the pay by link to be valid for 2 days from the time it is generated, enter 48 hours&nbsp;in the&nbsp;configuration.&nbsp;</p>\r\n\r\n<p>Regardless of what is entered in the configuration, the application will consider&nbsp;a hard minimum of 24 hours and maximum of 168 hours (7 days). Any value less than 24 hours will be considered 24 hours, and any value more than 168 hours will be considered 168 hours. Note that the application will not throw any errors if values less or greater than these are entered, but internally these limits will be enforced. The configurations related to <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-auto-confirm-configuration\">Pay by Link auto confirmation</a>, <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-reminder-threshold-configuration-nbsp\">reminder threshold</a>, and <a href=\"https://omni.helpdocsonline.com/payment-configuration-2$pay-by-link-unconfirmed-order-nbsp-cancel-threshold-configuration\">unconfirmed order cancel threshold</a>&nbsp;can be set on Order Paraments UI.</p>\r\n\r\n<h4><a name=\"customer-service-configuration\" id=\"customer-service-configuration\"></a>Customer Service Configuration</h4>\r\n\r\n<p>To enable the Pay by Link panel in customer service, set the following parameters to true in the Payment Parameters UI:</p>\r\n\r\n<ul>\r\n\t<li><strong>Enable 'Send Email' for Pay by Link</strong>: If set to true, then the text box to capture the customer's email and the 'Send Email' button are displayed.&nbsp;The email address&nbsp;is pre-populated with the customer email which is saved on the order.</li>\r\n\t<li><strong>Enable 'Send Text' for Pay by Link</strong>: If set to true, then the text box to capture the customer's phone number and the 'Send Text' button are displayed. The phone number is pre-populated with the customer phone which is saved on the order.</li>\r\n</ul>\r\n\r\n<p>If either of these values are set to true, then the Pay by Link&nbsp;panel is displayed. If both of these values are set to false, then the Pay by Link&nbsp;panel is hidden. The Pay by Link panel is supported on the Create Order and&nbsp;Edit Order UIs&nbsp;as well as the Create and Edit Exchange Order UIs. This single set of configurations control&nbsp;whether Pay By Link is displayed for both new orders and exchange orders.</p>\r\n\r\n<h4><a name=\"digital-self-service-configuration\" id=\"digital-self-service-configuration\"></a>Digital Self-Service Configuration</h4>\r\n\r\n<p>The following configuration is required to enable Pay by Link in Digital Self-Service:</p>\r\n\r\n<ul>\r\n\t<li>Add a payment rule with Payment Type =&nbsp;'Credit Card' and Card Type = null. Because Digital Self-Service launches the third party payment gateway before the card type is selected, this rule must have null card type. The card type selection is completed on the third party payment page.</li>\r\n\t<li>For this payment rule, configure&nbsp;the&nbsp;third party gateway&nbsp;being used for Pay by Link (e.g. CyberSource or Adyen). Digital Self-Service uses this configuration to redirect to the&nbsp;third party gateway when the customer presses 'Pay Now'.</li>\r\n\t<li>Update the UI styling to reflect your brand's logo, colors, and font (<a hqid=\"2465753\" href=\"/ui-theming-customization\">details here</a>). Note that this is only required once per deployment, so if this has been completed for other Digital Self-Service features then it does not need to be done again.</li>\r\n\t<li>Review the UI labels and error messages for each supported locale/language,&nbsp;and work with services to update these as required.</li>\r\n</ul>\r\n\r\n<h4><a name=\"payment-gateway-configuration\" id=\"payment-gateway-configuration\"></a>Payment Gateway Configuration</h4>\r\n\r\n<h5><a name=\"cybersource-configuration\" id=\"cybersource-configuration\"></a>CyberSource Configuration</h5>\r\n\r\n<p>If CyberSource is being used in the contact center, then a new profile needs to be created for Digital Self-Service. This is because Digital Self-Service requires capturing the billing address in the hosted checkout page, while contact center does not. After the new CyberSource profile is added in the CyberSource portal, follow the below steps to add your Digital Self-Service CyberSource profile details to the&nbsp;existing CyberSource payment gateway entry. See the diagram below for an illustration of the CyberSource integration.</p>\r\n\r\n<p><strong>Step 1: </strong>Create your new Digital Self-Service-specific CyberSource merchant profile in the CyberSource portal.</p>\r\n\r\n<p><strong>Step 2: </strong>Add the details of your Digital Self-Service CyberSource account to the existing CyberSource gateway entry. This can be done in the Payment Gateway UI or via API (/payment/api/payment/gateway/save).</p>\r\n\r\n<div class=\"computer_code\"><code class=\"json\">{<br>\r\n&nbsp; \"GatewayId\": \"Cybersource\",<br>\r\n&nbsp; \"IsBase\": true,<br>\r\n&nbsp; \"GatewayEncryptedAttribute\": [],<br>\r\n&nbsp; \"GatewayAttribute\": [<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"TOKEN_END_POINT\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"https://testsecureacceptance.cybersource.com/embedded/pay\"<br>\r\n&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; \"Name\": </code>\"DSS_TOKEN_REQ_GEN_URL\",<br>\r\n<code class=\"json\">&nbsp;&nbsp;&nbsp; \"Value\": </code>\"./assets/static/CybersourceRequestGenerator.html\"<br>\r\n<code class=\"json\">&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": </code>\"DSS_TOKEN_RES_GEN_URL\",<br>\r\n<code class=\"json\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": </code>\"/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor\"<br>\r\n<code class=\"json\">&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp; ],<br>\r\n&nbsp; \"Account\": [<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"AccountId\": \"test_account\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"LocationId\": null,<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"AccountEncryptedAttribute\": [<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"merchantID\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"{{merchantId}}\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"Digital Self-Service_TOKEN_SECRET_KEY\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"{{secretKey}}\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"Digital Self-Service_TOKEN_ACCESS_KEY\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"{{accessKey}}\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"Digital Self-Service_TOKEN_PROFILE_ID\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"{{profileId}}\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"AccountAttribute\": [<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"targetAPIVersion\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"1.121\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"sendToProduction\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"false\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Name\": \"masterCardAuthReqType\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Value\": \"1\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp; ]<br>\r\n}</code></div>\r\n\r\n<p><strong>Step 3 (Not required if CyberSource is already used in the contact center):&nbsp;</strong>Import the Cybersource certificate for the Digital Self-Service profile via API (<strong data-renderer-mark=\"true\">/</strong>payment/api/payment/gateway/Cybersource/account/base_test_account/upload).&nbsp;For example, if using Postman, select \"form-data\" on the Body tab,&nbsp;in the \"key\" field type \"file\", and select \"file\" from the dropdown. Next&nbsp;\"Choose files\" and&nbsp;select the certificate file to upload.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: The CyberSource hosted checkout pages can be customized with a logo and colors to match your branding. See CyberSource documentation for details.</div>\r\n\r\n<h5><a name=\"implementing-hosted-checkout-for-other-payment-gateways\" id=\"implementing-hosted-checkout-for-other-payment-gateways\"></a>Implementing Hosted Checkout for Other Payment Gateways</h5>\r\n\r\n<p>If a third party other than CyberSource is used, then the below steps explain what configuration and integration points are required. Detailed examples are shown for integrating with Adyen's hosted checkout.</p>\r\n\r\n<p>The below diagram illustrates the touch points for integrating Digital Self-Service with CyberSource's hosted checkout. To use a different third party, steps 2-4 need to be customized. Below we'll take Adyen as an example and explain how to modify steps 2-4 to integrate Digital Self-Serivce with Adyen.</p>\r\n\r\n<p><img height=\"870\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/image(518).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL2ltYWdlKDUxOCkucG5nIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzUxNjMxfX19XX0_&Signature=o3SVedisiR3m6y2eCbYWpA2kETTcZeJRDKQUGO~-14q-I-huEqpiuWG0ayTvQRkaUzYS-W1b2ijYh9T0Xj45uiTSXQsXwgNzGkhPyiUohKNQeKselNcE7JMywHnhhC~34Ups9eKMFqWzCD0GskNW~JCl2c9ayRmnQgY26YcEMYiDQ43a1vZvCyb506HuhdrhQ9U~lTlIWOghl4~Ugiu0Fdz7rSHjUFbQO4dGxHmOzojeRLkMNzLC8tTk~lpyu-dw7Vlab6KodXgCZyqx-k4cuT22A9HHEMSrfO2JPqzxqB5GtOfhdG8ybbAjvKv6HcpF-Bt6O9tr6XfEqUXItWpNAg__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 528px; height: 398px;\" width=\"1156\"></p>\r\n\r\n<p><strong>Step 1: Configure a&nbsp; router entry for custom HPP html file (example: PBLAdyenPageGenerator.html)</strong></p>\r\n\r\n<p>manh.command-router.commands.adyenDSS.commandPath=/paymentgateway/PBLAdyenPageGenerator.html<br>\r\nmanh.command-router.commands.adyenDSS.targetComponent=com-manh-cp-ext-adyen<br>\r\nmanh.command-router.commands.adyenDSS.targetEndpoint=/PBLAdyenPageGenerator.html</p>\r\n\r\n<p><strong>Step 2: Configure a payment gateway</strong></p>\r\n\r\n<p data-pm-slice=\"1 1 []\">First, configure a payment gateway entry for Adyen. This can be created in&nbsp;the payment gateway&nbsp;UI or using the below JSON with a POST call to /payment/api/payment/gateway/save.</p>\r\n\r\n<p>Adding attributes to a gateway configuration allows us to use values specific to the gateway, such as account information, customization options, and what endpoints to call to access the hosted checkout. Additional fields may be added for storing gateway-related values.</p>\r\n\r\n<table data-autosize=\"false\" data-layout=\"default\" data-number-column=\"false\" style=\"width: 952px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Attribute Name</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th>\r\n\t\t\t<p><strong>Description</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th style=\"width: 199px;\">\r\n\t\t\t<p><strong>Comments</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>DSS_TOKEN_REQ_GEN_URL</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>URL which base will call along with url params having payment info and billing address.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>Example: /api/selfservice/paymentgateway/PBLAdyenPageGenerator.html</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>DSS_TOKEN_RES_GEN_URL</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Parameter to define the callback rest end point called by 3rd Party Payment Gateway</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>TOKEN_END_POINT</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Parameter to define the hosted checkout UI URL entry point to send request</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>Adyen provides single-page and multi-page options for the URL</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>HMAC_KEY</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>HMAC key used to sign data to verify values have not been modified. (Value found in Adyen Skin)</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>SKIN_CODE</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Customizable Skin in Adyen account. Determines settings for values such as payment types, custom fields, etc.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>MERCHANT_ACCOUNT</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Merchant account linked to Adyen Account.</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 196px;\">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Below is a sample payment gateway JSON:</p>\r\n\r\n<pre><code class=\"json\">{\r\n    \"GatewayId\": \"Adyen\",\r\n    \"IsBase\": true,\r\n    \"GatewayEncryptedAttribute\": [],\r\n    \"GatewayAttribute\": [\r\n        {\r\n            \"Name\": \"TOKEN_END_POINT\",\r\n            \"Value\": \"https://test.adyen.com/hpp/tokenonepage.shtml\"\r\n        },\r\n        {\r\n            \"Name\": \"DSS_TOKEN_REQ_GEN_URL\",\r\n            \"Value\": \"./assets/static/AdyenPaymentRequestGenerator.html\"\r\n        },\r\n        {\r\n            \"Name\": \"TOKEN_RES_GEN_URL\",\r\n            \"Value\": \"/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor\"\r\n        }\r\n    ],\r\n    \"Account\": [\r\n        {\r\n            \"AccountId\": \"ManhattanAssociates771\",\r\n            \"LocationId\": null,\r\n            \"AccountEncryptedAttribute\": [\r\n                {\r\n                    \"Name\": \"MERCHANT_ACCOUNT\",\r\n                    \"Value\": \"MANHPBL\"\r\n                },\r\n                {\r\n                    \"Name\": \"HMAC_KEY\",\r\n                    \"Value\": \"{HMACKEY}\"\r\n                },\r\n                {\r\n                    \"Name\": \"SKIN_CODE\",\r\n                    \"Value\": \"NHoeAntc\"\r\n                },\r\n            ],\r\n            \"AccountAttribute\": [\r\n              \r\n            ]\r\n        }\r\n    ]\r\n}</code></pre>\r\n\r\n<p><strong>Step 3: Configure a payment rule</strong></p>\r\n\r\n<p data-pm-slice=\"1 1 []\">In order for&nbsp;Digital Self-Service to know what gateway is being used, a payment rule is required. Configure a payment rule in the Payment Rule UI with ‘Credit Card’ as the Payment Type. Card Type and Order Type should be null. Lastly, the payment gateway needs to be selected.</p>\r\n\r\n<p data-pm-slice=\"1 1 []\"><strong>Step 4: Customize the request to the hosted checkout</strong></p>\r\n\r\n<p data-pm-slice=\"1 1 []\">In order to access the third party hosted checkout UI, a request needs to formed. On click of the ‘Pay Now’ button in Digital Self-Service, the given HTML URL from DSS_TOKEN_REQ_GEN_URL will be rendered. This request generator HTML&nbsp;will retrieve the payment parameters from the UI and apply backend processing before sending to the hosted checkout UI. Backend processing may include signing of fields, adding account details from payment gateway, adding return URL, custom logic based on source_channel, etc.</p>\r\n\r\n<h6 data-pm-slice=\"1 1 []\"><a name=\"request-mapping\" id=\"request-mapping\"></a>Request Mapping</h6>\r\n\r\n<p>Below is a table with fields being sent&nbsp;to&nbsp;DSS_TOKEN_REQ_GEN_URL.</p>\r\n\r\n<table data-autosize=\"false\" data-layout=\"default\" data-number-column=\"false\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"340\">\r\n\t\t\t<p><strong>Field</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"340\">\r\n\t\t\t<p><strong>Active</strong>®<strong> Omni Field</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_forename</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.FirstName</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_surname</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.LastName</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_line1</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.Address1</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_line2</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.Address2</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_city</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.City</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_postal_code</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.PostalCode</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_state</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.State</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_address_country</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.Country</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>bill_to_email</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>ShipToAddress.Address.Email</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>amount</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>Result of Balance Due API</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>reference_number</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>Order.OrderId</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>currency</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>Order.CurrencyCode</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>locale</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>'en’ if null on the order</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>payment_method</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>'card'</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>gateway_id</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>source_channel</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"340\">\r\n\t\t\t<p>“DSS” or “CallCenter” - determines what processing is needed based on source</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>After applying backend processing on UI fields, a form is submitted to the specified TOKEN_END_POINT, which will open the hosted checkout with Adyen. A sampling of the form format can be found in Adyen's payment request documentation.&nbsp;HMAC encryption should be used to generate the merchantSig as part of request to avoid data tampering.</p>\r\n\r\n<p>Below is an example of the requestGeneratorHtml specified by DSS_TOKEN_REQ_GEN_URL.</p>\r\n\r\n<pre><code class=\"xml\">&lt;html&gt;\r\n&lt;head&gt;\r\n  &lt;script\r\n    src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"&gt;\r\n  &lt;/script&gt;\r\n\r\n  &lt;script&gt;\r\n\r\n var postParams;\r\n var xref = \"\";\r\n var winLocation = '';\r\n var organization = '';\r\n $(document).ready(function(){\r\n  winLocation = window.location.origin;\r\n  var ca = document.cookie.split(';');\r\n  for (var i = 0; i &lt; ca.length; i++) {\r\n   var c = ca[i];\r\n   while (c.charAt(0) == ' ') {\r\n    c = c.substring(1);\r\n   }\r\n   if (c.indexOf('XSRF-TOKEN') == 0) {\r\n    xref = c.substring('XSRF-TOKEN'.length + 1,\r\n      c.length);\r\n   }\r\n  }\r\n\r\n  var addressModel = parseQuery(window.location.search);\r\n\r\n  $.ajax({\r\n   type : \"GET\",\r\n   contentType : \"application/json\",\r\n   data : {\r\n      \"orderId\" : addressModel.reference_number,\r\n      \"billToEmail\" : addressModel.bill_to_email,\r\n      \"Amount\" : addressModel.amount,\r\n      \"currencyCode\" : addressModel.currency,\r\n      \"gateway_info_id\" : addressModel.gateway_info_id,\r\n      \"bill_to_forename\" : addressModel.bill_to_forename,\r\n      \"bill_to_surname\" : addressModel.bill_to_surname,\r\n      \"bill_to_address_line1\" : addressModel.bill_to_address_line1,\r\n      \"bill_to_address_line2\" : addressModel.bill_to_address_line2,\r\n      \"bill_to_address_line3\" : addressModel.bill_to_address_line3,\r\n      \"bill_to_address_city\" : addressModel.bill_to_address_city,\r\n      \"bill_to_address_postal_code\" : addressModel.bill_to_address_postal_code,\r\n      \"bill_to_address_state\" : addressModel.bill_to_address_state,\r\n      \"bill_to_address_country\" : addressModel.bill_to_address_country,\r\n      \"source_channel\": \"DSS\",\r\n        \"gateway_id\": addressModel.gateway_id,\r\n      \"winLocation\" : window.location.origin,\r\n     },\r\n   url : window.location.origin\r\n     + \"/selfservice/ui/api/selfservice/paymentgateway/getAdyenPostParameters?orderId=\" + addressModel.reference_number + \"&orgId=\" + addressModel.orgId + \"&token=\" + addressModel.orderToken,\r\n   headers : {\r\n    'Accept' : 'application/json',\r\n    'Content-Type' : 'application/json',\r\n    'X-XSRF-TOKEN' : xref,\r\n   },\r\n   success : function(data) {\r\n    console.log(data);\r\n    post(data,  'POST');\r\n   },\r\n   error : function() {\r\n    alert('Error loading REST API');\r\n   }\r\n   });\r\n });\r\n\r\n function parseQuery(qstr) {\r\n  var query = {};\r\n  var a = (qstr[0] === '?' ? qstr.substr(1) : qstr).split('&');\r\n  for (var i = 0; i &lt; a.length; i++) {\r\n   var b = a[i].split('=');\r\n   query[decodeURIComponent(b[0])] = decodeURIComponent(b[1] || '');\r\n  }\r\n  return query;\r\n }\r\n\r\n function getURLParameter(sParam) {\r\n var paramValue ='';\r\n  var sPageURL = window.location.search.substring(1);\r\n  var sURLVariables = sPageURL.split('&');\r\n  for (var i = 0; i &lt; sURLVariables.length; i++)\r\n  {\r\n   var sParameterName = sURLVariables[i].split('=');\r\n   if (sParameterName[0] == sParam)\r\n   {\r\n            paramValue = decodeURIComponent(sParameterName[1] || '');\r\n   }\r\n  }\r\n  return paramValue;\r\n }\r\n\r\n  function post(restResp, method) {\r\n  params = restResp.adyenReqParams;\r\n  var ca = document.cookie.split(';');\r\n  var form = document.createElement(\"form\");\r\n  form.setAttribute(\"method\", method);\r\n  form.setAttribute(\"action\", restResp.tokenEndPoint);\r\n  var paramArray = params.split(';;');\r\n  var arrayLength = paramArray.length;\r\n  for (var i = 0; i &lt; arrayLength; i++) {\r\n   var keyValuePair = paramArray[i].split('::');\r\n   var key = keyValuePair[0];\r\n   var value = keyValuePair[1];\r\n    var prefix =\"\";\r\n    var hiddenField = document.createElement(\"input\");\r\n    hiddenField.setAttribute(\"type\", \"hidden\");\r\n    hiddenField.setAttribute(\"name\", prefix.concat(key));\r\n    hiddenField.setAttribute(\"value\", value);\r\n    form.appendChild(hiddenField);\r\n\r\n  }\r\n  document.body.appendChild(form);\r\n  form.submit();\r\n }\r\n\r\n  &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p><strong>Step 5: Process the hosted checkout response</strong></p>\r\n\r\n<p data-pm-slice=\"1 1 []\">After completion of payment capture in the hosted checkout, a response processor endpoint needs to be hit. The purpose of this endpoint is to:</p>\r\n\r\n<ul>\r\n\t<li>Process payment info and save in AO</li>\r\n\t<li>Return to DSS UI after completion</li>\r\n</ul>\r\n\r\n<p>The value for DSS_TOKEN_RES_GEN_URL can be used, pointing to a custom endpoint. Alternatively, if the base API endpoint is called, the user exit PaymentGateway::Payment::UserExit::ProcessHostedCheckoutResponse should be implemented.</p>\r\n\r\n<p>In order for this endpoint to be hit, the resUrl field must be sent in the Adyen HPP payment request. As part of response from Adyen payment, a merchant signature will be included. HMAC encryption should be used to validate that the value is the same as the one calculated during the initial request value.</p>\r\n\r\n<p>After verifying the signature matches, we can return back to the DSS UI. In the base implementation, we send back a form to open the DSS UI, redirecting to the confirm page with the order details. For example:</p>\r\n\r\n<div class=\"computer_code\"><code class=\"xml\">&lt;html&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;body onload=\"document.frm1.submit()\"&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;form action=\"/selfservice/ui/app/paybylink/confirm\" name=\"frm1\"&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type=\"hidden\" name=\"orderId\" value=\"{0}\" /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type=\"hidden\" name=\"orgId\" value=\"{1}\" /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type=\"hidden\" name=\"token\" value=\"{2}\" /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/form&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;/body&gt;<br>\r\n&lt;/html&gt;</code></div>\r\n\r\n<p data-pm-slice=\"1 1 []\">This form would redirect to:&nbsp;{{HOST}/selfservice/ui/app/paybylink/confirm?orderId=OM-48595-20200922135657&orgId=globalorg-us&token=Q4L750Nwdhl5x7NmgTwL</p>\r\n\r\n<p data-pm-slice=\"1 1 []\"><strong>Step 6: Additional Webhooks&nbsp;(Optional)</strong></p>\r\n\r\n<p data-pm-slice=\"1 1 []\">The response from Adyen does not<strong> </strong>include payment details required to save the payment header in Active® Omni. We must use the notification webhook in order to get this data. This step is specific to Adyen, but the same&nbsp;approach&nbsp;can be used for third party gateways who have similar integration requirements.</p>\r\n\r\n<p>Adyen uses notification webhooks to asynchronously send back payment data. As such, there will be some delay between returning to DSS UI and the saving of the payment. We will need to configure some settings to allow additional fields to sent as part of notification:</p>\r\n\r\n<ul>\r\n\t<li><em>Include Card Holder</em></li>\r\n\t<li><em>Include card info for recurring contract notifications</em></li>\r\n\t<li><em>Include Avs Data/ Billing address</em></li>\r\n</ul>\r\n\r\n<p>For saving payment info, we will be checking if the value is \"eventCode\":\"AUTHORISATION\". Based on this, we can extract the necessary info from the notification and save as a payment header to the corresponding order. Sample notification data from Adyen webhook:</p>\r\n\r\n<div class=\"computer_code\"><code class=\"json\">{<br>\r\n&nbsp;&nbsp; \"live\":\"false\",<br>\r\n&nbsp;&nbsp; \"notificationItems\":[<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"NotificationRequestItem\":{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"additionalData\":{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \" NAME1 \":\"VALUE1\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"authCode\":\"1234\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"cardSummary\":\"7777\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"cardHolderName\":\"J. De Tester\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"billingAddress.houseNumberOrName\":\"21 - 5\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"totalFraudScore\":\"10\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"NAME2\":\"&nbsp; VALUE2&nbsp; \",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"billingAddress.postalCode\":\"1012RC\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"expiryDate\":\"12\\/2012\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"billingAddress.street\":\"Nieuwezijds Voorburgwal\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"billingAddress.city\":\"Amsterdam\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"billingAddress.country\":\"NL\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"fraudCheck-6-ShopperIpUsage\":\"10\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"amount\":{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"currency\":\"EUR\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"value\":10100<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"eventCode\":\"AUTHORISATION\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"eventDate\":\"2020-09-23T02:36:20+02:00\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"merchantAccountCode\":\"MANHPBL\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"merchantReference\":\"8313842560770001\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"operations\":[<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"CANCEL\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"CAPTURE\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"REFUND\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ],<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"paymentMethod\":\"visa\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"pspReference\":\"test_AUTHORISATION_1\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"reason\":\"1234:7777:12\\/2012\",<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"success\":\"true\"<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp; ]<br>\r\n}</code></div>\r\n\r\n<h5><a name=\"adyen-nbsp-configuration\" id=\"adyen-nbsp-configuration\"></a>Adyen&nbsp;Configuration</h5>\r\n\r\n<p>If Adyen&nbsp;is being used as a payment gateway in Digital Self-Service, then follow the steps below to set it up.</p>\r\n\r\n<p><strong>Step 1</strong>: Configure Adyen Payment Gateway.&nbsp;Refer to <a href=\"https://omni.helpdocsonline.com/payment-gateway-integration$adyen-gateway-configuration\">Payment Gateway Configuration</a></p>\r\n\r\n<p><strong>Step 2:</strong> Configure Adyen Credentials.&nbsp;Refer to <a href=\"https://omni.helpdocsonline.com/adyen-payment-configuration$adyen-authentication-credentials\">Adyen Credential Management</a>&nbsp;and <a href=\"https://omni.helpdocsonline.com/adyen-payment-configuration$client-authentication-and-allowed-origins\">Adyen Client Authentication</a></p>\r\n\r\n<h4><a name=\"pay-by-link-email-configuration\" id=\"pay-by-link-email-configuration\"></a>Pay by Link Email Configuration</h4>\r\n\r\n<p>To enable the Pay by Link emails to be delivered via the Active®&nbsp;Omni email component for testing purposes, ask services to set the&nbsp;consul server property&nbsp;<strong>config/com-manh-cp-email,om-side/email.publishEmailPayload = false</strong>.&nbsp;If this is set to true, then the email body payload is published to a queue (to be delivered by a third party email provider). If it's set to false, then the email should be delivered by Active® Omni.</p>\r\n\r\n<p>With the help of services, populate the consul server&nbsp;property <strong>order.selfServiceHostName</strong> with the host information for Digital-Self Service in Order Component (path: <strong>CONFIG/COM-MANH-CP-ORDER,OM-SIDE/</strong>). This ensures that the Digital Self-Service URL is ready to be included in emails or text messages. In the order component consul server config, add a value such as \"<strong>https://abc.manh.com</strong>\" for the selfServiceHostName property. Be sure to configure this with \"https:\" not \"http:\". If this is already completed for other Digital Self-Service flows, it does not need to be done again.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: No Order Configuration changes are required to generate the Pay by Link emails or texts. The event is fired when the contact center user clicks 'Send Email' or 'Send Text', which triggers the outbound Email Message or Text Message.</div>\r\n\r\n<p>If using the Pay by Link email template in&nbsp;Active® Omni, then modify the HTML as needed to suit the retailer's brand. See below for a sample Pay by Link email template.</p>\r\n\r\n<pre class=\"computer_code\"><code class=\"json\">{\r\n    \"GroupName\": \"EmailMessageService\",\r\n    \"LogFailure\": true,\r\n    \"Description\": \"Sample email generated to request the customer adds payment via Digital Self-Service. This template can be used for reference purposes only\",\r\n    \"ReplyToName\": null,\r\n    \"Name\": \"Sample pay by link template\",\r\n    \"ReplyTo\": \"cpadmin@manh.com\",\r\n    \"FromName\": \"Sophia's\",\r\n    \"ConditionExpression\": \"EmailMessageType contains \\\"PayByLink\\\"\",\r\n    \"Body\": \"&lt;!DOCTYPE html PUBLIC \\\"-\\/\\/W3C\\/\\/DTD XHTML 1.0 Strict\\/\\/EN\\\" \\\"http:\\/\\/www.w3.org\\/TR\\/xhtml1\\/DTD\\/xhtml1-strict.dtd\\\"&gt;\\r\\n&lt;html xmlns=\\\"http:\\/\\/www.w3.org\\/1999\\/xhtml\\\"&gt;\\r\\n\\r\\n&lt;head&gt;\\r\\n  &lt;meta http-equiv=\\\"Content-Type\\\" content=\\\"text\\/html; charset=utf-8\\\" \\/&gt;\\r\\n  &lt;meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" \\/&gt;\\r\\n  &lt;meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"&gt;\\r\\n  &lt;title&gt;Order Confirmed Template&lt;\\/title&gt;\\r\\n  &lt;style type=\\\"text\\/css\\\"&gt;\\r\\n\\r\\n  \\/*Override Gmail link styling, which turns all link text blue *\\/\\r\\n  u + #body a {\\r\\n      color: inherit;\\r\\n      text-decoration: none;\\r\\n      font-size: inherit;\\r\\n      font-family: inherit;\\r\\n      font-weight: inherit;\\r\\n      line-height: inherit;\\r\\n  }\\r\\n  \\r\\n    #outlook a {\\r\\n      padding: 0;\\r\\n    }\\r\\n\\r\\n    \\/* Force Outlook to provide a \\\"view in browser\\\" menu link. *\\/\\r\\n    body {\\r\\n      font-family: \\\"Helvetica\\\";\\r\\n      width: 100% !important;\\r\\n      -webkit-text-size-adjust: 100%;\\r\\n      -ms-text-size-adjust: 100%;\\r\\n      margin: 0;\\r\\n      padding: 0;\\r\\n    }\\r\\n\\r\\n.header {\\r\\n  padding: 1px;\\r\\n  text-align: center;\\r\\n  background: #982741;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n    \\/* Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design. *\\/\\r\\n    .ExternalClass {\\r\\n      width: 100%;\\r\\n    }\\r\\n\\r\\n    \\/* Force Hotmail to display emails at full width *\\/\\r\\n    .ExternalClass,\\r\\n    .ExternalClass p,\\r\\n    .ExternalClass span,\\r\\n    .ExternalClass font,\\r\\n    .ExternalClass td,\\r\\n    .ExternalClass div {\\r\\n      line-height: 100%;\\r\\n      color: #000000;\\r\\n      font-family: \\\"Helvetica\\\";\\r\\n    }\\r\\n\\r\\n    \\/* Force Hotmail to display normal line spacing.*\\/\\r\\n    #backgroundTable {\\r\\n      margin: 0;\\r\\n      padding: 0;\\r\\n      width: 100% !important;\\r\\n      line-height: 100% !important;\\r\\n    }\\r\\n\\r\\n    img {\\r\\n      outline: none;\\r\\n      text-decoration: none;\\r\\n      border: none;\\r\\n      -ms-interpolation-mode: bicubic;\\r\\n    }\\r\\n\\r\\n    a img {\\r\\n      border: none;\\r\\n    }\\r\\n\\r\\n    .image_fix {\\r\\n      display: block;\\r\\n    }\\r\\n\\r\\n    p {\\r\\n      color: #000000;\\r\\n      font-family: \\\"Helvetica\\\";\\r\\n      margin: 0px 0px !important;\\r\\n    }\\r\\n\\r\\n    table td {\\r\\n      border-collapse: collapse;\\r\\n    }\\r\\n\\r\\n    table {\\r\\n      border-collapse: collapse;\\r\\n      mso-table-lspace: 0pt;\\r\\n      mso-table-rspace: 0pt;\\r\\n    }\\r\\n\\r\\n    a {\\r\\n      font-family: \\\"Helvetica\\\";\\r\\n      color: #000000;\\r\\n      text-decoration: none;\\r\\n      text-decoration: none !important;\\r\\n    }\\r\\n\\r\\n    .PrimaryBgColor {\\r\\n      background-color: #982741;\\r\\n    }\\r\\n\\r\\n    .orderNumber {\\r\\n      font-size: 12px;\\r\\n      color: #000000;\\r\\n    }\\r\\n\\r\\n    .span {\\r\\n      color: #000000;\\r\\n    }\\r\\n\\r\\n    .h3 {\\r\\n      color: #000000;\\r\\n    }\\r\\n\\r\\n    .emailActionBttn,\\r\\n    .emailActionBttn:link,\\r\\n    .emailActionBttn:visited,\\r\\n    .emailActionBttn:active {\\r\\n        text-decoration: none;\\r\\n        text-align: center;\\r\\n        padding: 0.5em 1em;\\r\\n        font-size: 18px;\\r\\n        color: #FFFFFF;\\r\\n        background-color: #982741;\\r\\n        border-color: #982741;\\r\\n        border: 2px solid;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n\\r\\n    .emailActionBttn:hover {\\r\\n        background-color: #FFFFFF;\\r\\n        border-color: #982741;\\r\\n        color: #982741;\\r\\n    }\\r\\n\\r\\n    .productImg {\\r\\n      margin-right: 2rem;\\r\\n      width: 125px;\\r\\n      height: auto;\\r\\n      object-fit: cover;\\r\\n    }\\r\\n\\r\\n    .flexContainer {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      width: 400px;\\r\\n    }\\r\\n\\r\\n    .flexContainer2 {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      vertical-align: middle;\\r\\n      width: 400px;\\r\\n    }\\r\\n\\r\\n    .price {\\r\\n      margin-left: 6rem;\\r\\n    }\\r\\n\\r\\n    .sectionHeader {\\r\\n      line-height: 2;\\r\\n      font-family: Helvetica;\\r\\n      color: #ffffff;\\r\\n      font-size: 16px;\\r\\n    }\\r\\n\\r\\n    \\/*STYLES*\\/\\r\\n    table[class=full] {\\r\\n      width: 100%;\\r\\n      clear: both;\\r\\n    }\\r\\n\\r\\n    .header {\\r\\n      margin-top: 5%;\\r\\n      margin-bottom: 5%;\\r\\n      font-family: \\\"Helvetica\\\";\\r\\n    }\\r\\n\\r\\n    .displayValue {\\r\\n      white-space: nowrap;\\r\\n      text-overflow: ellipsis;\\r\\n      overflow: hidden;\\r\\n      width: 123px;\\r\\n      display: inline-block;\\r\\n      vertical-align: bottom;\\r\\n      line-height: 37px;\\r\\n      font-family: Helvetica;\\r\\n      font-size: 14px;\\r\\n    }\\r\\n\\r\\n    .displayValue2 {\\r\\n      white-space: nowrap;\\r\\n      text-overflow: ellipsis;\\r\\n      overflow: hidden;\\r\\n      width: 300px;\\r\\n      display: inline-block;\\r\\n      vertical-align: bottom;\\r\\n      line-height: 37px;\\r\\n      font-family: Helvetica;\\r\\n      font-size: 14px;\\r\\n    }\\r\\n\\r\\n    \\/*IPAD STYLES*\\/\\r\\n    @media only screen and (max-width: 640px) {\\r\\n\\r\\n      a[href^=\\\"tel\\\"],\\r\\n      a[href^=\\\"sms\\\"] {\\r\\n        text-decoration: none;\\r\\n        color: #000000;\\r\\n        \\/* or whatever your want *\\/\\r\\n        pointer-events: none;\\r\\n        cursor: default;\\r\\n      }\\r\\n\\r\\n      .itemName {\\r\\n        font-size: 18px !important;\\r\\n        font-weight: 500 !important;\\r\\n      }\\r\\n\\r\\n      .sectionHeader {\\r\\n        align: left;\\r\\n        font-size: 18px !important;\\r\\n      }\\r\\n\\r\\n      .displayValue,\\r\\n      .displayValue2 {\\r\\n        font-size: 16px !important;\\r\\n      }\\r\\n\\r\\n      .mobile_link a[href^=\\\"tel\\\"],\\r\\n      .mobile_link a[href^=\\\"sms\\\"] {\\r\\n        text-decoration: default;\\r\\n        color: #000000 !important;\\r\\n        pointer-events: auto;\\r\\n        cursor: default;\\r\\n      }\\r\\n\\r\\n      table[class=devicewidth] {\\r\\n        width: 440px !important;\\r\\n        text-align: left !important;\\r\\n      }\\r\\n\\r\\n      table[class=devicewidthinner] {\\r\\n        width: 420px !important;\\r\\n        text-align: left !important;\\r\\n      }\\r\\n\\r\\n      img[class=banner] {\\r\\n        width: 225px !important;\\r\\n        height: 375px !important;\\r\\n      }\\r\\n\\r\\n      img[class=colimg2] {\\r\\n        width: 225px !important;\\r\\n        height: 375px !important;\\r\\n      }\\r\\n\\r\\n      .emailActionBttn,\\r\\n      .emailActionBttn:link,\\r\\n      .emailActionBttn:visited,\\r\\n      .emailActionBttn:active {\\r\\n        text-decoration: none;\\r\\n        text-align: center;\\r\\n        padding: 0.5em 1em;\\r\\n        font-size: 18px;\\r\\n        color: #FFFFFF;\\r\\n        background-color: #982741;\\r\\n        border-color: #982741;\\r\\n        border: 2px solid;\\r\\n        border-radius: 4px;\\r\\n      }\\r\\n\\r\\n      .emailActionBttn:hover {\\r\\n        background-color: #FFFFFF;\\r\\n        border-color: #982741;\\r\\n        color: #982741;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    \\/*IPHONE STYLES*\\/\\r\\n    @media only screen and (max-width: 480px) {\\r\\n\\r\\n      a[href^=\\\"tel\\\"],\\r\\n      a[href^=\\\"sms\\\"] {\\r\\n        text-decoration: none;\\r\\n        color: #000000;\\r\\n        \\/* or whatever your want *\\/\\r\\n        pointer-events: none;\\r\\n        cursor: default;\\r\\n      }\\r\\n\\r\\n      .itemName {\\r\\n        font-size: 18px !important;\\r\\n        font-weight: 500 !important;\\r\\n      }\\r\\n\\r\\n      .sectionHeader {\\r\\n        align: left;\\r\\n        font-size: 18px !important;\\r\\n      }\\r\\n\\r\\n      .displayValue,\\r\\n      .displayValue2 {\\r\\n        font-size: 16px !important;\\r\\n      }\\r\\n\\r\\n      .mobile_link a[href^=\\\"tel\\\"],\\r\\n      .mobile_link a[href^=\\\"sms\\\"] {\\r\\n        text-decoration: default;\\r\\n        color: #000000 !important;\\r\\n        pointer-events: auto;\\r\\n        cursor: default;\\r\\n      }\\r\\n\\r\\n      table[class=devicewidth] {\\r\\n        width: 280px !important;\\r\\n        text-align: left !important;\\r\\n      }\\r\\n\\r\\n      table[class=devicewidthinner] {\\r\\n        width: 260px !important;\\r\\n        text-align: left !important;\\r\\n      }\\r\\n\\r\\n      img[class=banner] {\\r\\n        width: 225px !important;\\r\\n        height: 375px !important;\\r\\n      }\\r\\n\\r\\n      img[class=colimg2] {\\r\\n        width: 225px !important;\\r\\n        height: 375px !important;\\r\\n      }\\r\\n\\r\\n      td[class=mobile-hide] {\\r\\n        display: none !important;\\r\\n      }\\r\\n\\r\\n      td[class=\\\"padding-bottom25\\\"] {\\r\\n        padding-bottom: 25px !important;\\r\\n      }\\r\\n\\r\\n      .emailActionBttn,\\r\\n      .emailActionBttn:link,\\r\\n      .emailActionBttn:visited,\\r\\n      .emailActionBttn:active {\\r\\n        text-decoration: none;\\r\\n        text-align: center;\\r\\n        padding: 0.5em 1em;\\r\\n        font-size: 18px;\\r\\n        color: #FFFFFF;\\r\\n        background-color: #982741;\\r\\n        border-color: #982741;\\r\\n        border: 2px solid;\\r\\n        border-radius: 4px;\\r\\n      }\\r\\n\\r\\n      .emailActionBttn:hover {\\r\\n        background-color: #FFFFFF;\\r\\n        border-color: #982741;\\r\\n        color: #982741;\\r\\n      }\\r\\n    }\\r\\n  &lt;\\/style&gt;\\r\\n&lt;\\/head&gt;\\r\\n\\r\\n&lt;body id=\\\"body\\\"&gt;\\r\\n  &lt;#setting number_format=\\\"$#,##0.00; $#,##0.00\\\"&gt;\\r\\n    &lt;!-- Start of preheader --&gt;\\r\\n    &lt;table class=\\\"flexcontainer\\\" width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"flexcontainer\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"flexcontainer\\\"&gt;\\r\\n                      &lt;tbody&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td&gt;\\r\\n                            &lt;table width=\\\"300\\\" align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0px\\\" cellspacing=\\\"0\\\" class=\\\"flexcontainer\\\"&gt;\\r\\n                              &lt;tbody&gt;\\r\\n                                &lt;tr&gt;\\r\\n                                  &lt;td padding-bottom=\\\"0\\\" align=\\\"center\\\"&gt;\\r\\n                                    &lt;img width=\\\"300\\\" src=\\\"https:\\/\\/res.cloudinary.com\\/com-manh-cp\\/image\\/upload\\/v1585061036\\/digitalSelfService\\/Sophia_s-logo-centered.png\\\"&gt;\\r\\n                                  &lt;\\/td&gt;\\r\\n                                &lt;\\/tr&gt;\\r\\n                              &lt;\\/tbody&gt;\\r\\n                            &lt;\\/table&gt;\\r\\n                          &lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                      &lt;\\/tbody&gt;\\r\\n                    &lt;\\/table&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n    &lt;!-- End of preheader --&gt;\\r\\n    &lt;!-- Start Full Text --&gt;\\r\\n    &lt;table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"500\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidthinner\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;!-- Title --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"&gt; &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- End of Title --&gt;\\r\\n                &lt;!-- Title --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;div style=\\\"font-size: 18px; color: #000000; line-height: 30px; font-family: Helvetica\\\" align=\\\"center\\\"&gt;Hi&lt;#if CustomerFirstName??&gt; ${CustomerFirstName}&lt;\\/#if&gt;!&lt;\\/div&gt;\\r\\n                  &lt;div style=\\\"font-size: 18px; color: #000000; line-height: 30px; font-family: Helvetica\\\" align=\\\"center\\\"&gt;One last step to place your order...&lt;\\/div&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- End of Title --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;div style=\\\"font-size: 15px; line-height: 30px; \\\" align=\\\"center\\\"&gt;\\r\\n                    &lt;p style=\\\"color:#000000;font-family: Helvetica\\\"&gt; Order: ${OrderId}&lt;\\/p&gt;\\r\\n                  &lt;\\/div&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- Spacing --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\" height=\\\"20\\\"&gt;&lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- Spacing --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;div style=\\\"font-size: 15px;\\\" align=\\\"center\\\"&gt;\\r\\n\\r\\n                    &lt;p style=\\\"font-family:Helvetica; line-height: 25px; color:#000000;\\\"&gt;Review and complete your order by clicking 'Add Payment' below.&lt;\\/p&gt;\\r\\n\\r\\n                  &lt;\\/div&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- Add Payment button --&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"&gt; &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"600\\\" style=\\\"font-size: 16px; color: #fff; line-height: 30px;\\\" align=\\\"center\\\"&gt;\\r\\n                    &lt;a class=\\\"emailActionBttn\\\" \\r\\n                      href=\\\"${SelfServiceUrl}\\\"&gt;Add Payment&lt;\\/a&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n                &lt;!-- End of content --&gt;\\r\\n                &lt;!-- End of content --&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n    &lt;br&gt;\\r\\n    &lt;!-- Items --&gt;\\r\\n\\r\\n    &lt;table width=\\\"100%\\\" style=\\\"background-color: #982741\\\"; cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" style=\\\"background-color: #982741; text-align: center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;p&gt; &lt;span class=\\\"sectionHeader\\\"&gt;Ordered Items&lt;\\/span&gt; &lt;\\/p&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n\\r\\n\\r\\n    &lt;table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;table bgcolor=\\\"#ffffff\\\" width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                      &lt;tbody&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td&gt;\\r\\n                            &lt;!-- start of column --&gt;\\r\\n                            &lt;table width=\\\"600\\\" align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                              &lt;tbody&gt;\\r\\n                                &lt;!-- Spacing --&gt;\\r\\n                                &lt;tr&gt;\\r\\n                                  &lt;td style=\\\"font-family: Helvetica, arial, sans-serif\\\"&gt;\\r\\n                                    &lt;!-- start of text content table --&gt;\\r\\n                                    &lt;table class=\\\"flexContainer\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin-top: 2%\\\" align=\\\"left\\\"&gt;\\r\\n                                      &lt;tbody&gt;\\r\\n                                        &lt;#list OrderedItems as Details&gt;\\r\\n                                          &lt;tr&gt;\\r\\n                                            &lt;td&gt;\\r\\n                                              &lt;table class=\\\"flexContainer\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin-top: 5%;\\\" align=\\\"left\\\"&gt;\\r\\n                                                &lt;tbody&gt;\\r\\n\\r\\n                                                  &lt;tr&gt;\\r\\n                                                    &lt;td&gt;\\r\\n                                                      &lt;#if Details.ItemSmallImageURI??&gt;&lt;img src=\\\"${Details.ItemSmallImageURI}\\\" width=\\\"125\\\" align=\\\"left\\\"&gt;&lt;\\/#if&gt;\\r\\n                                                    &lt;\\/td&gt;\\r\\n                                                    &lt;td&gt;\\r\\n                                                      &lt;table width=\\\"300\\\" align=\\\"right\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\"&gt;\\r\\n                                                        &lt;br&gt;&lt;br&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n\\r\\n                                                          &lt;td style=\\\"font-size:16px; line-height:30px; font-family:Helvetica; font-weight:bold\\\"&gt;\\r\\n                                                            &lt;#if Details.ItemShortDescription??&gt; ${Details.ItemShortDescription}&lt;\\/#if&gt;\\r\\n                                                          &lt;\\/td&gt;\\r\\n\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n\\r\\n                                                          &lt;td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\"&gt;Size: &lt;#if Details.ItemSize??&gt;${Details.ItemSize}&lt;\\/#if&gt;\\r\\n                                                          &lt;\\/td&gt;\\r\\n\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n                                                          &lt;td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\"&gt;Qty: ${Details.Quantity?string(\\\",##0\\\")}&lt;\\/td&gt;\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n\\r\\n                                                          &lt;td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\"&gt;Color: &lt;#if Details.ItemColorDescription??&gt;${Details.ItemColorDescription}&lt;\\/#if&gt;\\r\\n                                                          &lt;\\/td&gt;\\r\\n\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n\\r\\n                                                          &lt;td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\"&gt;Price: &lt;#if !Details.UnitPrice??&gt;$0.00 &lt;#else&gt;${Details.UnitPrice}&lt;\\/#if&gt;\\r\\n                                                          &lt;\\/td&gt;\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                        &lt;tr&gt;\\r\\n                                                          &lt;td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\"&gt;Item: ${Details.ItemId}&lt;\\/td&gt;\\r\\n                                                        &lt;\\/tr&gt;\\r\\n                                                      &lt;\\/table&gt;\\r\\n                                                    &lt;\\/td&gt;\\r\\n                                                  &lt;\\/tr&gt;\\r\\n\\r\\n                                                &lt;\\/tbody&gt;\\r\\n                                              &lt;\\/table&gt;\\r\\n                                            &lt;\\/td&gt;\\r\\n                                          &lt;\\/tr&gt;\\r\\n                                          &lt;tr style=\\\"clear:both;height:60px\\\"&gt; &lt;\\/tr&gt;\\r\\n                                        &lt;\\/#list&gt;\\r\\n                                      &lt;\\/tbody&gt;\\r\\n                                      &lt;tr style=\\\"clear:both;margin-top: 4%\\\"&gt;&lt;\\/tr&gt;\\r\\n                                    &lt;\\/table&gt;\\r\\n                                    &lt;!-- end of text content table --&gt;\\r\\n                                  &lt;\\/td&gt;\\r\\n                                &lt;\\/tr&gt;\\r\\n                              &lt;\\/tbody&gt;\\r\\n                            &lt;\\/table&gt;\\r\\n                          &lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                      &lt;\\/tbody&gt;\\r\\n                    &lt;\\/table&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n    &lt;br&gt;\\r\\n    &lt;!-- end of items --&gt;\\r\\n    &lt;!-- Start Full Text --&gt;\\r\\n    &lt;table width=\\\"100%\\\" style=\\\"background-color: #982741\\\"; cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" style=\\\"background-color: #982741; text-align: center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;p&gt; &lt;span class=\\\"sectionHeader\\\"&gt;Order Summary&lt;\\/span&gt; &lt;\\/p&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n\\r\\n    &lt;table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"10\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                      &lt;tbody&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td&gt;\\r\\n                            &lt;table width=\\\"600\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                              &lt;tbody&gt;\\r\\n                                &lt;!-- content --&gt;\\r\\n                                &lt;tr&gt;\\r\\n                                  &lt;td style=\\\"font-size: 13px;  line-height: 20px; width: 100%\\\" align=\\\"left\\\"&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica; text-align: left\\\"&gt;Subtotal:&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica; text-align: left\\\"&gt;Shipping:&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica; text-align: left\\\"&gt;Discounts:&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica; text-align: left\\\"&gt;Taxes:&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica; text-align: left; font-weight:bold\\\"&gt;Total:&lt;\\/p&gt;\\r\\n                                  &lt;\\/td&gt;\\r\\n                                  &lt;td style=\\\"font-size: 13px;  line-height: 20px; width: 100%\\\" align=\\\"right\\\"&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica;\\\"&gt;&lt;#if !OrderSubTotal??&gt;$0.00 &lt;#else&gt;${OrderSubTotal}&lt;\\/#if&gt;&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"font-family: Helvetica;\\\"&gt;&lt;#if !TotalCharges??&gt;$0.00 &lt;#else&gt;${TotalCharges}&lt;\\/#if&gt;&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"color: #000000;font-family: Helvetica\\\"&gt;&lt;#if !TotalDiscounts??&gt;$0.00 &lt;#else&gt;${TotalDiscounts}&lt;\\/#if&gt;&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"color: #000000;font-family: Helvetica\\\"&gt;&lt;#if !TotalTaxes??&gt;$0.00 &lt;#else&gt;${TotalTaxes}&lt;\\/#if&gt;&lt;\\/p&gt;\\r\\n                                    &lt;p style=\\\"color: #000000;font-family: Helvetica; font-weight:bold\\\"&gt;&lt;#if !OrderTotal??&gt;$0.00 &lt;#else&gt;${OrderTotal}&lt;\\/#if&gt;&lt;\\/p&gt;\\r\\n                                  &lt;\\/td\\r\\n                                &lt;\\/tr&gt;\\r\\n                                &lt;!-- End of content --&gt;\\r\\n                                &lt;!-- Title --&gt;\\r\\n                                &lt;br&gt;\\r\\n                                &lt;!-- End of Title --&gt;\\r\\n                                &lt;!-- beginning of seperator --&gt;\\r\\n                              &lt;\\/tbody&gt;\\r\\n                            &lt;\\/table&gt;\\r\\n                            &lt;table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\"&gt;\\r\\n                              &lt;tbody&gt;\\r\\n                                &lt;tr&gt;\\r\\n                                  &lt;td&gt;\\r\\n                                    &lt;table width=\\\"600\\\" align=\\\"center\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                                      &lt;tbody&gt;\\r\\n                                        &lt;tr&gt;\\r\\n                                          &lt;td align=\\\"center\\\" height=\\\"6\\\" style=\\\"font-size:1px; line-height:1px;\\\"&gt;  &lt;\\/td&gt;\\r\\n                                        &lt;\\/tr&gt;\\r\\n                                        &lt;tr&gt;\\r\\n                                          &lt;td width=\\\"600\\\" align=\\\"center\\\" height=\\\"1\\\" bgcolor=\\\"#d1d1d1\\\" style=\\\"font-size:1px; line-height:1px;\\\"&gt;  &lt;\\/td&gt;\\r\\n                                        &lt;\\/tr&gt;\\r\\n                                        &lt;tr&gt;\\r\\n                                          &lt;td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"&gt;  &lt;\\/td&gt;\\r\\n                                        &lt;\\/tr&gt;\\r\\n\\r\\n                                      &lt;\\/tbody&gt;\\r\\n                                    &lt;\\/table&gt;\\r\\n                                  &lt;\\/td&gt;\\r\\n                                &lt;\\/tr&gt;\\r\\n                              &lt;\\/tbody&gt;\\r\\n                            &lt;\\/table&gt;\\r\\n                          &lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                      &lt;\\/tbody&gt;\\r\\n                    &lt;\\/table&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n    &lt;!-- end of full text --&gt;\\r\\n    &lt;table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\"&gt;\\r\\n      &lt;tbody&gt;\\r\\n        &lt;tr&gt;\\r\\n          &lt;td&gt;\\r\\n            &lt;table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n              &lt;tbody&gt;\\r\\n                &lt;tr&gt;\\r\\n                  &lt;td width=\\\"100%\\\"&gt;\\r\\n                    &lt;table width=\\\"100%\\\" cellpadding=\\\"10px\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\"&gt;\\r\\n                      &lt;tbody&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td align=\\\"center\\\" valign=\\\"middle\\\"&gt;\\r\\n                            &lt;p style=\\\"font-size:15px;font-family: Helvetica;font-weight:bold;color :  #000000\\\"&gt;My Account | Support | Privacy Policy&lt;\\/p&gt;\\r\\n                            &lt;hr class=\\\"seperator\\\"&gt;\\r\\n                            &lt;p style=\\\"color: #000000;font-size:10px;font-family: Helvetica\\\"&gt;This message was sent to ${CustomerEmail}&lt;\\/p&gt;\\r\\n                            &lt;p style=\\\"color: #000000;font-size:10px\\\"&gt;2019 Sophia's Inc. Sophia's and the Sophia's Outlet logo are registered trademarks&lt;\\/p&gt;\\r\\n                            &lt;p style=\\\"color: #000000;font-size:10px;font-family: Helvetica\\\"&gt;of Sophia's Inc 2300 Windy Ridge Parkway, Atlanta GA 30339.&lt;\\/p&gt;\\r\\n                          &lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td align=\\\"center\\\" valign=\\\"middle\\\"&gt;\\r\\n                            &lt;p style=\\\"font-size:10px;font-family: Helvetica\\\"&gt;&lt;\\/p&gt;\\r\\n                            &lt;hr class=\\\"seperator\\\"&gt;\\r\\n                            &lt;p style=\\\"color:  #bfbfbf;font-size:10px\\\"&gt;*This email was sent from a notification-only address that cannot accept incoming email. Please do not reply to this message.&lt;\\/p&gt;\\r\\n                          &lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                        &lt;!-- Spacing --&gt;\\r\\n                        &lt;tr&gt;\\r\\n                          &lt;td width=\\\"100%\\\" height=\\\"20\\\"&gt;&lt;\\/td&gt;\\r\\n                        &lt;\\/tr&gt;\\r\\n                        &lt;!-- Spacing --&gt;\\r\\n                      &lt;\\/tbody&gt;\\r\\n                    &lt;\\/table&gt;\\r\\n                  &lt;\\/td&gt;\\r\\n                &lt;\\/tr&gt;\\r\\n              &lt;\\/tbody&gt;\\r\\n            &lt;\\/table&gt;\\r\\n          &lt;\\/td&gt;\\r\\n        &lt;\\/tr&gt;\\r\\n      &lt;\\/tbody&gt;\\r\\n    &lt;\\/table&gt;\\r\\n    &lt;!-- End of postfooter --&gt;\\r\\n&lt;\\/body&gt;\\r\\n\\r\\n&lt;\\/html&gt;\\r\\n\",\r\n    \"TemplateId\": \"PayByLink\",\r\n    \"ReferenceField1\": \"${OrderId}\",\r\n    \"ReferenceField2\": null,\r\n    \"ReferenceField3\": \"${OrderTypeId}\",\r\n    \"ReferenceField4\": null,\r\n    \"ReferenceField5\": null,\r\n    \"Subject\": \"One last step to complete your Sophia's order ${OrderId}...\",\r\n    \"FromEmail\": \"cpadmin@manh.com\",\r\n    \"ToAddress\": [\r\n        {\r\n            \"ToAddressType\": {\r\n                \"TypeId\": \"TO\"\r\n            },\r\n            \"ToEmail\": \"${CustomerEmail}\",\r\n            \"ToName\": \"${CustomerFirstName} ${CustomerLastName}\"\r\n        }\r\n    ],\r\n    \"LogSuccess\": true\r\n}</code></pre>\r\n\r\n<h4><a name=\"pay-by-link-text-message-configuration\" id=\"pay-by-link-text-message-configuration\"></a>Pay by Link Text Message Configuration</h4>\r\n\r\n<p>See the <a hqid=\"2607998\" href=\"/transactional-texts\">Transactional Text Guide</a> for required configuration for generating Pay by Link text messages. Here is a sample Pay by Link text template:</p>\r\n\r\n<div class=\"computer_code\"><code class=\"json\">{<br>\r\n&nbsp; \"TemplateMsgId\": \"PayByLink\",<br>\r\n&nbsp; \"Name\": \"PayByLink\",<br>\r\n&nbsp; \"Description\": \"Text message to send the Pay By Link to the customer.\",<br>\r\n&nbsp; \"MessagePrefix\": null,<br>\r\n&nbsp; \"MessageSuffix\": null,<br>\r\n&nbsp; \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your order is almost complete. Please click the link to add payment: ${Order.DSSUrl}\",<br>\r\n&nbsp; \"ConditionalExpression\": \"Order.TextMessageType contains \\\"PayByLink\\\"\",<br>\r\n&nbsp; \"MessagePrefixInterval\": 0,<br>\r\n&nbsp; \"MessageSuffixInterval\": 0,<br>\r\n&nbsp; \"TextMessageType\": {<br>\r\n&nbsp;&nbsp;&nbsp; \"TextMessageTypeId\": \"Transactional\"<br>\r\n&nbsp; }<br>\r\n}</code></div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: No Order Configuration changes are required to generate the Pay by Link emails or texts. The event is fired when the contact center user clicks 'Send Email' or 'Send Text', which triggers the outbound Email Message or Text Message.</div>\r\n\r\n<h4><a name=\"multiple-payment-gateways-configuration\" id=\"multiple-payment-gateways-configuration\"></a>Multiple Payment Gateways Configuration</h4>\r\n\r\n<ul>\r\n\t<li>In the 'Payment Capture Config' UI, the retailer can select a payment type (/method)&nbsp;which needs to be displayed on the Pay by Link page. In order for this payment type to be visible on the Pay By Link page, the check box 'Permit SelfService Sales' in the 'Detail' tab should be selected.</li>\r\n\t<li>For each of the&nbsp;payment types configured in the 'Payment Capture Config', a different payment gateway can be assigned by following the steps mentioned in the&nbsp;<a href=\"https://omni.helpdocsonline.com/payment-configuration-2$configuring-payment-rule\">configuring-payment-rule</a>&nbsp;section.</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;All the payment types configured to be visible on the Pay By Link page will also be visible on the Payment Resolution page and Return and Exchanges Preview page.</div>\r\n\r\n<h3><a name=\"feature-scope\" id=\"feature-scope\"></a>Feature Scope</h3>\r\n\r\n<p>The following is not supported:</p>\r\n\r\n<ul>\r\n\t<li>Push notifications in the contact center, to let the CSR know that payment has been added. Currently the customer must notify the CSR verbally over the phone, and the CSR can refresh the page.</li>\r\n\t<li>Adding custom buttons, links, text, etc. to the Pay by Link panel in customer service</li>\r\n\t<li>Adding custom buttons, links, text, panels to&nbsp;the Digital Self-Service Pay by Link UI (only the logo, font, colors, etc. can be customized per the styling guide)</li>\r\n\t<li>Populating the customer's country code phone prefix&nbsp;for customers created in the contact center</li>\r\n</ul>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a>Services</h3>\r\n\r\n<p>The following APIs are related&nbsp;to Pay by Link.&nbsp;Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service</font></th>\r\n\t\t\t<th scope=\"col\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Component</font></th>\r\n\t\t\t<th scope=\"col\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Group</font></th>\r\n\t\t\t<th scope=\"col\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service Endpoint</font></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Send Pay by Link API</td>\r\n\t\t\t<td><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Order</font></td>\r\n\t\t\t<td><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Order</font></td>\r\n\t\t\t<td>order/api/order/order/payByLink</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<h3><a name=\"how-to-test\" id=\"how-to-test\"></a>How to Test</h3>\r\n\r\n<p>To test Pay by Link:</p>\r\n\r\n<ol>\r\n\t<li>Enable all required configuration listed above for the contact center, email and/or text, and Digital Self-Service.</li>\r\n\t<li>Log into the contact center as a CSR (Menu &gt; Customer Service) and create a new order by adding an item.</li>\r\n\t<li>Select a registered customer or add a new customer. Note: If you're looking to use Pay by Link via text message for a non-US customer, then as a prerequisite to this step, you'll need to save the customer's country code phone prefix on the customer record.</li>\r\n\t<li>Add a shipping address or select a pickup store and proceed to payment.</li>\r\n\t<li>You should see the Pay by Link panel listed on the top of the payment page. Use the pre-populated email or phone number, or modify/add a new email or phone number, and click 'Send Email' or 'Send Text'.</li>\r\n\t<li>Now, as a customer, check your email or text messages (using the email or phone populated in the previous step). You should see a \"Please add payment...\" email or text.</li>\r\n\t<li>In the email or text, click the 'Add Payment' link to launch Digital Self-Service.</li>\r\n\t<li>In the Digital Self-Serivce Pay by Link page, review the items and order total and click 'Pay Now'.</li>\r\n\t<li>In the payment gateway page (e.g. Cybersource or Adyen), add a billing address (or use the pre-populated one) and enter credit card details. Click 'Pay'.</li>\r\n\t<li>You should see the Digital Self-Service confirmation page, at which point the customer notifies the CSR that payment is added.</li>\r\n\t<li>Now back in the contact center, as the CSR, click the 'Refresh' button to see the newly-added payment method and updated balance due.</li>\r\n\t<li>Confirm the order to process the authorization.</li>\r\n</ol>\r\n\r\n<h3><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<h4><a name=\"how-to-systematically-trigger-pay-by-link-messages\" id=\"how-to-systematically-trigger-pay-by-link-messages\"></a>How to Systematically Trigger Pay by Link Messages</h4>\r\n\r\n<p>The base Pay by Link flow is triggered&nbsp;via&nbsp;user action from different selling channels. If it is required to generate pay by link messages in a systematic way, for example, orders that are created externally that should be paid for using Pay by Link, a flow similar to the following can be implemented:</p>\r\n\r\n<ol>\r\n\t<li>Choose an identifier on the order&nbsp;to indicate that payment should be captured via Pay by Link.\r\n\t<ul>\r\n\t\t<li>Options for this include, but are not limited to, an extended attribute or a specific order hold type.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>Choose a trigger point for the Pay by Link, whichever makes the most sense for the use case.\r\n\t<ul>\r\n\t\t<li>Options for this include, but are not limited to, Order Confirmed mod type,&nbsp;Update Payment Status to Awaiting Payment Info mod type, or a scheduled agent.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>In custom logic, take the order Id and invoke the base pay by link URL</li>\r\n</ol>\r\n\r\n<div class=\"computer_code\" style=\"margin-left: 40px;\">POST /order/api/order/order/payByLink<br>\r\n<br>\r\n{<br>\r\n&nbsp; &nbsp; \"OrderId\": \"CC15038\",<br>\r\n&nbsp; &nbsp; \"SendEmail\": true,<br>\r\n&nbsp; &nbsp; \"SendText\": false<br>\r\n}</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>When the base Pay by Link flow is done as part of the Manhattan&nbsp;Active® Omni UI process, there is explicit logic to execute the newly added payment transactions to the gateway when the user clicks \"Place Order\" or \"Confirm Changes\". If this entire flow is being done outside of Manhattan&nbsp;Active® Omni pre-order confirmation, a mechanism to trigger a payment request may be required to authorize the payment immediately. Keep this in mind if your process involves saving payment information prior to order confirmation.</div>\r\n\r\n<h3><a name=\"troubleshooting-nbsp\" id=\"troubleshooting-nbsp\"></a>Troubleshooting&nbsp;</h3>\r\n\r\n<h4><a name=\"cybersource-certificate-issue\" id=\"cybersource-certificate-issue\"></a>Cybersource certificate issue</h4>\r\n\r\n<p>To troubleshoot any issue with a cybersource certificate, follow the steps given below.</p>\r\n\r\n<ol data-indent-level=\"1\" start=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"61\">Save Cybersource Gateway json&nbsp;<div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-2\" class=\"toggle-content\"><span class=\"toggle-title\">Cybersource Gateway json</span></a></p><div id=\"tg-2\"><div class=\"computer_code\">\n<p>&nbsp;</p>\n\n<p>{</p>\n\n<p>&quot;Messages&quot;: null,</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;PerformsStandaloneRefunds&quot;: true,</p>\n\n<p>&quot;Account&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;AccountAttribute&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.62&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.62&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;1.121&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016202808822&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016202808822__targetAPIVersion&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;targetAPIVersion&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.622&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.622&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;false&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016212812070&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016212812070__sendToProduction&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;sendToProduction&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.622&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.622&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;1&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016222821078&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016222821078__masterCardAuthReqType&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;masterCardAuthReqType&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:02.1&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:02.1&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;omni-config-7be5afc0-ef33-4702-8030-309ed9d96e5a&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;64fdfb99-d72c-4f1a-8c76-1286e98c25a8&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/Cybersource/account/base_test_account/upl&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101020992993739&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101020992993739__Certificate:DocumentId&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;Certificate:DocumentId&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:02.1&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:02.1&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;matest23.p12&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;64fdfb99-d72c-4f1a-8c76-1286e98c25a8&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/Cybersource/account/base_test_account/upl&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101021003008128&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101021003008128__Certificate:FileName&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;Certificate:FileName&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:02.109&quot;,</p>\n\n<p>&quot;AccountId&quot;: &quot;base_test_account&quot;,</p>\n\n<p>&quot;AccountEncryptedAttribute&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.623&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.623&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;merchantID&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;matest&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016232833162&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016232833162__merchantID&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_SECRET_KEY&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;a65902d2da39409c8dce6d90f893baf444be568999b84dd59d68c4eff631a2d3201bae1592c944b791df5282b22df1271b9a843023d64845ae6fe06f9e8bf4dcd563b63e83b246ee8d32076712263bac54eb2e9e6b07483b983234aafbba1659d113185fac1e47f09b9003fa8354aabed623489a18164589b72773c95327cb44&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242841331&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242841331__TOKEN_SECRET_KEY&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_ACCESS_KEY&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;ab2cafc1359e3e37bb07d4fbb0214b85&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242856920&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242856920__TOKEN_ACCESS_KEY&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_PROFILE_ID&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;3657AFC0-39D6-47C2-8F85-1253C5E524D9&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242867661&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242867661__TOKEN_PROFILE_ID&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;DSS_TOKEN_SECRET_KEY&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;16caff9274db4dd1b68748e27090751044bed96ce8464fc79c99c3d119805909ca3b6da5ff994fb28fbda6c54332f38d4744f945b8414ec2bc73769f4d585d310357b41376824d8c9200ca1cbea8e4dd3cd458831ed44e13bc4547dfd0b43da2fc22669e0a7349a2aa981111430762f2a9a5a8aec83341fdaa2289fd8f619067&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242878894&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242878894__DSS_TOKEN_SECRET_KEY&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;DSS_TOKEN_ACCESS_KEY&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;88adff272ed137de82dd70338068286a&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242888576&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242888576__DSS_TOKEN_ACCESS_KEY&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.624&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;ParentAccount&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849101016162793272</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;DSS_TOKEN_PROFILE_ID&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ValueDeprecated&quot;: &quot;dummy_value_do_not_use&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;3657AFC0-39D6-47C2-8F85-1253C5E524D9&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016242894276&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016242894276__DSS_TOKEN_PROFILE_ID&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.616&quot;,</p>\n\n<p>&quot;LocationId&quot;: null,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/Cybersource/account/base_test_account/upl&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;64fdfb99-d72c-4f1a-8c76-1286e98c25a8&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016162793272&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016162793272__base_test_account&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.655&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:02:12.772&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;GatewayId&quot;: &quot;Cybersource&quot;,</p>\n\n<p>&quot;GatewayAttribute&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;https://testsecureacceptance.cybersource.com/embedded/pay&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272901775&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272901775__TOKEN_END_POINT&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_END_POINT&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;./assets/static/CybersourceRequestGenerator.html&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272914230&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272914230__TOKEN_REQ_GEN_URL&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_REQ_GEN_URL&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;/customerengagementfacade/api/ds/payment/payment/secureacceptance/externalPaymentResponseProcessor&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272926439&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272926439__TOKEN_RES_GEN_URL&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_RES_GEN_URL&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;./assets/static/CybersourceRequestGenerator.html&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272939108&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272939108__DSS_TOKEN_REQ_GEN_URL&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;DSS_TOKEN_REQ_GEN_URL&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272948261&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272948261__DSS_TOKEN_RES_GEN_URL&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;DSS_TOKEN_RES_GEN_URL&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;700&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272956205&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272956205__TOKEN_WINDOW_HEIGHT&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_WINDOW_HEIGHT&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;770&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272966649&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272966649__TOKEN_WINDOW_WIDTH&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_WINDOW_WIDTH&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T06:35:01.627&quot;,</p>\n\n<p>&quot;Value&quot;: &quot;false&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;Process&quot;: &quot;/gateway/save&quot;,</p>\n\n<p>&quot;PK&quot;: &quot;6849101016272977288&quot;,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849101016272977288__TOKEN_USE_HTTPS&quot;,</p>\n\n<p>&quot;ParentGateway&quot;: {</p>\n\n<p>&quot;PK&quot;: 6849081327728561764</p>\n\n<p>},</p>\n\n<p>&quot;Name&quot;: &quot;TOKEN_USE_HTTPS&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;PaymentGatewayTemplate&quot;: [],</p>\n\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;b93914f5-c03a-4f10-85e8-17a52910a9fd&quot;,</p>\n\n<p>&quot;GatewayImplementation&quot;: [],</p>\n\n<p>&quot;IsBase&quot;: true,</p>\n\n<p>&quot;ProcessStuckTransaction&quot;: true,</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;6849081327728561764__Cybersource&quot;</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"82\">Upload the certificate.(matest.p12 from pament gatewaycomponent)</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"150\">Update Cybersource Gateway in the Payment Rule : Ex Visa</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"210\">Restart Payment gateway component</p>\r\n\t</li>\r\n</ol>\r\n\r\n<h4 data-renderer-start-pos=\"210\"><a name=\"need-additional-attributes-from-order-to-be-included-in-paybylink-email-outbouund-message\" id=\"need-additional-attributes-from-order-to-be-included-in-paybylink-email-outbouund-message\"></a>Need additional attributes from order to be included in PayByLink Email outbouund message:</h4>\r\n\r\n<p data-renderer-start-pos=\"210\">Add the required attributes to DSSPayByLink-OrderTemplate and restart the order component.</p>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"210\"><strong>Note: </strong>This step does not require any other configurations in Email Messages.&nbsp;</div>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/curbsidepickup\" hqid=\"2497831\">Curbside Pickup</a></li><li><a href=\"/cancellations\" hqid=\"2737255\">Order Cancellation</a></li><li><a href=\"/support-embedding-dss-features-in-client-website\" hqid=\"3531547\">Embedding Digital Self-Service on Retailer Website</a></li><li><a href=\"/nps-survey\" hqid=\"3574643\">NPS Survey</a></li><li><a href=\"/ship-it-instead\" hqid=\"2901230\">Ship it Instead</a></li><li><a href=\"/google-analytics-integration\" hqid=\"3428155\">Google Analytics Integration</a></li><li><a href=\"/extend-pickup-window\" hqid=\"2465752\">Extend Pickup Window</a></li><li><a href=\"/contactus\" hqid=\"2737272\">Contact Customer Service</a></li><li><a href=\"/troubleshootingdigitalselfservice\" hqid=\"2664209\">Troubleshooting Digital Self-Service</a></li><li><a href=\"/refundbylink\" hqid=\"3375739\">Refund by Link </a></li><li><a href=\"/return-tracking\" hqid=\"3039882\">Return Tracking</a></li><li><a href=\"/overview-authentication\" hqid=\"2465749\">Overview & Authentication</a></li><li><a href=\"/dss-localization-labels\" hqid=\"2553673\">Localization and Customizing Labels</a></li><li><a href=\"/returns-exchanges\" hqid=\"2465751\">Returns & Exchanges</a></li><li><a href=\"/ui-theming-customization\" hqid=\"2465753\">UI Theming and Customization</a></li><li><a href=\"/ui-resources-dss\" hqid=\"3101530\">UI Resources</a></li><li><a href=\"/manage-orders\" hqid=\"3128093\">Manage Orders</a></li><li><a href=\"/product-recommendations-in-dss\" hqid=\"3386994\">Product Recommendations in Digital Self-Service</a></li><li><a href=\"/item-substitution\" hqid=\"3531691\">Item Substitution</a></li><li><a href=\"/change-pickup-store\" hqid=\"3630338\">Change Pickup Store</a></li><li><a href=\"/store_short_options\" hqid=\"3631681\">Store Short Options</a></li><li><a href=\"/add-alternate-pickup\" hqid=\"3096821\">Add Alternate Pickup Person</a></li><li><a href=\"/shipment-tracking\" hqid=\"2465750\">Shipment Tracking</a></li><li><a href=\"/payment-resolution\" hqid=\"3097321\">Payment Resolution</a></li><li><a href=\"/kits_in_dss\" hqid=\"3630379\">Kits Support in Digital Self Service</a></li><li><a href=\"/change-shipping-address\" hqid=\"2953688\">Change Shipping Address</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 130139,
  "scraped_at": "2025-08-09T21:55:32.114877",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Digital Self-Service ››Pay by Link Pay by Link Pay by Link Flow - CSR Confirms OrderCustomer Service Pay by LinkExit Order From Pay by Link for Contact Center Agents Pay by Link - Outbound EmailsPay by Link - Outbound Text MessagesSending Outbound Text Messages with Twilio for U.S. Phone NumbersSending Outbound Text Messages with Twilio for Non-U.S. Phone NumbersPay by Link Reminder and Unconfirmed Orders CancellationAuto Confirm Pay by Link OrdersPay by Link ReminderPayByLink Unconfirmed Orders CancellationDigital Self-Service Pay by LinkDigital Self-Service Integration with Payment ProvidersPay by Link ExpiryMultiple Payment GatewaysConfigurationsOrder ConfigurationCustomer Service ConfigurationDigital Self-Service ConfigurationPayment Gateway ConfigurationCyberSource ConfigurationImplementing Hosted Checkout for Other Payment GatewaysRequest MappingAdyen ConfigurationPay by Link Email ConfigurationPay by Link Text Message ConfigurationMultiple Payment Gateways ConfigurationFeature ScopeServicesHow to TestImplementation FlavorsHow to Systematically Trigger Pay by Link MessagesTroubleshooting Cybersource certificate issueNeed additional attributes from order to be included in PayByLink Email outbouund message:Related Articles With Pay by Link, customers can input their credit card information using their own mobile device, tablet, or laptop, rather than providing their sensitive credit card information to contact center agents. This reduces the level of risk for customers who are placing orders or making order edits over the phone, while also providing opportunities to capture sales in channels such as chat or text. The Pay by Link feature also enables contact center agents who are working from home to capture sales in a secure manner. The Pay by Link flow is as follows: Customer calls the contact center (or chat, text, etc.) and chooses items to order When it's time to provide payment, the contact center agent clicks 'Send Email' or 'Send Text' to send the customer an email or text message The customer receives the email or text on their own device, and clicks a link to launch Digital Self-Service The customer enters their own credit or debit card information using Digital Self-Service and the third party payment gateway (CyberSource or Adyen) The customer lets the CSR know that payment has been added, and the CSR confirms the order The CSR remains on the phone with the customer throughout the process. See below for a more detailed diagram of the flow. Pay by Link is supported out of the box with CyberSource and Adyen. Other third party payment providers can be used if they provide hosted checkout capabilities. Pay by Link Flow - CSR Confirms Order Note: Refund to new credit card using pay by link is not supported. Customer Service Pay by Link In the contact center, the Pay by Link option can be enabled to be displayed as a payment option alongside credit card, gift card, and other payment types. Alternatively, Pay by Link can be enabled as the only payment option in scenarios where the contact center agents should not come into contact with sensitive payment data. On the Pay by Link panel, the full balance due is displayed. Neither the CSR nor the customer can edit this amount. After a CSR clicks 'Send Email' or 'Send Text', a green icon is displayed if the outbound Email Message json or Text Message json was published successfully. This green icon does not indicate successful delivery of the email or text, as delivery is not currently tracked. If the Email Message or Text Message json was not successfully published, then a red error icon or an error popup appears. The red error icon indicates that the message could not be posted to the queue, but the error popup indicates a data error (missing configuration, phone number, etc.). The customer receives an email or text and adds payment on their own device. When the customer has completed this, they verbally notify the CSR that payment has been added. The CSR clicks the 'Refresh' button on the Pay by Link panel, and the customer service page refreshes to show the newly-added payment and updated balance due. If the balance due is 0, then the CSR can proceed to confirm the order. When the CSR confirms the order, the open authorization is processed, and the CSR is notified if authorization fails. If authorization fails, the CSR can instruct the customer to use the same link to add a new credit card. Alternatively, CSR can send a new link to the customer, but the link will remain the same as the one previously sent. Within the Pay by Link panel, different methods of sending the link can be displayed: Send Email Send Text Send Email & Send Text Pay by Link is always displayed as the first payment option on the customer service 'Add Payment' page; This is not configurable. If additional payment types are supported, then they are listed below Pay by Link according to the configured sequence from the payment capture config. For instance, if credit card is configured with sequence '1' for assisted selling, then if Pay by Link is enabled, the 'Add Payment' page lists Pay by Link at the top, followed by credit card. There is currently not any extensibility on the Pay by Link panel. Therefore, adding custom buttons, links, or text is not supported. Exit Order From Pay by Link for Contact Center Agents Contact center agents can use the leave order button in the pay by link section for the pay by link fire and forget flow where the agent captures customer info while creating or updating an order, but the customer may say that they will pay later after using the link. In this scenario, there is no need for the agent to confirm the order and go till the last page to leave the order, they can just send the link and leave the order using the leave order button.  Agents can see the leave order button if they have the “customerservice::order::exitorderforpaybylink“ grant. Before leaving the order, retailers can choose to save the customer information captured as part of the flow. This can be done by enabling the register customer or update customer config in the contact center configuration. If both these configurations are disabled and the agent clicks on leave order in the pay by link section, they will leave the order and land on the customer dashboard. Having the register customer or update customer configuration enabled but closing it without saving the customer information will leave the order and land on the customer dashboard. In scenarios where the agent sends the pay by link to the customer and the customer decides to pay later, if retailers wish for these orders to be auto confirmed automatically when the payment is made by the customers , they can make use of the Pay by Link Auto Confirm Configuration. Contact center agents can use the Copy URL button in the pay by link section to “copy” the Digital Self-Service Pay by Link URL to their clipboard, which can then be used to paste the URL in the chat window (or other 3rd party app) that the agent is using to have a conversation with the customer so that the customer can pay for the order using the link. The Digital Self-Service PayByLink URL will contain the domain name based on the order.selfServieHostName configured in KV store. To include the domain name, configure the order.selfServieHostName in the KV store by working with services. The Copy URL button is protected by the “customerservice::order::copypaybylinkurl“ grant Note: Copy URL and leave order buttons are not applicable for return flows Pay by Link - Outbound Emails When the CSR clicks 'Send Email', the customer receives an email with the link to add payment in Digital Self-Service. To send this email, an outbound Email Message json is published when the CSR clicks 'Send Email'. The Email Message json includes the Digital Self-Service Pay By Link URL and basic order information including customer email, name, items, etc. Additional order fields can be included by using template configuration (see here for details). This Email Message json can be consumed in a few ways to generate the email: The Email Message json can be consumed by a third party email provider, who forms an email and delivers to the customer The Email Message json can be consumed by the Active® Omni email component, which can form the email body (HTML), and publish the HTML to a third party email provider who delivers the email as-is See here for more details on the supported email delivery options. The email address input by the customer updates the CustomerEmail field on the order. Pay by Link - Outbound Text Messages When the CSR clicks 'Send Text', the customer receives an text with the link (using a short URL) to add payment in Digital Self-Service. To send this text, an outbound Text Message json is published. The Text Message json includes the Digital Self-Service Pay By Link short URL and basic order information. To send text messages, two integrations are required: A text provider; Twilio is supported out of the box (using a retailer's Twilio account) A URL shortener, to provide a concise URL in the text message; Bitly is supported out of the box (using a retailer's Bitly account) Details on Text Message Configurations can be found here. Sending Outbound Text Messages with Twilio for U.S. Phone Numbers Sending texts to customers with U.S. phone numbers (country code 1) is available without mapping any additional country code phone prefix. If the customer's country code prefix is null on the order (in the customerCommPref), the country code is set to 1 (U.S.) when integrating with Twilio. For U.S. phone numbers, only the Order.CustomerPhone field needs to be populated (and it does not need any country code prefix - just the 10-digit phone number). Sending Outbound Text Messages with Twilio for Non-U.S. Phone Numbers Sending texts to customers with non-U.S. phone numbers requires the country code phone prefix to be saved on the customer record (for registered customers) or the order (for unregistered customers). For registered customers, the customer's country code must be populated on the customer in the CustomerCommPref entity for interaction type 'TextMessage'. For example, to send a text to a customer in France (country code +33), the customer needs to have: \"CustomerCommPref\": [{ \"InteractionType\": { \"InteractionTypeId\": \"TextMessage\" }, \"OptInStatus\": { \"OptInStatusId\": \"OptIn\" }, \"PreferenceType\": { \"PreferenceTypeId\": \"All\" }, \"CountryCode\": \"33\", \"ContactValue\": \"(988) 09 51 45 76 91\" }] When an order is created for a registered customer (with order.customerId populated), if the order.customerPhone matches the phone number in the contact value in the customerCommPref for interaction type 'TextMessage', then the customerCommPref is copied from the customer and stamped on the order. If order.customerPhone is null or does not match the phone number in customerCommPref, then the customerCommPref is not copied to the order, and Twilio cannot send texts to this customer. For unregistered customers, the customer's country code must be populated on the order in the CustomerCommPref entity for interaction type 'TextMessage' (see the same json above). Populating the customer's country code phone prefix is currently not supported for customers created in the contact center. Prefixing the order.customerPhone is not a valid workaround, as the country code must be saved in a separate field; It cannot simply be appended to the customerPhone on the order header. The below mentioned property has to be configured with a common phone number for sending Pay by Link text messages. Key Value Property Name Example Description Mandatory Component Path order.sms.from.phone 14092481501 A common phone number provided by third party text message provider for sending Order Confirmation text messages Yes Order CONFIG/COM-MANH-CP-ORDER/ See here for more details on text message integration. Pay by Link Reminder and Unconfirmed Orders Cancellation When a customer receives a Pay by Link email or text to make a payment on their device, and if the contact center agent needs to end the call either because the customer has dropped off or because the customer wants to pay later, the contact center agent can gracefully exit by clicking the Leave Order button in the PayByLink section on the CSR payment screen. This allows the contact center agent to continue assisting other customers while keeping the payment option available for the customer to complete the payment whenever convenient. Auto Confirm Pay by Link Orders All the Pay by Link orders will be auto confirmed after a configured number of minutes from the time pay by link was sent provided the payment is added. If the payment is not added, the order will remain unconfirmed. Retailers can change this threshold value based on the average time it takes for a CSR to confirm a pay by link order after the payment is added. By default, orders won't be auto-confirmed if there is no value defined. Refer here to configure the time in minutes, after which the pay by Link orders will be auto-confirmed. Pay by Link Reminder In the event that the system has not received payment from the customer within the configured number of hours, the system sends the customer a reminder email or text. For example: The reminder threshold (PayByLink Reminder Threshold) is configured as 2 hours. If the PayByLink was sent to the customer at 1:00 p.m. and the customer delays adding payment, the reminder notification via email/text will be sent to the customer by 3:00 p.m. Refer here to configure the reminder threshold value in hours PayByLink Unconfirmed Orders Cancellation To exclude Pay by Link unconfirmed orders that are awaiting payment from getting cancelled by the agent or scheduler, add the additional condition 'payByLinkStatus=PaymentRequested' to the cancelation agent query. To cancel Pay by Link unconfirmed orders, set this flag to 'PaymentNotReceived'. By default, the 'payByLinkStatus' flag is set to 'Null' and gets updated to 'PaymentRequested' after the Pay by Link is sent. The value is updated to 'PaymentReceived' - If the payment is received from the customer. 'PaymentNotReceived' - If the payment is not received from the customer within the configured number of hours. For example: Consider the cancelation threshold is configured as 5 hours. If the Pay by Link was sent to the customer at 1:00 p.m. and if payment is not added by the customer before 6:00 p.m., the order will become eligible for cancelation. If the threshold is not configured, then the orders are eligible for cancellation based on the Pay by Link expiry date. Refer here to configure the cancelation threshold value in hours Note: In case a retailer wants to use this feature and is currently cancelling unconfirmed Pay by Link orders with order milestone, it is recommended to use an agent or scheduler with 'payByLinkStatus' flag set to false in the query. Unconfirmed PayByLink Orders Cancel Agent Job{ \"IsDisabled\": false, \"IsAdHoc\": false, \"StartDelay\": null, \"ExecutionOffsetWindow\": null, \"TriggerKey\": \"cancelUnconfirmedPayByLinkOrderScheduleTrigger\", \"TimeZone\": \"UTC\", \"JobTypeId\": \"cancelUnconfirmedPayByLinkOrderJob\", \"CronExpression\": \"0 0 0/2 1/1 * ? *\", \"JobParameters\": [ { \"InputValue\": \"(IsConfirmed = false and PayByLinkStatus = 'PaymentNotReceived')\", \"InputKey\": \"Query\" }, { \"InputValue\": \"Rest\", \"InputKey\": \"QueryType\" }, { \"InputValue\": \"Order\", \"InputKey\": \"Entity\" }, { \"InputValue\": \"CancelUnconfirmedOrderHandler\", \"InputKey\": \"HandlerName\" }, { \"InputValue\": \"OrderIdAgentTemplate\", \"InputKey\": \"Template\" }, { \"InputValue\": \"cancelUnconfirmedPayByLinkOrderJob\", \"InputKey\": \"MessageType\" }, { \"InputValue\": \"DEFINED_MESSAGE_TYPE\", \"InputKey\": \"MessageTypeMode\" } ], \"JobScheduleId\": \"cancelUnconfirmedPayByLinkOrderSchedule\", \"RepeatInterval\": null } Digital Self-Service Pay by Link In the Digital Self-Service Pay by Link page, the order total, summary amounts, existing payment methods, and balance due are displayed along with the items being ordered and order totals. For example, if a CSR added a gift card and then sent the customer a link to pay for the remaining balance, then the customer would see the gift card applied on the Digital Self-Service Pay by Link page. Payment methods which are suspended are not displayed. The Order Summary section displays the Order Subtotal and aggregate charge (labeled as 'Shipping'), discount, and tax amounts. If configured, the Pay By Link page also allows the user to select from multiple payment methods to make the payment. Each payment method can be configured with different payment gateway, if needed.  When the customer selects 'Pay Now' on the Digital Self-Service page, the browser redirects to the third party payment page. The customer's shipping address is used to pre-populate the billing address, which the customer can optionally edit. The shipping address is picked from the first order line, so if the first line is buy online, pick up in store or does not have an address, then the customer needs to enter their billing address. Currently, the customer cannot edit the amount to be charged. The full balance due is attempted for authorization. Note : Instructions to enable different payment methods and configuring a payment gateway for the same can be found in the Multiple Payment Gateways Configuration section. Digital Self-Service Integration with Payment Providers Out of the box integration with CyberSource and Adyen is provided. CyberSource provides some UI themeing capabilities, like changing the logo and background color. Refer to the CyberSource Secure Acceptance documentation for details. If the contact center is already using a secure hosted checkout with a different payment provider (e.g. Adyen), then the integration may be similar to contact center, but separate effort is required to integrate the Digital Self-Service Pay by Link page with the Adyen hosted checkout. The contact center integration cannot be reused as-is. There are a few key differences between the Digital Self-Service Pay by Link hosted checkout and the contact center hosted checkout: In Digital Self-Service, the customer needs to add their billing address in the third party payment page. In the contact center, this is done on the contact center page before launching the third party page, so only the credit card details are captured in the third party page. Digital Self-Service redirects to the hosted checkout page, and then back to Digital Self-Service in the same browser window, so there is no popup window. In contact center, there is a popup window. Pay by Link Expiry The Digital Self-Service Pay by Link page expires after a period of time to remain secure. Upon loading the Pay by Link page, Digital Self-Service checks a field in the order entity (SelfServiceAttribute.PayByLinkExpiryDate), and if this date is in the past, the customer is not able to add payment. A 'page expired' message is displayed and the customer is not able to add payment or view order details. If the expiry date is null on the order, then the Digital Self-Service page displays the expired state. The expiry date is populated when the 'Send Email' or 'Send Text' buttons are clicked in the contact center. If sending the customer links to launch the Digital Self-Service Pay by Link page from channels other than contact center, then call this API to ensure the expiry date is populated: /order/api/order/order/payByLink The expiry date is saved in the database in UTC. When the UI loads, the expiry date is converted to the user's local time zone and compared with the current date/time. Note: The expiry date is calculated and populated when either the 'Pay By Link Send Email' or 'Send Text' buttons are clicked in the contact center, or when the pay by link is triggered upon settlement retry after the attempts are exhausted. It cannot be calculated or populated manually or by any other third party service provider. The pay by link expiry date will be determined based on the order.payByLink.validity consul property configuration. Work with the service team to configure the same as per your requirements. Multiple Payment Gateways The Digital Self-Service Pay by Link page allows user to select from different payment methods, if configured. For each of the payment methods, retailers can configure a different payment gateway, if needed. Note : Instructions to enable different payment methods and configuring a payment gateway for the same can be found in the Multiple Payment Gateways Configuration section. Configurations Order Configuration To configure the valid time duration for the Digital Self-Service Pay by Link page, work with services to specify the expiry hours in the order.payByLink.validity in the consul server (order component). For example, if you want the pay by link to be valid for 2 days from the time it is generated, enter 48 hours in the configuration. Regardless of what is entered in the configuration, the application will consider a hard minimum of 24 hours and maximum of 168 hours (7 days). Any value less than 24 hours will be considered 24 hours, and any value more than 168 hours will be considered 168 hours. Note that the application will not throw any errors if values less or greater than these are entered, but internally these limits will be enforced. The configurations related to Pay by Link auto confirmation, reminder threshold, and unconfirmed order cancel threshold can be set on Order Paraments UI. Customer Service Configuration To enable the Pay by Link panel in customer service, set the following parameters to true in the Payment Parameters UI: Enable 'Send Email' for Pay by Link: If set to true, then the text box to capture the customer's email and the 'Send Email' button are displayed. The email address is pre-populated with the customer email which is saved on the order. Enable 'Send Text' for Pay by Link: If set to true, then the text box to capture the customer's phone number and the 'Send Text' button are displayed. The phone number is pre-populated with the customer phone which is saved on the order. If either of these values are set to true, then the Pay by Link panel is displayed. If both of these values are set to false, then the Pay by Link panel is hidden. The Pay by Link panel is supported on the Create Order and Edit Order UIs as well as the Create and Edit Exchange Order UIs. This single set of configurations control whether Pay By Link is displayed for both new orders and exchange orders. Digital Self-Service Configuration The following configuration is required to enable Pay by Link in Digital Self-Service: Add a payment rule with Payment Type = 'Credit Card' and Card Type = null. Because Digital Self-Service launches the third party payment gateway before the card type is selected, this rule must have null card type. The card type selection is completed on the third party payment page. For this payment rule, configure the third party gateway being used for Pay by Link (e.g. CyberSource or Adyen). Digital Self-Service uses this configuration to redirect to the third party gateway when the customer presses 'Pay Now'. Update the UI styling to reflect your brand's logo, colors, and font (details here). Note that this is only required once per deployment, so if this has been completed for other Digital Self-Service features then it does not need to be done again. Review the UI labels and error messages for each supported locale/language, and work with services to update these as required. Payment Gateway Configuration CyberSource Configuration If CyberSource is being used in the contact center, then a new profile needs to be created for Digital Self-Service. This is because Digital Self-Service requires capturing the billing address in the hosted checkout page, while contact center does not. After the new CyberSource profile is added in the CyberSource portal, follow the below steps to add your Digital Self-Service CyberSource profile details to the existing CyberSource payment gateway entry. See the diagram below for an illustration of the CyberSource integration. Step 1: Create your new Digital Self-Service-specific CyberSource merchant profile in the CyberSource portal. Step 2: Add the details of your Digital Self-Service CyberSource account to the existing CyberSource gateway entry. This can be done in the Payment Gateway UI or via API (/payment/api/payment/gateway/save). { \"GatewayId\": \"Cybersource\", \"IsBase\": true, \"GatewayEncryptedAttribute\": [], \"GatewayAttribute\": [ { \"Name\": \"TOKEN_END_POINT\", \"Value\": \"https://testsecureacceptance.cybersource.com/embedded/pay\" }, { \"Name\": \"DSS_TOKEN_REQ_GEN_URL\", \"Value\": \"./assets/static/CybersourceRequestGenerator.html\" }, { \"Name\": \"DSS_TOKEN_RES_GEN_URL\", \"Value\": \"/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor\" } ], \"Account\": [ { \"AccountId\": \"test_account\", \"LocationId\": null, \"AccountEncryptedAttribute\": [ { \"Name\": \"merchantID\", \"Value\": \"{{merchantId}}\" }, { \"Name\": \"Digital Self-Service_TOKEN_SECRET_KEY\", \"Value\": \"{{secretKey}}\" }, { \"Name\": \"Digital Self-Service_TOKEN_ACCESS_KEY\", \"Value\": \"{{accessKey}}\" }, { \"Name\": \"Digital Self-Service_TOKEN_PROFILE_ID\", \"Value\": \"{{profileId}}\" } ], \"AccountAttribute\": [ { \"Name\": \"targetAPIVersion\", \"Value\": \"1.121\" }, { \"Name\": \"sendToProduction\", \"Value\": \"false\" }, { \"Name\": \"masterCardAuthReqType\", \"Value\": \"1\" } ] } ] } Step 3 (Not required if CyberSource is already used in the contact center): Import the Cybersource certificate for the Digital Self-Service profile via API (/payment/api/payment/gateway/Cybersource/account/base_test_account/upload). For example, if using Postman, select \"form-data\" on the Body tab, in the \"key\" field type \"file\", and select \"file\" from the dropdown. Next \"Choose files\" and select the certificate file to upload. Note: The CyberSource hosted checkout pages can be customized with a logo and colors to match your branding. See CyberSource documentation for details. Implementing Hosted Checkout for Other Payment Gateways If a third party other than CyberSource is used, then the below steps explain what configuration and integration points are required. Detailed examples are shown for integrating with Adyen's hosted checkout. The below diagram illustrates the touch points for integrating Digital Self-Service with CyberSource's hosted checkout. To use a different third party, steps 2-4 need to be customized. Below we'll take Adyen as an example and explain how to modify steps 2-4 to integrate Digital Self-Serivce with Adyen. Step 1: Configure a  router entry for custom HPP html file (example: PBLAdyenPageGenerator.html) manh.command-router.commands.adyenDSS.commandPath=/paymentgateway/PBLAdyenPageGenerator.html manh.command-router.commands.adyenDSS.targetComponent=com-manh-cp-ext-adyen manh.command-router.commands.adyenDSS.targetEndpoint=/PBLAdyenPageGenerator.html Step 2: Configure a payment gateway First, configure a payment gateway entry for Adyen. This can be created in the payment gateway UI or using the below JSON with a POST call to /payment/api/payment/gateway/save. Adding attributes to a gateway configuration allows us to use values specific to the gateway, such as account information, customization options, and what endpoints to call to access the hosted checkout. Additional fields may be added for storing gateway-related values. Attribute Name Description Comments DSS_TOKEN_REQ_GEN_URL URL which base will call along with url params having payment info and billing address. Example: /api/selfservice/paymentgateway/PBLAdyenPageGenerator.html DSS_TOKEN_RES_GEN_URL Parameter to define the callback rest end point called by 3rd Party Payment Gateway TOKEN_END_POINT Parameter to define the hosted checkout UI URL entry point to send request Adyen provides single-page and multi-page options for the URL HMAC_KEY HMAC key used to sign data to verify values have not been modified. (Value found in Adyen Skin) SKIN_CODE Customizable Skin in Adyen account. Determines settings for values such as payment types, custom fields, etc. MERCHANT_ACCOUNT Merchant account linked to Adyen Account. Below is a sample payment gateway JSON: { \"GatewayId\": \"Adyen\", \"IsBase\": true, \"GatewayEncryptedAttribute\": [], \"GatewayAttribute\": [ { \"Name\": \"TOKEN_END_POINT\", \"Value\": \"https://test.adyen.com/hpp/tokenonepage.shtml\" }, { \"Name\": \"DSS_TOKEN_REQ_GEN_URL\", \"Value\": \"./assets/static/AdyenPaymentRequestGenerator.html\" }, { \"Name\": \"TOKEN_RES_GEN_URL\", \"Value\": \"/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor\" } ], \"Account\": [ { \"AccountId\": \"ManhattanAssociates771\", \"LocationId\": null, \"AccountEncryptedAttribute\": [ { \"Name\": \"MERCHANT_ACCOUNT\", \"Value\": \"MANHPBL\" }, { \"Name\": \"HMAC_KEY\", \"Value\": \"{HMACKEY}\" }, { \"Name\": \"SKIN_CODE\", \"Value\": \"NHoeAntc\" }, ], \"AccountAttribute\": [ ] } ] } Step 3: Configure a payment rule In order for Digital Self-Service to know what gateway is being used, a payment rule is required. Configure a payment rule in the Payment Rule UI with ‘Credit Card’ as the Payment Type. Card Type and Order Type should be null. Lastly, the payment gateway needs to be selected. Step 4: Customize the request to the hosted checkout In order to access the third party hosted checkout UI, a request needs to formed. On click of the ‘Pay Now’ button in Digital Self-Service, the given HTML URL from DSS_TOKEN_REQ_GEN_URL will be rendered. This request generator HTML will retrieve the payment parameters from the UI and apply backend processing before sending to the hosted checkout UI. Backend processing may include signing of fields, adding account details from payment gateway, adding return URL, custom logic based on source_channel, etc. Request Mapping Below is a table with fields being sent to DSS_TOKEN_REQ_GEN_URL. Field Active® Omni Field bill_to_forename ShipToAddress.Address.FirstName bill_to_surname ShipToAddress.Address.LastName bill_to_address_line1 ShipToAddress.Address.Address1 bill_to_address_line2 ShipToAddress.Address.Address2 bill_to_address_city ShipToAddress.City bill_to_address_postal_code ShipToAddress.Address.PostalCode bill_to_address_state ShipToAddress.Address.State bill_to_address_country ShipToAddress.Address.Country bill_to_email ShipToAddress.Address.Email amount Result of Balance Due API reference_number Order.OrderId currency Order.CurrencyCode locale 'en’ if null on the order payment_method 'card' gateway_id source_channel “DSS” or “CallCenter” - determines what processing is needed based on source After applying backend processing on UI fields, a form is submitted to the specified TOKEN_END_POINT, which will open the hosted checkout with Adyen. A sampling of the form format can be found in Adyen's payment request documentation. HMAC encryption should be used to generate the merchantSig as part of request to avoid data tampering. Below is an example of the requestGeneratorHtml specified by DSS_TOKEN_REQ_GEN_URL. <html> <head> <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"> </script> <script> var postParams; var xref = \"\"; var winLocation = ''; var organization = ''; $(document).ready(function(){ winLocation = window.location.origin; var ca = document.cookie.split(';'); for (var i = 0; i < ca.length; i++) { var c = ca[i]; while (c.charAt(0) == ' ') { c = c.substring(1); } if (c.indexOf('XSRF-TOKEN') == 0) { xref = c.substring('XSRF-TOKEN'.length + 1, c.length); } } var addressModel = parseQuery(window.location.search); $.ajax({ type : \"GET\", contentType : \"application/json\", data : { \"orderId\" : addressModel.reference_number, \"billToEmail\" : addressModel.bill_to_email, \"Amount\" : addressModel.amount, \"currencyCode\" : addressModel.currency, \"gateway_info_id\" : addressModel.gateway_info_id, \"bill_to_forename\" : addressModel.bill_to_forename, \"bill_to_surname\" : addressModel.bill_to_surname, \"bill_to_address_line1\" : addressModel.bill_to_address_line1, \"bill_to_address_line2\" : addressModel.bill_to_address_line2, \"bill_to_address_line3\" : addressModel.bill_to_address_line3, \"bill_to_address_city\" : addressModel.bill_to_address_city, \"bill_to_address_postal_code\" : addressModel.bill_to_address_postal_code, \"bill_to_address_state\" : addressModel.bill_to_address_state, \"bill_to_address_country\" : addressModel.bill_to_address_country, \"source_channel\": \"DSS\", \"gateway_id\": addressModel.gateway_id, \"winLocation\" : window.location.origin, }, url : window.location.origin + \"/selfservice/ui/api/selfservice/paymentgateway/getAdyenPostParameters?orderId=\" + addressModel.reference_number + \"&orgId=\" + addressModel.orgId + \"&token=\" + addressModel.orderToken, headers : { 'Accept' : 'application/json', 'Content-Type' : 'application/json', 'X-XSRF-TOKEN' : xref, }, success : function(data) { console.log(data); post(data, 'POST'); }, error : function() { alert('Error loading REST API'); } }); }); function parseQuery(qstr) { var query = {}; var a = (qstr[0] === '?' ? qstr.substr(1) : qstr).split('&'); for (var i = 0; i < a.length; i++) { var b = a[i].split('='); query[decodeURIComponent(b[0])] = decodeURIComponent(b[1] || ''); } return query; } function getURLParameter(sParam) { var paramValue =''; var sPageURL = window.location.search.substring(1); var sURLVariables = sPageURL.split('&'); for (var i = 0; i < sURLVariables.length; i++) { var sParameterName = sURLVariables[i].split('='); if (sParameterName[0] == sParam) { paramValue = decodeURIComponent(sParameterName[1] || ''); } } return paramValue; } function post(restResp, method) { params = restResp.adyenReqParams; var ca = document.cookie.split(';'); var form = document.createElement(\"form\"); form.setAttribute(\"method\", method); form.setAttribute(\"action\", restResp.tokenEndPoint); var paramArray = params.split(';;'); var arrayLength = paramArray.length; for (var i = 0; i < arrayLength; i++) { var keyValuePair = paramArray[i].split('::'); var key = keyValuePair[0]; var value = keyValuePair[1]; var prefix =\"\"; var hiddenField = document.createElement(\"input\"); hiddenField.setAttribute(\"type\", \"hidden\"); hiddenField.setAttribute(\"name\", prefix.concat(key)); hiddenField.setAttribute(\"value\", value); form.appendChild(hiddenField); } document.body.appendChild(form); form.submit(); } </script> </head> <body> </body> </html> Step 5: Process the hosted checkout response After completion of payment capture in the hosted checkout, a response processor endpoint needs to be hit. The purpose of this endpoint is to: Process payment info and save in AO Return to DSS UI after completion The value for DSS_TOKEN_RES_GEN_URL can be used, pointing to a custom endpoint. Alternatively, if the base API endpoint is called, the user exit PaymentGateway::Payment::UserExit::ProcessHostedCheckoutResponse should be implemented. In order for this endpoint to be hit, the resUrl field must be sent in the Adyen HPP payment request. As part of response from Adyen payment, a merchant signature will be included. HMAC encryption should be used to validate that the value is the same as the one calculated during the initial request value. After verifying the signature matches, we can return back to the DSS UI. In the base implementation, we send back a form to open the DSS UI, redirecting to the confirm page with the order details. For example: <html> <body onload=\"document.frm1.submit()\"> <form action=\"/selfservice/ui/app/paybylink/confirm\" name=\"frm1\"> <input type=\"hidden\" name=\"orderId\" value=\"{0}\" /> <input type=\"hidden\" name=\"orgId\" value=\"{1}\" /> <input type=\"hidden\" name=\"token\" value=\"{2}\" /> </form> </body> </html> This form would redirect to: {{HOST}/selfservice/ui/app/paybylink/confirm?orderId=OM-48595-20200922135657&orgId=globalorg-us&token=Q4L750Nwdhl5x7NmgTwL Step 6: Additional Webhooks (Optional) The response from Adyen does not include payment details required to save the payment header in Active® Omni. We must use the notification webhook in order to get this data. This step is specific to Adyen, but the same approach can be used for third party gateways who have similar integration requirements. Adyen uses notification webhooks to asynchronously send back payment data. As such, there will be some delay between returning to DSS UI and the saving of the payment. We will need to configure some settings to allow additional fields to sent as part of notification: Include Card Holder Include card info for recurring contract notifications Include Avs Data/ Billing address For saving payment info, we will be checking if the value is \"eventCode\":\"AUTHORISATION\". Based on this, we can extract the necessary info from the notification and save as a payment header to the corresponding order. Sample notification data from Adyen webhook: { \"live\":\"false\", \"notificationItems\":[ { \"NotificationRequestItem\":{ \"additionalData\":{ \" NAME1 \":\"VALUE1\", \"authCode\":\"1234\", \"cardSummary\":\"7777\", \"cardHolderName\":\"J. De Tester\", \"billingAddress.houseNumberOrName\":\"21 - 5\", \"totalFraudScore\":\"10\", \"NAME2\":\"  VALUE2  \", \"billingAddress.postalCode\":\"1012RC\", \"expiryDate\":\"12\\/2012\", \"billingAddress.street\":\"Nieuwezijds Voorburgwal\", \"billingAddress.city\":\"Amsterdam\", \"billingAddress.country\":\"NL\", \"fraudCheck-6-ShopperIpUsage\":\"10\" }, \"amount\":{ \"currency\":\"EUR\", \"value\":10100 }, \"eventCode\":\"AUTHORISATION\", \"eventDate\":\"2020-09-23T02:36:20+02:00\", \"merchantAccountCode\":\"MANHPBL\", \"merchantReference\":\"8313842560770001\", \"operations\":[ \"CANCEL\", \"CAPTURE\", \"REFUND\" ], \"paymentMethod\":\"visa\", \"pspReference\":\"test_AUTHORISATION_1\", \"reason\":\"1234:7777:12\\/2012\", \"success\":\"true\" } } ] } Adyen Configuration If Adyen is being used as a payment gateway in Digital Self-Service, then follow the steps below to set it up. Step 1: Configure Adyen Payment Gateway. Refer to Payment Gateway Configuration Step 2: Configure Adyen Credentials. Refer to Adyen Credential Management and Adyen Client Authentication Pay by Link Email Configuration To enable the Pay by Link emails to be delivered via the Active® Omni email component for testing purposes, ask services to set the consul server property config/com-manh-cp-email,om-side/email.publishEmailPayload = false. If this is set to true, then the email body payload is published to a queue (to be delivered by a third party email provider). If it's set to false, then the email should be delivered by Active® Omni. With the help of services, populate the consul server property order.selfServiceHostName with the host information for Digital-Self Service in Order Component (path: CONFIG/COM-MANH-CP-ORDER,OM-SIDE/). This ensures that the Digital Self-Service URL is ready to be included in emails or text messages. In the order component consul server config, add a value such as \"https://abc.manh.com\" for the selfServiceHostName property. Be sure to configure this with \"https:\" not \"http:\". If this is already completed for other Digital Self-Service flows, it does not need to be done again. Note: No Order Configuration changes are required to generate the Pay by Link emails or texts. The event is fired when the contact center user clicks 'Send Email' or 'Send Text', which triggers the outbound Email Message or Text Message. If using the Pay by Link email template in Active® Omni, then modify the HTML as needed to suit the retailer's brand. See below for a sample Pay by Link email template. { \"GroupName\": \"EmailMessageService\", \"LogFailure\": true, \"Description\": \"Sample email generated to request the customer adds payment via Digital Self-Service. This template can be used for reference purposes only\", \"ReplyToName\": null, \"Name\": \"Sample pay by link template\", \"ReplyTo\": \"cpadmin@manh.com\", \"FromName\": \"Sophia's\", \"ConditionExpression\": \"EmailMessageType contains \\\"PayByLink\\\"\", \"Body\": \"<!DOCTYPE html PUBLIC \\\"-\\/\\/W3C\\/\\/DTD XHTML 1.0 Strict\\/\\/EN\\\" \\\"http:\\/\\/www.w3.org\\/TR\\/xhtml1\\/DTD\\/xhtml1-strict.dtd\\\">\\r\\n<html xmlns=\\\"http:\\/\\/www.w3.org\\/1999\\/xhtml\\\">\\r\\n\\r\\n<head>\\r\\n <meta http-equiv=\\\"Content-Type\\\" content=\\\"text\\/html; charset=utf-8\\\" \\/>\\r\\n <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" \\/>\\r\\n <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\r\\n <title>Order Confirmed Template<\\/title>\\r\\n <style type=\\\"text\\/css\\\">\\r\\n\\r\\n \\/*Override Gmail link styling, which turns all link text blue *\\/\\r\\n u + #body a {\\r\\n color: inherit;\\r\\n text-decoration: none;\\r\\n font-size: inherit;\\r\\n font-family: inherit;\\r\\n font-weight: inherit;\\r\\n line-height: inherit;\\r\\n }\\r\\n \\r\\n #outlook a {\\r\\n padding: 0;\\r\\n }\\r\\n\\r\\n \\/* Force Outlook to provide a \\\"view in browser\\\" menu link. *\\/\\r\\n body {\\r\\n font-family: \\\"Helvetica\\\";\\r\\n width: 100% !important;\\r\\n -webkit-text-size-adjust: 100%;\\r\\n -ms-text-size-adjust: 100%;\\r\\n margin: 0;\\r\\n padding: 0;\\r\\n }\\r\\n\\r\\n.header {\\r\\n padding: 1px;\\r\\n text-align: center;\\r\\n background: #982741;\\r\\n color: white;\\r\\n font-size: 14px;\\r\\n}\\r\\n\\r\\n \\/* Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design. *\\/\\r\\n .ExternalClass {\\r\\n width: 100%;\\r\\n }\\r\\n\\r\\n \\/* Force Hotmail to display emails at full width *\\/\\r\\n .ExternalClass,\\r\\n .ExternalClass p,\\r\\n .ExternalClass span,\\r\\n .ExternalClass font,\\r\\n .ExternalClass td,\\r\\n .ExternalClass div {\\r\\n line-height: 100%;\\r\\n color: #000000;\\r\\n font-family: \\\"Helvetica\\\";\\r\\n }\\r\\n\\r\\n \\/* Force Hotmail to display normal line spacing.*\\/\\r\\n #backgroundTable {\\r\\n margin: 0;\\r\\n padding: 0;\\r\\n width: 100% !important;\\r\\n line-height: 100% !important;\\r\\n }\\r\\n\\r\\n img {\\r\\n outline: none;\\r\\n text-decoration: none;\\r\\n border: none;\\r\\n -ms-interpolation-mode: bicubic;\\r\\n }\\r\\n\\r\\n a img {\\r\\n border: none;\\r\\n }\\r\\n\\r\\n .image_fix {\\r\\n display: block;\\r\\n }\\r\\n\\r\\n p {\\r\\n color: #000000;\\r\\n font-family: \\\"Helvetica\\\";\\r\\n margin: 0px 0px !important;\\r\\n }\\r\\n\\r\\n table td {\\r\\n border-collapse: collapse;\\r\\n }\\r\\n\\r\\n table {\\r\\n border-collapse: collapse;\\r\\n mso-table-lspace: 0pt;\\r\\n mso-table-rspace: 0pt;\\r\\n }\\r\\n\\r\\n a {\\r\\n font-family: \\\"Helvetica\\\";\\r\\n color: #000000;\\r\\n text-decoration: none;\\r\\n text-decoration: none !important;\\r\\n }\\r\\n\\r\\n .PrimaryBgColor {\\r\\n background-color: #982741;\\r\\n }\\r\\n\\r\\n .orderNumber {\\r\\n font-size: 12px;\\r\\n color: #000000;\\r\\n }\\r\\n\\r\\n .span {\\r\\n color: #000000;\\r\\n }\\r\\n\\r\\n .h3 {\\r\\n color: #000000;\\r\\n }\\r\\n\\r\\n .emailActionBttn,\\r\\n .emailActionBttn:link,\\r\\n .emailActionBttn:visited,\\r\\n .emailActionBttn:active {\\r\\n text-decoration: none;\\r\\n text-align: center;\\r\\n padding: 0.5em 1em;\\r\\n font-size: 18px;\\r\\n color: #FFFFFF;\\r\\n background-color: #982741;\\r\\n border-color: #982741;\\r\\n border: 2px solid;\\r\\n border-radius: 4px;\\r\\n }\\r\\n\\r\\n .emailActionBttn:hover {\\r\\n background-color: #FFFFFF;\\r\\n border-color: #982741;\\r\\n color: #982741;\\r\\n }\\r\\n\\r\\n .productImg {\\r\\n margin-right: 2rem;\\r\\n width: 125px;\\r\\n height: auto;\\r\\n object-fit: cover;\\r\\n }\\r\\n\\r\\n .flexContainer {\\r\\n display: flex;\\r\\n align-items: center;\\r\\n width: 400px;\\r\\n }\\r\\n\\r\\n .flexContainer2 {\\r\\n display: flex;\\r\\n align-items: center;\\r\\n vertical-align: middle;\\r\\n width: 400px;\\r\\n }\\r\\n\\r\\n .price {\\r\\n margin-left: 6rem;\\r\\n }\\r\\n\\r\\n .sectionHeader {\\r\\n line-height: 2;\\r\\n font-family: Helvetica;\\r\\n color: #ffffff;\\r\\n font-size: 16px;\\r\\n }\\r\\n\\r\\n \\/*STYLES*\\/\\r\\n table[class=full] {\\r\\n width: 100%;\\r\\n clear: both;\\r\\n }\\r\\n\\r\\n .header {\\r\\n margin-top: 5%;\\r\\n margin-bottom: 5%;\\r\\n font-family: \\\"Helvetica\\\";\\r\\n }\\r\\n\\r\\n .displayValue {\\r\\n white-space: nowrap;\\r\\n text-overflow: ellipsis;\\r\\n overflow: hidden;\\r\\n width: 123px;\\r\\n display: inline-block;\\r\\n vertical-align: bottom;\\r\\n line-height: 37px;\\r\\n font-family: Helvetica;\\r\\n font-size: 14px;\\r\\n }\\r\\n\\r\\n .displayValue2 {\\r\\n white-space: nowrap;\\r\\n text-overflow: ellipsis;\\r\\n overflow: hidden;\\r\\n width: 300px;\\r\\n display: inline-block;\\r\\n vertical-align: bottom;\\r\\n line-height: 37px;\\r\\n font-family: Helvetica;\\r\\n font-size: 14px;\\r\\n }\\r\\n\\r\\n \\/*IPAD STYLES*\\/\\r\\n @media only screen and (max-width: 640px) {\\r\\n\\r\\n a[href^=\\\"tel\\\"],\\r\\n a[href^=\\\"sms\\\"] {\\r\\n text-decoration: none;\\r\\n color: #000000;\\r\\n \\/* or whatever your want *\\/\\r\\n pointer-events: none;\\r\\n cursor: default;\\r\\n }\\r\\n\\r\\n .itemName {\\r\\n font-size: 18px !important;\\r\\n font-weight: 500 !important;\\r\\n }\\r\\n\\r\\n .sectionHeader {\\r\\n align: left;\\r\\n font-size: 18px !important;\\r\\n }\\r\\n\\r\\n .displayValue,\\r\\n .displayValue2 {\\r\\n font-size: 16px !important;\\r\\n }\\r\\n\\r\\n .mobile_link a[href^=\\\"tel\\\"],\\r\\n .mobile_link a[href^=\\\"sms\\\"] {\\r\\n text-decoration: default;\\r\\n color: #000000 !important;\\r\\n pointer-events: auto;\\r\\n cursor: default;\\r\\n }\\r\\n\\r\\n table[class=devicewidth] {\\r\\n width: 440px !important;\\r\\n text-align: left !important;\\r\\n }\\r\\n\\r\\n table[class=devicewidthinner] {\\r\\n width: 420px !important;\\r\\n text-align: left !important;\\r\\n }\\r\\n\\r\\n img[class=banner] {\\r\\n width: 225px !important;\\r\\n height: 375px !important;\\r\\n }\\r\\n\\r\\n img[class=colimg2] {\\r\\n width: 225px !important;\\r\\n height: 375px !important;\\r\\n }\\r\\n\\r\\n .emailActionBttn,\\r\\n .emailActionBttn:link,\\r\\n .emailActionBttn:visited,\\r\\n .emailActionBttn:active {\\r\\n text-decoration: none;\\r\\n text-align: center;\\r\\n padding: 0.5em 1em;\\r\\n font-size: 18px;\\r\\n color: #FFFFFF;\\r\\n background-color: #982741;\\r\\n border-color: #982741;\\r\\n border: 2px solid;\\r\\n border-radius: 4px;\\r\\n }\\r\\n\\r\\n .emailActionBttn:hover {\\r\\n background-color: #FFFFFF;\\r\\n border-color: #982741;\\r\\n color: #982741;\\r\\n }\\r\\n }\\r\\n\\r\\n \\/*IPHONE STYLES*\\/\\r\\n @media only screen and (max-width: 480px) {\\r\\n\\r\\n a[href^=\\\"tel\\\"],\\r\\n a[href^=\\\"sms\\\"] {\\r\\n text-decoration: none;\\r\\n color: #000000;\\r\\n \\/* or whatever your want *\\/\\r\\n pointer-events: none;\\r\\n cursor: default;\\r\\n }\\r\\n\\r\\n .itemName {\\r\\n font-size: 18px !important;\\r\\n font-weight: 500 !important;\\r\\n }\\r\\n\\r\\n .sectionHeader {\\r\\n align: left;\\r\\n font-size: 18px !important;\\r\\n }\\r\\n\\r\\n .displayValue,\\r\\n .displayValue2 {\\r\\n font-size: 16px !important;\\r\\n }\\r\\n\\r\\n .mobile_link a[href^=\\\"tel\\\"],\\r\\n .mobile_link a[href^=\\\"sms\\\"] {\\r\\n text-decoration: default;\\r\\n color: #000000 !important;\\r\\n pointer-events: auto;\\r\\n cursor: default;\\r\\n }\\r\\n\\r\\n table[class=devicewidth] {\\r\\n width: 280px !important;\\r\\n text-align: left !important;\\r\\n }\\r\\n\\r\\n table[class=devicewidthinner] {\\r\\n width: 260px !important;\\r\\n text-align: left !important;\\r\\n }\\r\\n\\r\\n img[class=banner] {\\r\\n width: 225px !important;\\r\\n height: 375px !important;\\r\\n }\\r\\n\\r\\n img[class=colimg2] {\\r\\n width: 225px !important;\\r\\n height: 375px !important;\\r\\n }\\r\\n\\r\\n td[class=mobile-hide] {\\r\\n display: none !important;\\r\\n }\\r\\n\\r\\n td[class=\\\"padding-bottom25\\\"] {\\r\\n padding-bottom: 25px !important;\\r\\n }\\r\\n\\r\\n .emailActionBttn,\\r\\n .emailActionBttn:link,\\r\\n .emailActionBttn:visited,\\r\\n .emailActionBttn:active {\\r\\n text-decoration: none;\\r\\n text-align: center;\\r\\n padding: 0.5em 1em;\\r\\n font-size: 18px;\\r\\n color: #FFFFFF;\\r\\n background-color: #982741;\\r\\n border-color: #982741;\\r\\n border: 2px solid;\\r\\n border-radius: 4px;\\r\\n }\\r\\n\\r\\n .emailActionBttn:hover {\\r\\n background-color: #FFFFFF;\\r\\n border-color: #982741;\\r\\n color: #982741;\\r\\n }\\r\\n }\\r\\n <\\/style>\\r\\n<\\/head>\\r\\n\\r\\n<body id=\\\"body\\\">\\r\\n <#setting number_format=\\\"$#,##0.00; $#,##0.00\\\">\\r\\n <!-- Start of preheader -->\\r\\n <table class=\\\"flexcontainer\\\" width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"flexcontainer\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"flexcontainer\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"300\\\" align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0px\\\" cellspacing=\\\"0\\\" class=\\\"flexcontainer\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td padding-bottom=\\\"0\\\" align=\\\"center\\\">\\r\\n <img width=\\\"300\\\" src=\\\"https:\\/\\/res.cloudinary.com\\/com-manh-cp\\/image\\/upload\\/v1585061036\\/digitalSelfService\\/Sophia_s-logo-centered.png\\\">\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <!-- End of preheader -->\\r\\n <!-- Start Full Text -->\\r\\n <table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"500\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidthinner\\\">\\r\\n <tbody>\\r\\n <!-- Title -->\\r\\n <tr>\\r\\n <td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"> <\\/td>\\r\\n <\\/tr>\\r\\n <!-- End of Title -->\\r\\n <!-- Title -->\\r\\n <tr>\\r\\n <div style=\\\"font-size: 18px; color: #000000; line-height: 30px; font-family: Helvetica\\\" align=\\\"center\\\">Hi<#if CustomerFirstName??> ${CustomerFirstName}<\\/#if>!<\\/div>\\r\\n <div style=\\\"font-size: 18px; color: #000000; line-height: 30px; font-family: Helvetica\\\" align=\\\"center\\\">One last step to place your order...<\\/div>\\r\\n <\\/tr>\\r\\n <!-- End of Title -->\\r\\n <tr>\\r\\n <div style=\\\"font-size: 15px; line-height: 30px; \\\" align=\\\"center\\\">\\r\\n <p style=\\\"color:#000000;font-family: Helvetica\\\"> Order: ${OrderId}<\\/p>\\r\\n <\\/div>\\r\\n <\\/tr>\\r\\n <!-- Spacing -->\\r\\n <tr>\\r\\n <td width=\\\"100%\\\" height=\\\"20\\\"><\\/td>\\r\\n <\\/tr>\\r\\n <!-- Spacing -->\\r\\n <tr>\\r\\n <div style=\\\"font-size: 15px;\\\" align=\\\"center\\\">\\r\\n\\r\\n <p style=\\\"font-family:Helvetica; line-height: 25px; color:#000000;\\\">Review and complete your order by clicking 'Add Payment' below.<\\/p>\\r\\n\\r\\n <\\/div>\\r\\n <\\/tr>\\r\\n <!-- Add Payment button -->\\r\\n <tr>\\r\\n <td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"> <\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td width=\\\"600\\\" style=\\\"font-size: 16px; color: #fff; line-height: 30px;\\\" align=\\\"center\\\">\\r\\n <a class=\\\"emailActionBttn\\\" \\r\\n href=\\\"${SelfServiceUrl}\\\">Add Payment<\\/a>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <!-- End of content -->\\r\\n <!-- End of content -->\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <br>\\r\\n <!-- Items -->\\r\\n\\r\\n <table width=\\\"100%\\\" style=\\\"background-color: #982741\\\"; cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" style=\\\"background-color: #982741; text-align: center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <p> <span class=\\\"sectionHeader\\\">Ordered Items<\\/span> <\\/p>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n\\r\\n\\r\\n <table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <table bgcolor=\\\"#ffffff\\\" width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <!-- start of column -->\\r\\n <table width=\\\"600\\\" align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <!-- Spacing -->\\r\\n <tr>\\r\\n <td style=\\\"font-family: Helvetica, arial, sans-serif\\\">\\r\\n <!-- start of text content table -->\\r\\n <table class=\\\"flexContainer\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin-top: 2%\\\" align=\\\"left\\\">\\r\\n <tbody>\\r\\n <#list OrderedItems as Details>\\r\\n <tr>\\r\\n <td>\\r\\n <table class=\\\"flexContainer\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"margin-top: 5%;\\\" align=\\\"left\\\">\\r\\n <tbody>\\r\\n\\r\\n <tr>\\r\\n <td>\\r\\n <#if Details.ItemSmallImageURI??><img src=\\\"${Details.ItemSmallImageURI}\\\" width=\\\"125\\\" align=\\\"left\\\"><\\/#if>\\r\\n <\\/td>\\r\\n <td>\\r\\n <table width=\\\"300\\\" align=\\\"right\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\">\\r\\n <br><br>\\r\\n <tr>\\r\\n\\r\\n <td style=\\\"font-size:16px; line-height:30px; font-family:Helvetica; font-weight:bold\\\">\\r\\n <#if Details.ItemShortDescription??> ${Details.ItemShortDescription}<\\/#if>\\r\\n <\\/td>\\r\\n\\r\\n <\\/tr>\\r\\n <tr>\\r\\n\\r\\n <td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\">Size: <#if Details.ItemSize??>${Details.ItemSize}<\\/#if>\\r\\n <\\/td>\\r\\n\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\">Qty: ${Details.Quantity?string(\\\",##0\\\")}<\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n\\r\\n <td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\">Color: <#if Details.ItemColorDescription??>${Details.ItemColorDescription}<\\/#if>\\r\\n <\\/td>\\r\\n\\r\\n <\\/tr>\\r\\n <tr>\\r\\n\\r\\n <td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\">Price: <#if !Details.UnitPrice??>$0.00 <#else>${Details.UnitPrice}<\\/#if>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td style=\\\"font-size:14px; line-height:20px; font-family:Helvetica\\\">Item: ${Details.ItemId}<\\/td>\\r\\n <\\/tr>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <tr style=\\\"clear:both;height:60px\\\"> <\\/tr>\\r\\n <\\/#list>\\r\\n <\\/tbody>\\r\\n <tr style=\\\"clear:both;margin-top: 4%\\\"><\\/tr>\\r\\n <\\/table>\\r\\n <!-- end of text content table -->\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <br>\\r\\n <!-- end of items -->\\r\\n <!-- Start Full Text -->\\r\\n <table width=\\\"100%\\\" style=\\\"background-color: #982741\\\"; cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" style=\\\"background-color: #982741; text-align: center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <p> <span class=\\\"sectionHeader\\\">Order Summary<\\/span> <\\/p>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n\\r\\n <table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"10\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <!-- content -->\\r\\n <tr>\\r\\n <td style=\\\"font-size: 13px; line-height: 20px; width: 100%\\\" align=\\\"left\\\">\\r\\n <p style=\\\"font-family: Helvetica; text-align: left\\\">Subtotal:<\\/p>\\r\\n <p style=\\\"font-family: Helvetica; text-align: left\\\">Shipping:<\\/p>\\r\\n <p style=\\\"font-family: Helvetica; text-align: left\\\">Discounts:<\\/p>\\r\\n <p style=\\\"font-family: Helvetica; text-align: left\\\">Taxes:<\\/p>\\r\\n <p style=\\\"font-family: Helvetica; text-align: left; font-weight:bold\\\">Total:<\\/p>\\r\\n <\\/td>\\r\\n <td style=\\\"font-size: 13px; line-height: 20px; width: 100%\\\" align=\\\"right\\\">\\r\\n <p style=\\\"font-family: Helvetica;\\\"><#if !OrderSubTotal??>$0.00 <#else>${OrderSubTotal}<\\/#if><\\/p>\\r\\n <p style=\\\"font-family: Helvetica;\\\"><#if !TotalCharges??>$0.00 <#else>${TotalCharges}<\\/#if><\\/p>\\r\\n <p style=\\\"color: #000000;font-family: Helvetica\\\"><#if !TotalDiscounts??>$0.00 <#else>${TotalDiscounts}<\\/#if><\\/p>\\r\\n <p style=\\\"color: #000000;font-family: Helvetica\\\"><#if !TotalTaxes??>$0.00 <#else>${TotalTaxes}<\\/#if><\\/p>\\r\\n <p style=\\\"color: #000000;font-family: Helvetica; font-weight:bold\\\"><#if !OrderTotal??>$0.00 <#else>${OrderTotal}<\\/#if><\\/p>\\r\\n <\\/td\\r\\n <\\/tr>\\r\\n <!-- End of content -->\\r\\n <!-- Title -->\\r\\n <br>\\r\\n <!-- End of Title -->\\r\\n <!-- beginning of seperator -->\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" align=\\\"center\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td align=\\\"center\\\" height=\\\"6\\\" style=\\\"font-size:1px; line-height:1px;\\\"> <\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td width=\\\"600\\\" align=\\\"center\\\" height=\\\"1\\\" bgcolor=\\\"#d1d1d1\\\" style=\\\"font-size:1px; line-height:1px;\\\"> <\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td align=\\\"center\\\" height=\\\"20\\\" style=\\\"font-size:1px; line-height:1px;\\\"> <\\/td>\\r\\n <\\/tr>\\r\\n\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <!-- end of full text -->\\r\\n <table width=\\\"100%\\\" bgcolor=\\\"#ffffff\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" id=\\\"backgroundTable\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td>\\r\\n <table width=\\\"600\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td width=\\\"100%\\\">\\r\\n <table width=\\\"100%\\\" cellpadding=\\\"10px\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\" class=\\\"devicewidth\\\">\\r\\n <tbody>\\r\\n <tr>\\r\\n <td align=\\\"center\\\" valign=\\\"middle\\\">\\r\\n <p style=\\\"font-size:15px;font-family: Helvetica;font-weight:bold;color : #000000\\\">My Account | Support | Privacy Policy<\\/p>\\r\\n <hr class=\\\"seperator\\\">\\r\\n <p style=\\\"color: #000000;font-size:10px;font-family: Helvetica\\\">This message was sent to ${CustomerEmail}<\\/p>\\r\\n <p style=\\\"color: #000000;font-size:10px\\\">2019 Sophia's Inc. Sophia's and the Sophia's Outlet logo are registered trademarks<\\/p>\\r\\n <p style=\\\"color: #000000;font-size:10px;font-family: Helvetica\\\">of Sophia's Inc 2300 Windy Ridge Parkway, Atlanta GA 30339.<\\/p>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <tr>\\r\\n <td align=\\\"center\\\" valign=\\\"middle\\\">\\r\\n <p style=\\\"font-size:10px;font-family: Helvetica\\\"><\\/p>\\r\\n <hr class=\\\"seperator\\\">\\r\\n <p style=\\\"color: #bfbfbf;font-size:10px\\\">*This email was sent from a notification-only address that cannot accept incoming email. Please do not reply to this message.<\\/p>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <!-- Spacing -->\\r\\n <tr>\\r\\n <td width=\\\"100%\\\" height=\\\"20\\\"><\\/td>\\r\\n <\\/tr>\\r\\n <!-- Spacing -->\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <\\/td>\\r\\n <\\/tr>\\r\\n <\\/tbody>\\r\\n <\\/table>\\r\\n <!-- End of postfooter -->\\r\\n<\\/body>\\r\\n\\r\\n<\\/html>\\r\\n\", \"TemplateId\": \"PayByLink\", \"ReferenceField1\": \"${OrderId}\", \"ReferenceField2\": null, \"ReferenceField3\": \"${OrderTypeId}\", \"ReferenceField4\": null, \"ReferenceField5\": null, \"Subject\": \"One last step to complete your Sophia's order ${OrderId}...\", \"FromEmail\": \"cpadmin@manh.com\", \"ToAddress\": [ { \"ToAddressType\": { \"TypeId\": \"TO\" }, \"ToEmail\": \"${CustomerEmail}\", \"ToName\": \"${CustomerFirstName} ${CustomerLastName}\" } ], \"LogSuccess\": true } Pay by Link Text Message Configuration See the Transactional Text Guide for required configuration for generating Pay by Link text messages. Here is a sample Pay by Link text template: { \"TemplateMsgId\": \"PayByLink\", \"Name\": \"PayByLink\", \"Description\": \"Text message to send the Pay By Link to the customer.\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your order is almost complete. Please click the link to add payment: ${Order.DSSUrl}\", \"ConditionalExpression\": \"Order.TextMessageType contains \\\"PayByLink\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Note: No Order Configuration changes are required to generate the Pay by Link emails or texts. The event is fired when the contact center user clicks 'Send Email' or 'Send Text', which triggers the outbound Email Message or Text Message. Multiple Payment Gateways Configuration In the 'Payment Capture Config' UI, the retailer can select a payment type (/method) which needs to be displayed on the Pay by Link page. In order for this payment type to be visible on the Pay By Link page, the check box 'Permit SelfService Sales' in the 'Detail' tab should be selected. For each of the payment types configured in the 'Payment Capture Config', a different payment gateway can be assigned by following the steps mentioned in the configuring-payment-rule section. Note: All the payment types configured to be visible on the Pay By Link page will also be visible on the Payment Resolution page and Return and Exchanges Preview page. Feature Scope The following is not supported: Push notifications in the contact center, to let the CSR know that payment has been added. Currently the customer must notify the CSR verbally over the phone, and the CSR can refresh the page. Adding custom buttons, links, text, etc. to the Pay by Link panel in customer service Adding custom buttons, links, text, panels to the Digital Self-Service Pay by Link UI (only the logo, font, colors, etc. can be customized per the styling guide) Populating the customer's country code phone prefix for customers created in the contact center Services The following APIs are related to Pay by Link. Refer to the API documentation for additional details on each service. Service Component Group Service Endpoint Send Pay by Link API Order Order order/api/order/order/payByLink How to Test To test Pay by Link: Enable all required configuration listed above for the contact center, email and/or text, and Digital Self-Service. Log into the contact center as a CSR (Menu > Customer Service) and create a new order by adding an item. Select a registered customer or add a new customer. Note: If you're looking to use Pay by Link via text message for a non-US customer, then as a prerequisite to this step, you'll need to save the customer's country code phone prefix on the customer record. Add a shipping address or select a pickup store and proceed to payment. You should see the Pay by Link panel listed on the top of the payment page. Use the pre-populated email or phone number, or modify/add a new email or phone number, and click 'Send Email' or 'Send Text'. Now, as a customer, check your email or text messages (using the email or phone populated in the previous step). You should see a \"Please add payment...\" email or text. In the email or text, click the 'Add Payment' link to launch Digital Self-Service. In the Digital Self-Serivce Pay by Link page, review the items and order total and click 'Pay Now'. In the payment gateway page (e.g. Cybersource or Adyen), add a billing address (or use the pre-populated one) and enter credit card details. Click 'Pay'. You should see the Digital Self-Service confirmation page, at which point the customer notifies the CSR that payment is added. Now back in the contact center, as the CSR, click the 'Refresh' button to see the newly-added payment method and updated balance due. Confirm the order to process the authorization. Implementation Flavors How to Systematically Trigger Pay by Link Messages The base Pay by Link flow is triggered via user action from different selling channels. If it is required to generate pay by link messages in a systematic way, for example, orders that are created externally that should be paid for using Pay by Link, a flow similar to the following can be implemented: Choose an identifier on the order to indicate that payment should be captured via Pay by Link. Options for this include, but are not limited to, an extended attribute or a specific order hold type. Choose a trigger point for the Pay by Link, whichever makes the most sense for the use case. Options for this include, but are not limited to, Order Confirmed mod type, Update Payment Status to Awaiting Payment Info mod type, or a scheduled agent. In custom logic, take the order Id and invoke the base pay by link URL POST /order/api/order/order/payByLink { \"OrderId\": \"CC15038\", \"SendEmail\": true, \"SendText\": false } Note: When the base Pay by Link flow is done as part of the Manhattan Active® Omni UI process, there is explicit logic to execute the newly added payment transactions to the gateway when the user clicks \"Place Order\" or \"Confirm Changes\". If this entire flow is being done outside of Manhattan Active® Omni pre-order confirmation, a mechanism to trigger a payment request may be required to authorize the payment immediately. Keep this in mind if your process involves saving payment information prior to order confirmation. Troubleshooting Cybersource certificate issue To troubleshoot any issue with a cybersource certificate, follow the steps given below. Save Cybersource Gateway json Cybersource Gateway json { \"Messages\": null, \"ProfileId\": \"ecomorg\", \"PerformsStandaloneRefunds\": true, \"Account\": [ { \"ProfileId\": \"ecomorg\", \"AccountAttribute\": [ { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.62\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.62\", \"Value\": \"1.121\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016202808822\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Unique_Identifier\": \"6849101016202808822__targetAPIVersion\", \"Name\": \"targetAPIVersion\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.622\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.622\", \"Value\": \"false\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016212812070\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Unique_Identifier\": \"6849101016212812070__sendToProduction\", \"Name\": \"sendToProduction\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.622\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.622\", \"Value\": \"1\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016222821078\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Unique_Identifier\": \"6849101016222821078__masterCardAuthReqType\", \"Name\": \"masterCardAuthReqType\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:02.1\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:02.1\", \"Value\": \"omni-config-7be5afc0-ef33-4702-8030-309ed9d96e5a\", \"ContextId\": \"64fdfb99-d72c-4f1a-8c76-1286e98c25a8\", \"Process\": \"/gateway/Cybersource/account/base_test_account/upl\", \"PK\": \"6849101020992993739\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Unique_Identifier\": \"6849101020992993739__Certificate:DocumentId\", \"Name\": \"Certificate:DocumentId\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:02.1\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:02.1\", \"Value\": \"matest23.p12\", \"ContextId\": \"64fdfb99-d72c-4f1a-8c76-1286e98c25a8\", \"Process\": \"/gateway/Cybersource/account/base_test_account/upl\", \"PK\": \"6849101021003008128\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Unique_Identifier\": \"6849101021003008128__Certificate:FileName\", \"Name\": \"Certificate:FileName\" } ], \"UpdatedTimestamp\": \"2023-05-24T06:35:02.109\", \"AccountId\": \"base_test_account\", \"AccountEncryptedAttribute\": [ { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.623\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.623\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"merchantID\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"matest\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016232833162\", \"Unique_Identifier\": \"6849101016232833162__merchantID\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"TOKEN_SECRET_KEY\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"a65902d2da39409c8dce6d90f893baf444be568999b84dd59d68c4eff631a2d3201bae1592c944b791df5282b22df1271b9a843023d64845ae6fe06f9e8bf4dcd563b63e83b246ee8d32076712263bac54eb2e9e6b07483b983234aafbba1659d113185fac1e47f09b9003fa8354aabed623489a18164589b72773c95327cb44\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242841331\", \"Unique_Identifier\": \"6849101016242841331__TOKEN_SECRET_KEY\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"TOKEN_ACCESS_KEY\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"ab2cafc1359e3e37bb07d4fbb0214b85\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242856920\", \"Unique_Identifier\": \"6849101016242856920__TOKEN_ACCESS_KEY\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"TOKEN_PROFILE_ID\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"3657AFC0-39D6-47C2-8F85-1253C5E524D9\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242867661\", \"Unique_Identifier\": \"6849101016242867661__TOKEN_PROFILE_ID\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"DSS_TOKEN_SECRET_KEY\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"16caff9274db4dd1b68748e27090751044bed96ce8464fc79c99c3d119805909ca3b6da5ff994fb28fbda6c54332f38d4744f945b8414ec2bc73769f4d585d310357b41376824d8c9200ca1cbea8e4dd3cd458831ed44e13bc4547dfd0b43da2fc22669e0a7349a2aa981111430762f2a9a5a8aec83341fdaa2289fd8f619067\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242878894\", \"Unique_Identifier\": \"6849101016242878894__DSS_TOKEN_SECRET_KEY\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"DSS_TOKEN_ACCESS_KEY\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"88adff272ed137de82dd70338068286a\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242888576\", \"Unique_Identifier\": \"6849101016242888576__DSS_TOKEN_ACCESS_KEY\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.624\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.624\", \"Process\": \"/gateway/save\", \"ParentAccount\": { \"PK\": 6849101016162793272 }, \"Name\": \"DSS_TOKEN_PROFILE_ID\", \"UpdatedBy\": \"admin@ecomorg.com\", \"ValueDeprecated\": \"dummy_value_do_not_use\", \"Value\": \"3657AFC0-39D6-47C2-8F85-1253C5E524D9\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"PK\": \"6849101016242894276\", \"Unique_Identifier\": \"6849101016242894276__DSS_TOKEN_PROFILE_ID\" } ], \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.616\", \"LocationId\": null, \"Process\": \"/gateway/Cybersource/account/base_test_account/upl\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"UpdatedBy\": \"admin@ecomorg.com\", \"ContextId\": \"64fdfb99-d72c-4f1a-8c76-1286e98c25a8\", \"PK\": \"6849101016162793272\", \"Unique_Identifier\": \"6849101016162793272__base_test_account\" } ], \"UpdatedTimestamp\": \"2023-05-24T06:35:01.655\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:02:12.772\", \"Process\": \"/gateway/save\", \"GatewayId\": \"Cybersource\", \"GatewayAttribute\": [ { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"https://testsecureacceptance.cybersource.com/embedded/pay\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272901775\", \"Unique_Identifier\": \"6849101016272901775__TOKEN_END_POINT\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_END_POINT\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"./assets/static/CybersourceRequestGenerator.html\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272914230\", \"Unique_Identifier\": \"6849101016272914230__TOKEN_REQ_GEN_URL\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_REQ_GEN_URL\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"/customerengagementfacade/api/ds/payment/payment/secureacceptance/externalPaymentResponseProcessor\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272926439\", \"Unique_Identifier\": \"6849101016272926439__TOKEN_RES_GEN_URL\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_RES_GEN_URL\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"./assets/static/CybersourceRequestGenerator.html\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272939108\", \"Unique_Identifier\": \"6849101016272939108__DSS_TOKEN_REQ_GEN_URL\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"DSS_TOKEN_REQ_GEN_URL\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"/selfservice/ui/api/selfservice/paymentgateway/hostedCheckout/externalPaymentProcessor\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272948261\", \"Unique_Identifier\": \"6849101016272948261__DSS_TOKEN_RES_GEN_URL\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"DSS_TOKEN_RES_GEN_URL\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"700\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272956205\", \"Unique_Identifier\": \"6849101016272956205__TOKEN_WINDOW_HEIGHT\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_WINDOW_HEIGHT\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"770\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272966649\", \"Unique_Identifier\": \"6849101016272966649__TOKEN_WINDOW_WIDTH\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_WINDOW_WIDTH\" }, { \"ProfileId\": \"ecomorg\", \"UpdatedBy\": \"admin@ecomorg.com\", \"UpdatedTimestamp\": \"2023-05-24T06:35:01.627\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T06:35:01.627\", \"Value\": \"false\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"Process\": \"/gateway/save\", \"PK\": \"6849101016272977288\", \"Unique_Identifier\": \"6849101016272977288__TOKEN_USE_HTTPS\", \"ParentGateway\": { \"PK\": 6849081327728561764 }, \"Name\": \"TOKEN_USE_HTTPS\" } ], \"PaymentGatewayTemplate\": [], \"UpdatedBy\": \"admin@ecomorg.com\", \"ContextId\": \"b93914f5-c03a-4f10-85e8-17a52910a9fd\", \"GatewayImplementation\": [], \"IsBase\": true, \"ProcessStuckTransaction\": true, \"Unique_Identifier\": \"6849081327728561764__Cybersource\" } Upload the certificate.(matest.p12 from pament gatewaycomponent) Update Cybersource Gateway in the Payment Rule : Ex Visa Restart Payment gateway component Need additional attributes from order to be included in PayByLink Email outbouund message: Add the required attributes to DSSPayByLink-OrderTemplate and restart the order component. Note: This step does not require any other configurations in Email Messages. Related Articles Curbside PickupOrder CancellationEmbedding Digital Self-Service on Retailer WebsiteNPS SurveyShip it InsteadGoogle Analytics IntegrationExtend Pickup WindowContact Customer ServiceTroubleshooting Digital Self-ServiceRefund by Link Return TrackingOverview & AuthenticationLocalization and Customizing LabelsReturns & ExchangesUI Theming and CustomizationUI ResourcesManage OrdersProduct Recommendations in Digital Self-ServiceItem SubstitutionChange Pickup StoreStore Short OptionsAdd Alternate Pickup PersonShipment TrackingPayment ResolutionKits Support in Digital Self ServiceChange Shipping Address"
}