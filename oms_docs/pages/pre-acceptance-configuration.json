{
  "success": true,
  "permalink": "pre-acceptance-configuration",
  "title": "Pre-Acceptance Configuration",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158410\" href=\"/store\" class=\"breadcrumb-links\">Store Inventory & Fulfillment</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158852\" href=\"/store-fulfillment\" class=\"breadcrumb-links\">Store Order Fulfillment</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2164820\" href=\"/pre-acceptance-2\" class=\"breadcrumb-links\">Pre-acceptance</a></li><li> <span>››</span>Pre-Acceptance Configuration</li></ul>  \t\r\n\t\t<h2>Pre-acceptance Configuration</h2>\n\n<p></p>\n\n<div class=\"info\"><ul><li><a href=\"/pre-acceptance-configuration$cancel-aged-fulfillments\">Cancel Aged Fulfillments</a></li><li><a href=\"/pre-acceptance-configuration$fulfillment-event-generation\">Fulfillment Event Generation</a></li><li><a href=\"/pre-acceptance-configuration$uis-and-entities\">UIs and Entities</a></li></ul></div>\n\n<h4><a name=\"cancel-aged-fulfillments\" id=\"cancel-aged-fulfillments\"></a>Cancel Aged Fulfillments</h4>\n\n<p>If a&nbsp;store&nbsp;is unable to&nbsp;process a fulfillment&nbsp;in a timely manner, there is an option to automatically cancel&nbsp;aged fulfillment.&nbsp;</p>\n\n<p>The job scheduler &quot;cancelAgedFulfillmentTriggerWithOpenStatus&quot; is used to&nbsp;automatically cancel&nbsp;these fulfillments&nbsp;after&nbsp;a defined&nbsp;time period.&nbsp;A sample JSON to configure the job scheduler is shown below as a&nbsp;UI is not available.&nbsp;</p>\n\n<div class=\"computer_code\" style=\"margin: 0px;\">POST message</div>\n\n<div class=\"computer_code\" style=\"margin: 0px;\"><strong style=\"font-style: inherit;\"><code style=\"font-weight: normal;\">{{URL}}/fulfillment/api/batch/jobSchedule/save</code></strong></div>\n\n<div class=\"computer_code\" style=\"margin: 0px;\">{&nbsp;<br />\n&nbsp; &quot;JobScheduleId&quot;: &quot;cancelAgedFulfillmentJobWithOpenStatus&quot;,<br />\n&nbsp; &quot;JobTypeId&quot;: &quot;cancelAgedFulfillmentJob&quot;,<br />\n&nbsp; &quot;CronExpression&quot;: &quot;0 0 9-18/1 * * ?&quot;,<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp;&nbsp;</span>&quot;TimeZone&quot;: &quot;GMT+5:30&quot;,<br />\n&nbsp; &quot;TriggerKey&quot;: &quot;cancelAgedFulfillmentTriggerWithOpenStatus&quot;,<br />\n&nbsp; &quot;JobParameters&quot;: [<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp;&nbsp;</span>{<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp;&nbsp;</span>&quot;InputKey&quot;: &quot;OrganizationId&quot;,<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp;&nbsp;</span>&quot;InputValue&quot;: &quot;dummyOrg&quot;<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp;&nbsp;</span>},<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;QueryString&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;<span style=\"color: rgb(51, 51, 51);\">select distinct fulfillmentEntity.fulfillmentId from FulfillmentEntity fulfillmentEntity where fulfillmentEntity.minStatusId=:StatusCode and fulfillmentEntity.maxStatusId=:StatusCode and fulfillmentEntity.createdTimestamp&lt; SQL(&#39;(? - interval :noOfUnits :timeUnit)&#39;, CURRENT_TIMESTAMP) and fulfillmentEntity.shipFromLocationId in (:facilityIds)</span>&quot;<br />\n&nbsp; &nbsp; },<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;facilityIds&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;&#39;FC3&#39;&quot;<br />\n&nbsp; &nbsp; },<br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; {</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;StatusCode&quot;,</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;1000.000&quot;</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; },</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; {</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;ReasonCode&quot;,</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;1000.000&quot;</span><br style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px;\" />\n<span style=\"color: rgb(102, 102, 102); font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(249, 249, 249);\">&nbsp; &nbsp; },</span><br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;timeUnit&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;hour&quot;<br />\n&nbsp; &nbsp; },<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;noOfUnits&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;1&quot;<br />\n&nbsp; &nbsp; },<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;InputKey&quot;: &quot;ChunkSize&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;InputValue&quot;: &quot;2&quot;<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ]<br />\n};</div>\n\n<p>&nbsp;</p>\n\n<h5>Parameters</h5>\n\n<p>Provide these&nbsp;parameters to setup the job scheduler for cancelling fulfillments:</p>\n\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 692px;\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\" style=\"width: 269px; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parameter</font></th>\n\t\t\t<th scope=\"col\" style=\"width: 385px; font-weight: normal; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Description</font></th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job Schedule Id</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Unique job scheduler Id</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job Type Id</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Use &#39;cancelAgedFulfillmentTriggerWithOpenStatus&#39;&nbsp;job type</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Cron Expression</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">The Cron expression decides how frequently a job is invoked.&nbsp;&nbsp;Use a website which builds cron expressions, Ex.&nbsp;http://www.cronmaker.com/</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Time Zone</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Time zone of the geo location where the job is running</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Trigger Key</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Unique trigger key&nbsp;</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter -&nbsp;OrganizationId</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Id of the organization for which this scheduler will run</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - Query String</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Query which selects fulfillments to be cancelled</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - Facility Ids</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Comma separated facility Ids of the stores that would be on this schedule</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter -&nbsp;Status Code</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Status of the fulfillments to cancel</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - Reason Code</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">The reason code with which fulfillments are cancelled</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - Time Unit</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Unit in which time is entered</font><br />\n\t\t\t&nbsp;</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - No of Units</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Amount of time allowed for stores to fulfill store orders. After this time they would be rejected to process by another node.</font></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"margin: 0px; width: 269px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Job parameter - Chunk Size</font></td>\n\t\t\t<td style=\"margin: 0px; width: 385px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Chunk size</font></td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<h4><a name=\"fulfillment-event-generation\" id=\"fulfillment-event-generation\"></a>Fulfillment Event Generation</h4>\n\n<h5>Enable fulfillment event generation based on condition</h5>\n\n<p>This parameter in the Store Fulfillment Parameters UI enables the generation of fulfillment creation event based on a condition that&#39;s defined in extension logic. If it is set to true, the condition specified in the extension handler will be evaluated, and if satisfied, the fulfillment event is generated and posted in the queue.</p>\n\n<p>By default, this parameter is set to false.</p>\n\n<h4><a name=\"uis-and-entities\" id=\"uis-and-entities\"></a>UIs and Entities</h4>\n\n<p>The configuration UIs mentioned in this document is listed in the following table,&nbsp;along with information to&nbsp;navigate&nbsp;to the API documentation:</p>\n\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th scope=\"col\">UI Name</th>\n\t\t\t<th scope=\"col\">Component</th>\n\t\t\t<th scope=\"col\">Group</th>\n\t\t\t<th scope=\"col\">Seed Data Present?</th>\n\t\t\t<th scope=\"col\">Seed Data Profile</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Store Fulfillment Parameters</td>\n\t\t\t<td>Fulfillment</td>\n\t\t\t<td>FulfillmentParameters Services</td>\n\t\t\t<td>Yes</td>\n\t\t\t<td>Base</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 14599,
  "scraped_at": "2025-08-09T22:36:09.987653"
}