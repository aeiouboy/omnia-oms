{
  "id": "3570046",
  "permalink": "cartprompt",
  "title": "Cart Prompts",
  "type": "topic",
  "level": 5,
  "path": "Manhattan Active® Omni/Store/Process & Configuration Guides/Point of Sale/POS Guides/Cart Prompts",
  "raw_item": {
    "id": "3570046",
    "text": "Cart Prompts",
    "title": "Cart Prompts",
    "permalink": "cartprompt",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "430379",
    "parent": "f;430379",
    "created_date": "1741148685",
    "modified_date": "1750189611",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "11"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158737\" href=\"/point-of-sale\" class=\"breadcrumb-links\">Point of Sale</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3433322\" href=\"/pos-iris-guides\" class=\"breadcrumb-links\">POS Guides</a></li><li> <span>››</span>Cart Prompts</li></ul>  \t\r\n\t\t<h1>Cart Prompts</h1>\r\n\r\n<hr>\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/cartprompt$cart-prompt-group\">Cart Prompt Group</a><ul><li><a href=\"/cartprompt$cart-prompt\">Cart Prompt</a><ul><li><a href=\"/cartprompt$defining-rich-text-for-cart-prompt-messages\">Defining rich text for cart prompt messages</a></li><li><a href=\"/cartprompt$configure-dynamic-data-on-prompt-messages\">Configure Dynamic data on prompt messages</a></li></ul></li></ul></li><li><a href=\"/cartprompt$item-labels-and-label-framework\">Item Labels and label Framework</a></li><li><a href=\"/cartprompt$location-group\">Location Group</a></li><li><a href=\"/cartprompt$cart-prompt-nbsp-offline\">Cart Prompt&nbsp;- Offline</a></li><li><a href=\"/cartprompt$use-cases\">Use Cases</a><ul><li><a href=\"/cartprompt$informative\">Informative</a><ul><li><a href=\"/cartprompt$informative-prompts-restocking-fee-on-sale-items\">Informative Prompts - Restocking Fee on sale items</a></li><li><a href=\"/cartprompt$informative-prompts-final-sale-nbsp\">Informative Prompts - Final Sale&nbsp;</a></li><li><a href=\"/cartprompt$additional-data-forms-age-restriction\">Additional data forms - Age Restriction</a></li></ul></li><li><a href=\"/cartprompt$preventive\">Preventive</a><ul><li><a href=\"/cartprompt$product-restricted-sale\">Product restricted sale</a></li></ul></li></ul></li><li><a href=\"/cartprompt$limited-capability\">Limited capability</a></li><li><a href=\"/cartprompt$services\">Services</a></li></ul></div>\r\n\r\n<h2 data-renderer-start-pos=\"31\">Overview</h2>\r\n\r\n<p>The Cart Prompts feature within the Cart Input Form Framework allows for the display of essential information to the POS users/customers without requiring any input from user. These prompts serve as a mechanism for conveying important messages, guidelines, or contextual details during the selling or return process.&nbsp;</p>\r\n\r\n<p><strong>Key Features for POS Integration</strong></p>\r\n\r\n<ul>\r\n\t<li>Seamless UI Display: Information is displayed in a structured, non-editable format within the POS UI.</li>\r\n\t<li>Contextual Triggering: Prompts appear dynamically based on configured cart events when an item is added to the cart.</li>\r\n\t<li>Customizable per Retailer needs: Messages can be tailored to comply with store policies, regional regulations, or product&nbsp;disclaimers</li>\r\n\t<li>Enhanced Compliance & Accuracy: Ensures that POS users receive mandatory notifications without the risk of manual data entry errors.</li>\r\n\t<li>Location-specific Support: Cart prompts can be configured to display messages based on locations.</li>\r\n</ul>\r\n\r\n<p><strong>Use Cases for Cart Prompts</strong><br>\r\nCurrently cart prompts are built to serve at item level. Cart prompts cannot be used for transaction level messaging. This capability can be utilized in various scenarios, including: &nbsp;&nbsp;</p>\r\n\r\n<ul>\r\n\t<li>Preventive prompts: Providing product recall warnings for restricted items, restricting sale of items at particular locations etc.</li>\r\n\t<li>Informative prompts: Displaying mandatory disclaimers like Final Sale, Overweight etc. Providing more information about the product, which includes restocking fee if applicable on return of product.</li>\r\n</ul>\r\n\r\n<p>By integrating Cart Prompts into the POS system, retailers can streamline checkout interactions, enforce policies, and improve the overall user experience while maintaining compliance with legal and business requirements.</p>\r\n\r\n<h2>Cart Prompts&nbsp;Workflow</h2>\r\n\r\n<p>The framework has two aspects. Defining the message that needs to be displayed on the POS solution&nbsp;and the second aspect is configuring events to trigger these prompts. This framework will use the same aspects as defined in&nbsp;<a hiq-type=\"dynamic_link\" hqid=\"3484033\"  href=\"/pos-cartform\" rel=\"3484033\">Cart Form</a></p>\r\n\r\n<p>The \"Cart Event\" and \"Cart Form\" MUP UI screens will help the user to create and configure events/prompts for a defined condition. These conditions will be used to initiate prompt&nbsp;messages on the UI. The prompt messages can be created and configured from the cart prompt configuration screen.&nbsp;</p>\r\n\r\n<p>Both these UIs are built as a&nbsp;wizard to help users through a step-by-step process of creating&nbsp;the&nbsp;configuration.</p>\r\n\r\n<h2>Cart Event</h2>\r\n\r\n<p>Refer to the cart event details and the configuration steps here: <a href=\"https://omni.helpdocsonline.com/pos-cartform$cart-event\">Cart Event</a></p>\r\n\r\n<div class=\"info\"><strong>Note</strong>:&nbsp;Cart Prompts only support \"PreOrderLineAdd\" and \"PostOrderLineAdd\" cart events.</div>\r\n\r\n<div class=\"warning\">\"preOrderLineAdd\" cart Event uses local storage for items and their prices, so it's mandatory to export this data to the MAO POS application for local storage. The configured Input forms or cart prompts will not work as expected without this data. Read more on exports <a href=\"https://omni.helpdocsonline.com/pos-offline-configuration$item-caching\">here</a></div>\r\n\r\n<h2>Cart Prompt&nbsp;Configuration</h2>\r\n\r\n<p>There are many entities involved in this workflow, whilst&nbsp;the basic concept is that you define a trigger point which is an event and its conditions, and associate this event with forms via form group. The sections below are entities involved in the cart event/form design.</p>\r\n\r\n<h3><a name=\"cart-prompt-group\" id=\"cart-prompt-group\"></a>Cart Prompt Group</h3>\r\n\r\n<p>The cart prompt group is the entity that groups one or more related prompts and creates the association between the prompts based on display sequence. For example, if there are two prompts required to be displayed to the user, then two separate prompt messages can be&nbsp;configured, which are linked by the prompt group.&nbsp;</p>\r\n\r\n<p>The event is configured to invoke a prompt group, and the prompt group will list all the prompt messages&nbsp;associated with the group.&nbsp;</p>\r\n\r\n<div class=\"warning\">The configuration is for future use cases. Currently, only one prompt message per prompt group is supported. If there is a requirement to show multiple prompt messages for the same cart event condition, then consider configuring these prompts separately in different prompt groups.</div>\r\n\r\n<p>Sample Data:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 140px;\">promptGroupId</td>\r\n\t\t\t<td style=\"width: 106px;\">displayName(localized)</td>\r\n\t\t\t<td>resourceId</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 140px;\">FinalSaleItemPromptGroup</td>\r\n\t\t\t<td style=\"width: 106px;\">Final Sale</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 140px;\">RestrictedSalePromptGroup</td>\r\n\t\t\t<td style=\"width: 106px;\">Restricted Item</td>\r\n\t\t\t<td>&nbsp;</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>More Details</strong></p>\r\n\r\n<ul>\r\n\t<li>resourceId: This is not implemented or is being used right now. This will be reserved for future use.</li>\r\n</ul>\r\n\r\n<h4><a name=\"cart-prompt\" id=\"cart-prompt\"></a>Cart Prompt</h4>\r\n\r\n<p>The cart input form entity is a new configuration entity introduced to capture the configuration for a form. A form is nothing but a simple UI form that can be used to input and capture information.&nbsp;</p>\r\n\r\n<p>A form can contain one or more fields, which are defined in the cartInputFormField entity. Cart input forms can be configured as needed by retailers. A business user can configure one or many forms as required for the use case that they are trying to solve.&nbsp;</p>\r\n\r\n<p>A name can be given for the form that will be displayed in the UI, when the form is rendered. When configuring multiple forms to solve a single requirement, a sequence can also be provided to indicate when the form should appear in the flow.&nbsp;</p>\r\n\r\n<p>The cart input form entity will be seeded with all the form configurations that are required by base. Services and customers can create their own configurations as needed.&nbsp;</p>\r\n\r\n<p>Sample form data:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 831px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>parentPromptGroup</td>\r\n\t\t\t<td>promptId</td>\r\n\t\t\t<td>displayName (localized)</td>\r\n\t\t\t<td style=\"width: 149px;\">description</td>\r\n\t\t\t<td style=\"width: 149px;\">promptType</td>\r\n\t\t\t<td style=\"width: 165px;\">message (not localized)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>FinalSaleItemPromptGroup</td>\r\n\t\t\t<td>FinalSaleItemPrompt</td>\r\n\t\t\t<td>FINAL SALE</td>\r\n\t\t\t<td style=\"width: 149px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 149px;\">Informative</td>\r\n\t\t\t<td style=\"width: 165px;\">Final Sale: Clearance items are not eligible for returns or exchanges.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>RestrictedSalePromptGroup</td>\r\n\t\t\t<td>RestrictedSalePrompt</td>\r\n\t\t\t<td>RESTRICTED ITEM</td>\r\n\t\t\t<td style=\"width: 149px;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 149px;\">Preventive</td>\r\n\t\t\t<td style=\"width: 165px;\">Restricted Sale: This item cannot be sold in this location.</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><strong>More Details:</strong></p>\r\n\r\n<ul>\r\n\t<li>Prompt Type\r\n\t<ul>\r\n\t\t<li>Informative\r\n\t\t<ul>\r\n\t\t\t<li>This is an informational&nbsp;message on the POS terminal, the user can acknowledge and the item is added to the cart.</li>\r\n\t\t\t<li>This promptType is only&nbsp;supported for preOrderLineAdd and posOrderLineAdd cart Events and not for onCartCheckout.</li>\r\n\t\t</ul>\r\n\t\t</li>\r\n\t\t<li>Preventive\r\n\t\t<ul>\r\n\t\t\t<li>This will prompt a&nbsp;message on the POS terminal, but the item is not added to the cart.</li>\r\n\t\t\t<li>This promptType is only&nbsp;supported for preOrderLineAdd.</li>\r\n\t\t</ul>\r\n\t\t</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>message\r\n\t<ul>\r\n\t\t<li>This can be defined as rich text. Please read more in the section below on the rich text</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"warning\">message&nbsp;in \"Cart Prompt\" is currently not localized.</div>\r\n\r\n<h5><a name=\"defining-rich-text-for-cart-prompt-messages\" id=\"defining-rich-text-for-cart-prompt-messages\"></a><strong><a id=\"prompt_message-richtext\" name=\"prompt_message-richtext\"></a>Defining rich text for cart prompt messages</strong></h5>\r\n\r\n<p>The message on the cart prompt supports&nbsp;rich text, it can be defined to support different fonts, bold, Italics etc. Also, it can be defined to support dynamic values.</p>\r\n\r\n<p><strong>Rich text</strong>: Currently the system is being tested to work for&nbsp;different fonts, bold, Italics etc.,&nbsp;but it also supports colors, hyperlinks, images etc. But the latter is not tested with all the combinations because of the vast capabilities of rich text.&nbsp;</p>\r\n\r\n<p>You can use any online markdown tools available on the web to create a rich text and configure this text on the cart prompt message.</p>\r\n\r\n<p>R&D has referred to: <a href=\"http://&nbsp;https://www.digitalocean.com/community/markdown\">External link</a><a href=\"https://www.digitalocean.com/community/markdown\">&nbsp;</a>during the development and testing phases (Since this is an external free source link, it cannot guarantee the availability).</p>\r\n\r\n<h5><a name=\"configure-dynamic-data-on-prompt-messages\" id=\"configure-dynamic-data-on-prompt-messages\"></a><strong>Configure Dynamic data on prompt messages</strong></h5>\r\n\r\n<p>Dynamic data: If you have a requirement to use some attributes&nbsp;in the order json to construct the message that needs to be displayed to the user, then it can be done using this rich text&nbsp; on the cartPrompt.message field.&nbsp;This can only be used for&nbsp;attributes on Order and OrderLine entities or its child entities.</p>\r\n\r\n<p><strong>Dynamic array</strong>: Use the sample below if you want to use&nbsp;some attributes in orderLine.ReturnFee and some attributes in&nbsp;orderLine.ReturnFee.ReturnFeeTypeId. You will be required to have a start and end for the entity when you define the message.</p>\r\n\r\n<p><a id=\"prompt_restockingfee\" name=\"prompt_restockingfee\"></a>Example:&nbsp;{{#OrderLine.ReturnFee}} A {{ReturnFeeDisplayName}} of {{ReturnFeeValue}} ({{ReturnFeeTypeId.FeeType}}) applies to return of this item {{/OrderLine.ReturnFee}}</p>\r\n\r\n<p>This example is used for a restocking fee prompt message that is displayed when an item is added to the cart. The final message will be \"A Restocking Fee of 2 (Flat Fee) applies to return of this item.\"</p>\r\n\r\n<p><strong>Static variable, not an array</strong>: If you want to configure an attribute&nbsp;inside the&nbsp;orderLine entities then you should use the attributes directly without providing the start and end of that entity when you define the message.</p>\r\n\r\n<p>Example: Item {{OrderLine.ItemId}}&nbsp;is subject to a 20% restocking fee.</p>\r\n\r\n<p>The final message will be \"Item PR0040 is subject to a 20% restocking fee\"</p>\r\n\r\n<div class=\"tip\">Please note: Dynamic/static&nbsp;data will not be available for pre-orderLineAdd cart event. Order or OrderLine attributes are&nbsp;applicable to the \"postOrderLineAdd\" cart event and order attributes are applicable for \"onCheckout\" cart event.</div>\r\n\r\n<h3><a name=\"item-labels-and-label-framework\" id=\"item-labels-and-label-framework\"></a>Item Labels and label Framework</h3>\r\n\r\n<p>Cart Prompt messages which are configured to a&nbsp;\"preOrderLineAdd\" cart event need to use \"ItemLabel\" as cartEventCondition. Refer to <a href=\"https://omni.helpdocsonline.com/pos-cartform$cartevent-itemlabel\">cart event page</a> for more details on configuration.</p>\r\n\r\n<p>It is recommended to use&nbsp;\"ItemLabel\" more often&nbsp;because it helps to make the prompts or forms more specific to the item or group of items.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"location-group\" id=\"location-group\"></a>Location Group</h3>\r\n\r\n<p>If you have a requirement to show messages which are location specific and should be displayed only for a specific&nbsp;location or group of locations, then use the configuration in cart event &gt; location criteria. This&nbsp;is detailed here: <a href=\"https://omni.helpdocsonline.com/pos-cartform$cart-event-location-group\">Cart event location group</a></p>\r\n\r\n<h3><a name=\"cart-prompt-nbsp-offline\" id=\"cart-prompt-nbsp-offline\"></a>Cart Prompt&nbsp;- Offline</h3>\r\n\r\n<p>Cart prompt messages are supported when a POS application is in offline mode. The user can still get the configured cart prompt messages even when the device is in offline mode. This is achieved by storing the&nbsp;configured cart prompts&nbsp;from static data into the local storage of the device.</p>\r\n\r\n<h3><a name=\"use-cases\" id=\"use-cases\"></a>Use Cases</h3>\r\n\r\n<p>The following are&nbsp;some examples that use the cart prompt framework to show the messages on the Manhattan Active Omni®&nbsp;POS UI.</p>\r\n\r\n<h4><a name=\"informative\" id=\"informative\"></a>Informative</h4>\r\n\r\n<h5><a name=\"informative-prompts-restocking-fee-on-sale-items\" id=\"informative-prompts-restocking-fee-on-sale-items\"></a><strong>Informative Prompts - Restocking Fee on sale items</strong></h5>\r\n\r\n<p>Retailers can configure item level fees. For example, restocking fees or overweight handling fees when a customer returns an individual product. This fee can be configured as a percentage of the item price, a flat fee or a per quantity&nbsp;fee. Read more on <a href=\"https://omni.helpdocsonline.com/cart-new$return-fee-at-item-level\">process</a> and related&nbsp;<a href=\"https://omni.helpdocsonline.com/how-does-return-work$return-fees\">configuration</a> here.</p>\r\n\r\n<p><strong>Business scenario</strong>: The retailer can configure a pop-up message to show up on the POS application, if the item that is added to the sale cart has some restocking fees that are applicable if the item is returned.</p>\r\n\r\n<p><strong>Required configuration</strong>: You will be required to configure&nbsp;the \"Cart Prompt\" message that you want to show on the POS application. Create a new cart event for \"postOrderLineAdd\" cart event Id and&nbsp;link it to thecart prompt. You need to use the \"Restocking Fee\"</p>\r\n\r\n<ol>\r\n\t<li>Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup</li>\r\n\t<li>Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/CartEventConfig</li>\r\n</ol>\r\n\r\n<p><strong>Payload URL:</strong>&nbsp;{{url}}/posservice/api/posservice/cartPromptGroup/save</p>\r\n\r\n<p>Request Payload Sample 1: Use this for dynamic data requirements</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-1\" class=\"toggle-content\"><span class=\"toggle-title\">Restock-CartPrompt1</span></a></p><div id=\"tg-1\"><p>{</p>\n\n<p>&quot;PromptGroupId&quot;: &quot;CartPrompt-RestockFee&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restock Fee Prompt&quot;,</p>\n\n<p>&quot;CartMode&quot;: null,</p>\n\n<p>&quot;CartPrompt&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;PromptId&quot;: &quot;RestockFee&quot;,</p>\n\n<p>&quot;PromptType&quot;: {</p>\n\n<p>&quot;PromptTypeId&quot;: &quot;Informative&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Description&quot;: &quot;Restock Fee Prompting on the UI&quot;,</p>\n\n<p>&quot;Message&quot;: &quot;{{#OrderLine.ReturnFee}} A {{ReturnFeeDisplayName}} of {{ReturnFeeValue}} ({{ReturnFeeTypeId.FeeType}}) applies to return of this item. {{/OrderLine.ReturnFee}}&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restock Fee&quot;</p>\n\n<p>}</p>\n\n<p>]</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<p>Request Payload Sample 2: use this for static messaging requirements</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-2\" class=\"toggle-content\"><span class=\"toggle-title\">Restock-cartPrompt2</span></a></p><div id=\"tg-2\"><p>{</p>\n\n<p>&quot;PromptGroupId&quot;: &quot;CartPrompt-RestockFee2&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restock Fee Prompt&quot;,</p>\n\n<p>&quot;CartMode&quot;: null,</p>\n\n<p>&quot;CartPrompt&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;PromptId&quot;: &quot;RestockFee2&quot;,</p>\n\n<p>&quot;PromptType&quot;: {</p>\n\n<p>&quot;PromptTypeId&quot;: &quot;Informative&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Description&quot;: &quot;Restock Fee Prompting on the UI&quot;,</p>\n\n<p>&quot;Message&quot;: &quot;This item is subject to a Restocking Fee if returned. Please advise the customer of this item&#39;s status.&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restock Fee&quot;</p>\n\n<p>}</p>\n\n<p>]</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<p>Link&nbsp;the cart prompt group to a cart event:&nbsp;{{url}}/posservice/api/posservice/CartEventConfig/save</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-3\" class=\"toggle-content\"><span class=\"toggle-title\">Restock-CartEvent</span></a></p><div id=\"tg-3\"><p>{</p>\n\n<p>&quot;Description&quot;: &quot;PostOrderAdd-Info-RestockFee&quot;,</p>\n\n<p>&quot;ActionType&quot;: {</p>\n\n<p>&quot;ActionTypeId&quot;: &quot;CartEventPromptGroup&quot;</p>\n\n<p>},</p>\n\n<p>&quot;CartEventConfigId&quot;: &quot;PostAdd-Info-RestockFee&quot;,</p>\n\n<p>&quot;FormGroup&quot;: null,</p>\n\n<p>&quot;MatchAny&quot;: false,</p>\n\n<p>&quot;CartEvent&quot;: {</p>\n\n<p>&quot;CartEventId&quot;: &quot;postOrderLineAdd&quot;</p>\n\n<p>},</p>\n\n<p>&quot;LocationCriteria&quot;: [],</p>\n\n<p>&quot;EventRank&quot;: 90,</p>\n\n<p>&quot;CartEventCondition&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ConditionEntity&quot;: &quot;ReturnFee&quot;,</p>\n\n<p>&quot;AttributeName&quot;: &quot;ReturnFeeId&quot;,</p>\n\n<p>&quot;Operator&quot;: {</p>\n\n<p>&quot;OperatorId&quot;: &quot;=&quot;</p>\n\n<p>},</p>\n\n<p>&quot;AttributeValue&quot;: &quot;RestockingFee&quot;</p>\n\n<p>},</p>\n\n<p>{</p>\n\n<p>&quot;ConditionEntity&quot;: &quot;OrderLine&quot;,</p>\n\n<p>&quot;AttributeName&quot;: &quot;IsReturn&quot;,</p>\n\n<p>&quot;Operator&quot;: {</p>\n\n<p>&quot;OperatorId&quot;: &quot;!=&quot;</p>\n\n<p>},</p>\n\n<p>&quot;AttributeValue&quot;: &quot;true&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;PromptGroup&quot;: &quot;CartPrompt-RestockFee&quot;</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<div class=\"info\">The restocking or any return fee that you are using as cart event condition needs to be present in system. <a href=\"https://omni.helpdocsonline.com/how-does-return-work$Return- fee- config1\">Refer</a> for more info</div>\r\n\r\n<h5><a name=\"informative-prompts-final-sale-nbsp\" id=\"informative-prompts-final-sale-nbsp\"></a><strong>Informative Prompts - Final Sale</strong>&nbsp;</h5>\r\n\r\n<p><strong>Business scenario</strong>: The retailer can configure an Informative pop-up message to show up on the POS application whenever an item is attempted to be added to the cart. This informative prompt, when configured for a \"preOrderLineAdd\" cart event, will be displayed before adding the item to cart.</p>\r\n\r\n<p><strong>Required configuration</strong>: You will be required to configure&nbsp;the \"Cart Prompt\" message that you want to show on the POS application.&nbsp;</p>\r\n\r\n<ol>\r\n\t<li>Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup</li>\r\n\t<li>Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/cartEventConfig</li>\r\n\t<li>ItemLabel needs to be created on Items before it's used in the cart event condition.</li>\r\n</ol>\r\n\r\n<p><strong>Payload URL:</strong>&nbsp;{{url}}/posservice/api/posservice/cartPromptGroup/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-4\" class=\"toggle-content\"><span class=\"toggle-title\">FinalSale-CartPrompt</span></a></p><div id=\"tg-4\"><p>{</p>\n\n<p>&quot;PromptGroupId&quot;: &quot;CartPrompt-FinalSale&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Final Sale&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;0104d344-e872-4538-b858-924b042345ab&quot;,</p>\n\n<p>&quot;CartMode&quot;: null,</p>\n\n<p>&quot;CartPrompt&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;PromptType&quot;: {</p>\n\n<p>&quot;PromptTypeId&quot;: &quot;Informative&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Description&quot;: &quot;Final Sale prompt message&quot;,</p>\n\n<p>&quot;Message&quot;: &quot;This item is sold as a final sale. No returns, refunds, or exchanges will be accepted. Please review your order before completing the purchase.&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Final Sale&quot;,</p>\n\n<p>&quot;PromptId&quot;: &quot;Final Sale&quot;</p>\n\n<p>}</p>\n\n<p>]</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<p>Link&nbsp;the cart prompt group to a cart event:&nbsp;{{url}}/posservice/api/posservice/cartEventConfig/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-5\" class=\"toggle-content\"><span class=\"toggle-title\">FinalSale-CartEvent</span></a></p><div id=\"tg-5\"><p>{</p>\n\n<p>&quot;Description&quot;: &quot;PreOrderAdd-FinalSale&quot;,</p>\n\n<p>&quot;ActionType&quot;: {</p>\n\n<p>&quot;ActionTypeId&quot;: &quot;CartEventPromptGroup&quot;</p>\n\n<p>},</p>\n\n<p>&quot;CartEventConfigId&quot;: &quot;CartPrompt-FinalSale&quot;,</p>\n\n<p>&quot;FormGroup&quot;: null,</p>\n\n<p>&quot;MatchAny&quot;: false,</p>\n\n<p>&quot;CartEvent&quot;: {</p>\n\n<p>&quot;CartEventId&quot;: &quot;preOrderLineAdd&quot;</p>\n\n<p>},</p>\n\n<p>&quot;LocationCriteria&quot;: [],</p>\n\n<p>&quot;EventRank&quot;: 90,</p>\n\n<p>&quot;CartEventCondition&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ConditionEntity&quot;: &quot;Itemlabel&quot;,</p>\n\n<p>&quot;AttributeName&quot;: &quot;FinalSale&quot;,</p>\n\n<p>&quot;Operator&quot;: {</p>\n\n<p>&quot;OperatorId&quot;: &quot;=&quot;</p>\n\n<p>},</p>\n\n<p>&quot;AttributeValue&quot;: &quot;true&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;PromptGroup&quot;: &quot;PreOrderAdd-FinalSale&quot;</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<h5><a name=\"additional-data-forms-age-restriction\" id=\"additional-data-forms-age-restriction\"></a><strong>Additional data forms - Age Restriction</strong></h5>\r\n\r\n<p><strong>Business scenario</strong>: The retailer can configure a variety of age-restriction&nbsp;messaging&nbsp;on the POS application whenever an item is attempted to be added to the cart. The age-restriction&nbsp;messaging on the POS application can be configured as any of the below</p>\r\n\r\n<ol>\r\n\t<li>A simple confirmation message to accept that the customer has met their age or not. If not met, the item will not be added to the cart.</li>\r\n\t<li>A cart input form message with a Numeric entry field.</li>\r\n\t<li>A cart input form message with an age&nbsp;entry field.</li>\r\n</ol>\r\n\r\n<p><strong>Required configuration</strong>: You will be required to configure&nbsp;the \"Cart Prompt\" message that you want to show on the POS application.&nbsp;ItemLabel needs to be created on Items before it's used in the cart event condition.</p>\r\n\r\n<p><strong>Payload URL:&nbsp;</strong>{{url}}/posservice/api/posservice/cartInputFormGroup/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p style=\"margin-left: 40px;\">Age Attestation:&nbsp;<div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-6\" class=\"toggle-content\"><span class=\"toggle-title\">AgeAttestation-cartPrompt</span></a></p><div id=\"tg-6\"><p>{<br />\n&nbsp; &quot;FormGroupId&quot;: &quot;AttestationFormGroup2&quot;,<br />\n&nbsp; &quot;IsCustom&quot;: false,<br />\n&nbsp; &quot;AddMultipleItems&quot;: false,<br />\n&nbsp; &quot;AdminResource&quot;: null,<br />\n&nbsp; &quot;CartInputForm&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;Description&quot;: &quot;Age Restriction&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;DisplaySequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &quot;CartInputFormField&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayAs&quot;: null,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;EnableScanning&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldSequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldRequired&quot;: true,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;I have verified that customer is above 18 years of age&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CartInputFormFieldData&quot;: [],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputField&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputFieldId&quot;: &quot;AttestationEntityField_InputCheckbox&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldId&quot;: &quot;Check_1&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CopyToField&quot;: null<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; ],<br />\n&nbsp; &nbsp; &nbsp; &quot;AllowSkip&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &quot;RichText&quot;: &quot;# ⚠️ Age Restriction\\n\\n\\&quot;This Item has an age restriction associated with it. Please verify customer age.\\&quot;&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Age Restriction&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;FormId&quot;: &quot;AttestationForm&quot;<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;FormGroupType&quot;: {<br />\n&nbsp; &nbsp; &quot;FormGroupTypeId&quot;: &quot;OrderLine&quot;<br />\n&nbsp; },<br />\n&nbsp; &quot;DisplayName&quot;: &quot;AGE RESTRICTION&quot;,<br />\n&nbsp; &quot;CartMode&quot;: null<br />\n}</p>\n</div></div></p>\r\n\r\n<p style=\"margin-left: 40px;\">Age Numeric:&nbsp;<div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-7\" class=\"toggle-content\"><span class=\"toggle-title\">AgeNumeric-CartForm</span></a></p><div id=\"tg-7\"><p>{<br />\n&nbsp; &quot;FormGroupId&quot;: &quot;CustomerAgeFormGroup&quot;,<br />\n&nbsp; &quot;AddMultipleItems&quot;: false,<br />\n&nbsp; &quot;CartInputForm&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;Description&quot;: &quot;Customer Age&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;DisplaySequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &quot;CartInputFormField&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldSize&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;EnableScanning&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldValidation&quot;: &quot;^(?:1[01][0-9]|120|1[8-9]|[2-9][0-9])$&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldSequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldRequired&quot;: true,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldValidationMessage&quot;: &quot;Minimum age required is 18&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Enter Customer Age&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldMaxValue&quot;: &quot;100&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputField&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputFieldId&quot;: &quot;TestCustumerAgeInputField1&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldSizeMessage&quot;: &quot;Overboard&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldMinValue&quot;: &quot;18&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldId&quot;: &quot;CustomerAgeFormField&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; ],<br />\n&nbsp; &nbsp; &nbsp; &quot;AllowSkip&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Customer Age form&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;FormId&quot;: &quot;CustomerAgeForm&quot;<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;FormGroupType&quot;: {<br />\n&nbsp; &nbsp; &quot;FormGroupTypeId&quot;: &quot;OrderLine&quot;<br />\n&nbsp; },<br />\n&nbsp; &quot;DisplayName&quot;: &quot;Customer Age Restriction&quot;,<br />\n&nbsp; &quot;CartMode&quot;: null<br />\n}</p>\n</div></div></p>\r\n\r\n<p style=\"margin-left: 40px;\">Age - Age Input field:&nbsp;<div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-8\" class=\"toggle-content\"><span class=\"toggle-title\">Age-AgeField-CartForm</span></a></p><div id=\"tg-8\"><p>{<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormGroupId&quot;: &quot;CustomerAgeFormGroup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;AddMultipleItems&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CartInputForm&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Description&quot;: &quot;Customer Age&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplaySequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CartInputFormField&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldSequence&quot;: 1,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldRequired&quot;: true,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldValidationMessage&quot;: &quot;You should be minimum of 18 years of age&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Enter/Select date of birth&quot;,</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldMaxValue&quot;: &quot;100&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputField&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InputFieldId&quot;: &quot;CustomerAge002-Age-Input&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldMinValue&quot;: &quot;18&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormFieldId&quot;: &quot;Age-2&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;AllowSkip&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Customer Age form&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormId&quot;: &quot;CustomerAgeForm&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormGroupType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;FormGroupTypeId&quot;: &quot;OrderLine&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;DisplayName&quot;: &quot;Customer Age Restriction&quot;,<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CartMode&quot;: null<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }</p>\n</div></div></p>\r\n\r\n<p>Link&nbsp;the cart prompt group to a cart event:&nbsp;{{url}}/posservice/api/posservice/cartEventConfig/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-9\" class=\"toggle-content\"><span class=\"toggle-title\">AgeAttestation-CartEvent</span></a></p><div id=\"tg-9\"><p>{<br />\n&nbsp; &quot;PeripheralCommandGroup&quot;: null,<br />\n&nbsp; &quot;Description&quot;: &quot;PreAdd-Age-Attestation&quot;,<br />\n&nbsp; &quot;ActionType&quot;: {<br />\n&nbsp; &nbsp; &quot;ActionTypeId&quot;: &quot;CartEventFormGroup&quot;<br />\n&nbsp; },<br />\n&nbsp; &quot;CartEventConfigId&quot;: &quot;PreAdd-AdditionalDetails-Attestation2&quot;,<br />\n&nbsp; &quot;FormGroup&quot;: &quot;AttestationFormGroup2&quot;,<br />\n&nbsp; &quot;MatchAny&quot;: true,<br />\n&nbsp; &quot;CartEvent&quot;: {<br />\n&nbsp; &nbsp; &quot;CartEventId&quot;: &quot;preOrderLineAdd&quot;<br />\n&nbsp; },<br />\n&nbsp; &quot;LocationCriteria&quot;: [],<br />\n&nbsp; &quot;EventRank&quot;: 70,<br />\n&nbsp; &quot;CartEventCondition&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;Operator&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;OperatorId&quot;: &quot;=&quot;<br />\n&nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &quot;AttributeValue&quot;: &quot;true&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;AttributeName&quot;: &quot;Attestation&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;ConditionEntity&quot;: &quot;ItemLabel&quot;<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ]<br />\n}</p>\n</div></div></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"preventive\" id=\"preventive\"></a>Preventive</h4>\r\n\r\n<p>The retailer can choose to configure certain items or groups of items to be restricted for sale at a location or group of locations or all locations. The restricted items will not be added to the cart when scanned or added&nbsp;manually and a configurable message can be displayed on the UI.</p>\r\n\r\n<h5><a name=\"product-restricted-sale\" id=\"product-restricted-sale\"></a>Product restricted sale</h5>\r\n\r\n<p><strong>Business scenario</strong>: The retailer can configure a Preventive pop-up message to show up on the POS application whenever an item is attempted to be added to the cart. This message prompt, when configured for a \"preOrderLineAdd\" cart event, will be displayed and an item will not be&nbsp;added&nbsp;to the cart.</p>\r\n\r\n<p><strong>Required configuration</strong>: You will be required to configure&nbsp;the \"Cart Prompt\" message that you want to show on the POS application.&nbsp;</p>\r\n\r\n<ol>\r\n\t<li>Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup</li>\r\n\t<li>Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/cartEventConfig</li>\r\n\t<li>ItemLabel needs to be created on Items before it's used in the cart event condition.</li>\r\n</ol>\r\n\r\n<p><strong>Payload URL:</strong>&nbsp;{{url}}/posservice/api/posservice/cartPromptGroup/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-10\" class=\"toggle-content\"><span class=\"toggle-title\">Preventive-CartPrompt</span></a></p><div id=\"tg-10\"><p>{</p>\n\n<p>&quot;PromptGroupId&quot;: &quot;CartPrompt-SaleRestricted&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restricted Sale&quot;,</p>\n\n<p>&quot;ContextId&quot;: &quot;0104d344-e872-4538-b858-924b042345ab&quot;,</p>\n\n<p>&quot;CartMode&quot;: null,</p>\n\n<p>&quot;CartPrompt&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;PromptType&quot;: {</p>\n\n<p>&quot;PromptTypeId&quot;: &quot;Preventive&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Description&quot;: &quot;Sale Restricted prompt message&quot;,</p>\n\n<p>&quot;Message&quot;: &quot;This item cannot be sold. If a customer is returning this item, please return it to the warehouse.&quot;,</p>\n\n<p>&quot;DisplayName&quot;: &quot;Restricted Sale&quot;,</p>\n\n<p>&quot;PromptId&quot;: &quot;Restricted Sale&quot;</p>\n\n<p>}</p>\n\n<p>]</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<p>Link&nbsp;the cart prompt group to a cart event:&nbsp;{{url}}/posservice/api/posservice/cartEventConfig/save</p>\r\n\r\n<p>Payload Sample:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-11\" class=\"toggle-content\"><span class=\"toggle-title\">Preventive-cartEvent</span></a></p><div id=\"tg-11\"><p>{</p>\n\n<p>&quot;Description&quot;: &quot;PreOrderAdd-RestrictedSale&quot;,</p>\n\n<p>&quot;ActionType&quot;: {</p>\n\n<p>&quot;ActionTypeId&quot;: &quot;CartEventPromptGroup&quot;</p>\n\n<p>},</p>\n\n<p>&quot;CartEventConfigId&quot;: &quot;CartPrompt-SaleRestricted&quot;,</p>\n\n<p>&quot;FormGroup&quot;: null,</p>\n\n<p>&quot;MatchAny&quot;: false,</p>\n\n<p>&quot;CartEvent&quot;: {</p>\n\n<p>&quot;CartEventId&quot;: &quot;preOrderLineAdd&quot;</p>\n\n<p>},</p>\n\n<p>&quot;LocationCriteria&quot;: [],</p>\n\n<p>&quot;EventRank&quot;: 90,</p>\n\n<p>&quot;CartEventCondition&quot;: [</p>\n\n<p>{</p>\n\n<p>&quot;ConditionEntity&quot;: &quot;Itemlabel&quot;,</p>\n\n<p>&quot;AttributeName&quot;: &quot;RestrictedSale&quot;,</p>\n\n<p>&quot;Operator&quot;: {</p>\n\n<p>&quot;OperatorId&quot;: &quot;=&quot;</p>\n\n<p>},</p>\n\n<p>&quot;AttributeValue&quot;: &quot;true&quot;</p>\n\n<p>}</p>\n\n<p>],</p>\n\n<p>&quot;PromptGroup&quot;: &quot;PreOrderAdd-RestrictedSale&quot;</p>\n\n<p>}</p>\n</div></div></p>\r\n\r\n<h3><a name=\"limited-capability\" id=\"limited-capability\"></a>Limited capability</h3>\r\n\r\n<p>Below is a summary of existing limitations to cart prompts.</p>\r\n\r\n<ol>\r\n\t<li>Only one Cart Prompt message can be displayed per cart prompt&nbsp;group.</li>\r\n\t<li>If an item has a cart prompt to be displayed, rapid scan is not available unless the prompt is acknowledged.</li>\r\n\t<li>Informative prompts work for pre-and-post order line add cart event. But preventive prompts only work with pre-order line and cart events.</li>\r\n\t<li>Cart Prompt/Input forms configured with preOrderLineAdd cart event is only supported in Sale mode.</li>\r\n\t<li>\r\n\t<p>If an Item added to the cart has 3 matching CartEvents. Rank 1 is cartInputFormGroup (CustomerAgePopUp) and Rank 2 is preventive prompt and Rank 3 informative prompt. Here, this will be a configuration&nbsp;issue because the application will show an input form first&nbsp;and then, as Rank 2 is preventive, an item will not get added. So the recommendation is to rank preventive prompts before the input forms.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p>If Add Item is configured in the context menu or configured for checkout.&nbsp;This does cannot have&nbsp;a matching&nbsp;condition for the preOrderLine to show prompt or cart Input Form. This is not supported for preOrderLineAdd cart Prompt or Cart Input Form, No pop-up messages will be prompted for this scenario.</p>\r\n\t</li>\r\n</ol>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a><a id=\"services\" name=\"services\"></a>Services</h3>\r\n\r\n<p>The following&nbsp;are the key APIs related to cart forms.&nbsp;Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" height=\"189\" style=\"width: 1006px;\" width=\"1071\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Service</th>\r\n\t\t\t<th scope=\"col\">Component</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 517px;\">Service Endpoint</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>cart Prompt</td>\r\n\t\t\t<td>posservice</td>\r\n\t\t\t<td style=\"width: 502px;\">/api/posservice/cartPrompt</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Cart Prompt Group</td>\r\n\t\t\t<td>posservice</td>\r\n\t\t\t<td style=\"width: 502px;\">/api/posservice/CartPromptGroup</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Item Annotations</td>\r\n\t\t\t<td>item</td>\r\n\t\t\t<td style=\"width: 502px;\">/api/item/item/save</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Location Annotations</td>\r\n\t\t\t<td>organization</td>\r\n\t\t\t<td style=\"width: 502px;\">/api/organization/location/save</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<hr>\r\n<p>&nbsp;</p>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 41638,
  "scraped_at": "2025-08-09T22:01:58.454555",
  "content_clean": "Home ››Manhattan Active® Omni››Store››Process & Configuration Guides››Point of Sale››POS Guides ››Cart Prompts Cart Prompts Cart Prompt GroupCart PromptDefining rich text for cart prompt messagesConfigure Dynamic data on prompt messagesItem Labels and label FrameworkLocation GroupCart Prompt - OfflineUse CasesInformativeInformative Prompts - Restocking Fee on sale itemsInformative Prompts - Final Sale Additional data forms - Age RestrictionPreventiveProduct restricted saleLimited capabilityServices Overview The Cart Prompts feature within the Cart Input Form Framework allows for the display of essential information to the POS users/customers without requiring any input from user. These prompts serve as a mechanism for conveying important messages, guidelines, or contextual details during the selling or return process. Key Features for POS Integration Seamless UI Display: Information is displayed in a structured, non-editable format within the POS UI. Contextual Triggering: Prompts appear dynamically based on configured cart events when an item is added to the cart. Customizable per Retailer needs: Messages can be tailored to comply with store policies, regional regulations, or product disclaimers Enhanced Compliance & Accuracy: Ensures that POS users receive mandatory notifications without the risk of manual data entry errors. Location-specific Support: Cart prompts can be configured to display messages based on locations. Use Cases for Cart Prompts Currently cart prompts are built to serve at item level. Cart prompts cannot be used for transaction level messaging. This capability can be utilized in various scenarios, including: Preventive prompts: Providing product recall warnings for restricted items, restricting sale of items at particular locations etc. Informative prompts: Displaying mandatory disclaimers like Final Sale, Overweight etc. Providing more information about the product, which includes restocking fee if applicable on return of product. By integrating Cart Prompts into the POS system, retailers can streamline checkout interactions, enforce policies, and improve the overall user experience while maintaining compliance with legal and business requirements. Cart Prompts Workflow The framework has two aspects. Defining the message that needs to be displayed on the POS solution and the second aspect is configuring events to trigger these prompts. This framework will use the same aspects as defined in Cart Form The \"Cart Event\" and \"Cart Form\" MUP UI screens will help the user to create and configure events/prompts for a defined condition. These conditions will be used to initiate prompt messages on the UI. The prompt messages can be created and configured from the cart prompt configuration screen. Both these UIs are built as a wizard to help users through a step-by-step process of creating the configuration. Cart Event Refer to the cart event details and the configuration steps here: Cart Event Note: Cart Prompts only support \"PreOrderLineAdd\" and \"PostOrderLineAdd\" cart events. \"preOrderLineAdd\" cart Event uses local storage for items and their prices, so it's mandatory to export this data to the MAO POS application for local storage. The configured Input forms or cart prompts will not work as expected without this data. Read more on exports here Cart Prompt Configuration There are many entities involved in this workflow, whilst the basic concept is that you define a trigger point which is an event and its conditions, and associate this event with forms via form group. The sections below are entities involved in the cart event/form design. Cart Prompt Group The cart prompt group is the entity that groups one or more related prompts and creates the association between the prompts based on display sequence. For example, if there are two prompts required to be displayed to the user, then two separate prompt messages can be configured, which are linked by the prompt group. The event is configured to invoke a prompt group, and the prompt group will list all the prompt messages associated with the group. The configuration is for future use cases. Currently, only one prompt message per prompt group is supported. If there is a requirement to show multiple prompt messages for the same cart event condition, then consider configuring these prompts separately in different prompt groups. Sample Data: promptGroupId displayName(localized) resourceId FinalSaleItemPromptGroup Final Sale RestrictedSalePromptGroup Restricted Item More Details resourceId: This is not implemented or is being used right now. This will be reserved for future use. Cart Prompt The cart input form entity is a new configuration entity introduced to capture the configuration for a form. A form is nothing but a simple UI form that can be used to input and capture information. A form can contain one or more fields, which are defined in the cartInputFormField entity. Cart input forms can be configured as needed by retailers. A business user can configure one or many forms as required for the use case that they are trying to solve. A name can be given for the form that will be displayed in the UI, when the form is rendered. When configuring multiple forms to solve a single requirement, a sequence can also be provided to indicate when the form should appear in the flow. The cart input form entity will be seeded with all the form configurations that are required by base. Services and customers can create their own configurations as needed. Sample form data: parentPromptGroup promptId displayName (localized) description promptType message (not localized) FinalSaleItemPromptGroup FinalSaleItemPrompt FINAL SALE Informative Final Sale: Clearance items are not eligible for returns or exchanges. RestrictedSalePromptGroup RestrictedSalePrompt RESTRICTED ITEM Preventive Restricted Sale: This item cannot be sold in this location. More Details: Prompt Type Informative This is an informational message on the POS terminal, the user can acknowledge and the item is added to the cart. This promptType is only supported for preOrderLineAdd and posOrderLineAdd cart Events and not for onCartCheckout. Preventive This will prompt a message on the POS terminal, but the item is not added to the cart. This promptType is only supported for preOrderLineAdd. message This can be defined as rich text. Please read more in the section below on the rich text message in \"Cart Prompt\" is currently not localized. Defining rich text for cart prompt messages The message on the cart prompt supports rich text, it can be defined to support different fonts, bold, Italics etc. Also, it can be defined to support dynamic values. Rich text: Currently the system is being tested to work for different fonts, bold, Italics etc., but it also supports colors, hyperlinks, images etc. But the latter is not tested with all the combinations because of the vast capabilities of rich text. You can use any online markdown tools available on the web to create a rich text and configure this text on the cart prompt message. R&D has referred to: External link during the development and testing phases (Since this is an external free source link, it cannot guarantee the availability). Configure Dynamic data on prompt messages Dynamic data: If you have a requirement to use some attributes in the order json to construct the message that needs to be displayed to the user, then it can be done using this rich text  on the cartPrompt.message field. This can only be used for attributes on Order and OrderLine entities or its child entities. Dynamic array: Use the sample below if you want to use some attributes in orderLine.ReturnFee and some attributes in orderLine.ReturnFee.ReturnFeeTypeId. You will be required to have a start and end for the entity when you define the message. Example: {{#OrderLine.ReturnFee}} A {{ReturnFeeDisplayName}} of {{ReturnFeeValue}} ({{ReturnFeeTypeId.FeeType}}) applies to return of this item {{/OrderLine.ReturnFee}} This example is used for a restocking fee prompt message that is displayed when an item is added to the cart. The final message will be \"A Restocking Fee of 2 (Flat Fee) applies to return of this item.\" Static variable, not an array: If you want to configure an attribute inside the orderLine entities then you should use the attributes directly without providing the start and end of that entity when you define the message. Example: Item {{OrderLine.ItemId}} is subject to a 20% restocking fee. The final message will be \"Item PR0040 is subject to a 20% restocking fee\" Please note: Dynamic/static data will not be available for pre-orderLineAdd cart event. Order or OrderLine attributes are applicable to the \"postOrderLineAdd\" cart event and order attributes are applicable for \"onCheckout\" cart event. Item Labels and label Framework Cart Prompt messages which are configured to a \"preOrderLineAdd\" cart event need to use \"ItemLabel\" as cartEventCondition. Refer to cart event page for more details on configuration. It is recommended to use \"ItemLabel\" more often because it helps to make the prompts or forms more specific to the item or group of items. Location Group If you have a requirement to show messages which are location specific and should be displayed only for a specific location or group of locations, then use the configuration in cart event > location criteria. This is detailed here: Cart event location group Cart Prompt - Offline Cart prompt messages are supported when a POS application is in offline mode. The user can still get the configured cart prompt messages even when the device is in offline mode. This is achieved by storing the configured cart prompts from static data into the local storage of the device. Use Cases The following are some examples that use the cart prompt framework to show the messages on the Manhattan Active Omni® POS UI. Informative Informative Prompts - Restocking Fee on sale items Retailers can configure item level fees. For example, restocking fees or overweight handling fees when a customer returns an individual product. This fee can be configured as a percentage of the item price, a flat fee or a per quantity fee. Read more on process and related configuration here. Business scenario: The retailer can configure a pop-up message to show up on the POS application, if the item that is added to the sale cart has some restocking fees that are applicable if the item is returned. Required configuration: You will be required to configure the \"Cart Prompt\" message that you want to show on the POS application. Create a new cart event for \"postOrderLineAdd\" cart event Id and link it to thecart prompt. You need to use the \"Restocking Fee\" Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/CartEventConfig Payload URL: {{url}}/posservice/api/posservice/cartPromptGroup/save Request Payload Sample 1: Use this for dynamic data requirements Restock-CartPrompt1{ \"PromptGroupId\": \"CartPrompt-RestockFee\", \"DisplayName\": \"Restock Fee Prompt\", \"CartMode\": null, \"CartPrompt\": [ { \"PromptId\": \"RestockFee\", \"PromptType\": { \"PromptTypeId\": \"Informative\" }, \"Description\": \"Restock Fee Prompting on the UI\", \"Message\": \"{{#OrderLine.ReturnFee}} A {{ReturnFeeDisplayName}} of {{ReturnFeeValue}} ({{ReturnFeeTypeId.FeeType}}) applies to return of this item. {{/OrderLine.ReturnFee}}\", \"DisplayName\": \"Restock Fee\" } ] } Request Payload Sample 2: use this for static messaging requirements Restock-cartPrompt2{ \"PromptGroupId\": \"CartPrompt-RestockFee2\", \"DisplayName\": \"Restock Fee Prompt\", \"CartMode\": null, \"CartPrompt\": [ { \"PromptId\": \"RestockFee2\", \"PromptType\": { \"PromptTypeId\": \"Informative\" }, \"Description\": \"Restock Fee Prompting on the UI\", \"Message\": \"This item is subject to a Restocking Fee if returned. Please advise the customer of this item's status.\", \"DisplayName\": \"Restock Fee\" } ] } Link the cart prompt group to a cart event: {{url}}/posservice/api/posservice/CartEventConfig/save Restock-CartEvent{ \"Description\": \"PostOrderAdd-Info-RestockFee\", \"ActionType\": { \"ActionTypeId\": \"CartEventPromptGroup\" }, \"CartEventConfigId\": \"PostAdd-Info-RestockFee\", \"FormGroup\": null, \"MatchAny\": false, \"CartEvent\": { \"CartEventId\": \"postOrderLineAdd\" }, \"LocationCriteria\": [], \"EventRank\": 90, \"CartEventCondition\": [ { \"ConditionEntity\": \"ReturnFee\", \"AttributeName\": \"ReturnFeeId\", \"Operator\": { \"OperatorId\": \"=\" }, \"AttributeValue\": \"RestockingFee\" }, { \"ConditionEntity\": \"OrderLine\", \"AttributeName\": \"IsReturn\", \"Operator\": { \"OperatorId\": \"!=\" }, \"AttributeValue\": \"true\" } ], \"PromptGroup\": \"CartPrompt-RestockFee\" } The restocking or any return fee that you are using as cart event condition needs to be present in system. Refer for more info Informative Prompts - Final Sale Business scenario: The retailer can configure an Informative pop-up message to show up on the POS application whenever an item is attempted to be added to the cart. This informative prompt, when configured for a \"preOrderLineAdd\" cart event, will be displayed before adding the item to cart. Required configuration: You will be required to configure the \"Cart Prompt\" message that you want to show on the POS application. Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/cartEventConfig ItemLabel needs to be created on Items before it's used in the cart event condition. Payload URL: {{url}}/posservice/api/posservice/cartPromptGroup/save Payload Sample: FinalSale-CartPrompt{ \"PromptGroupId\": \"CartPrompt-FinalSale\", \"DisplayName\": \"Final Sale\", \"ContextId\": \"0104d344-e872-4538-b858-924b042345ab\", \"CartMode\": null, \"CartPrompt\": [ { \"PromptType\": { \"PromptTypeId\": \"Informative\" }, \"Description\": \"Final Sale prompt message\", \"Message\": \"This item is sold as a final sale. No returns, refunds, or exchanges will be accepted. Please review your order before completing the purchase.\", \"DisplayName\": \"Final Sale\", \"PromptId\": \"Final Sale\" } ] } Link the cart prompt group to a cart event: {{url}}/posservice/api/posservice/cartEventConfig/save Payload Sample: FinalSale-CartEvent{ \"Description\": \"PreOrderAdd-FinalSale\", \"ActionType\": { \"ActionTypeId\": \"CartEventPromptGroup\" }, \"CartEventConfigId\": \"CartPrompt-FinalSale\", \"FormGroup\": null, \"MatchAny\": false, \"CartEvent\": { \"CartEventId\": \"preOrderLineAdd\" }, \"LocationCriteria\": [], \"EventRank\": 90, \"CartEventCondition\": [ { \"ConditionEntity\": \"Itemlabel\", \"AttributeName\": \"FinalSale\", \"Operator\": { \"OperatorId\": \"=\" }, \"AttributeValue\": \"true\" } ], \"PromptGroup\": \"PreOrderAdd-FinalSale\" } Additional data forms - Age Restriction Business scenario: The retailer can configure a variety of age-restriction messaging on the POS application whenever an item is attempted to be added to the cart. The age-restriction messaging on the POS application can be configured as any of the below A simple confirmation message to accept that the customer has met their age or not. If not met, the item will not be added to the cart. A cart input form message with a Numeric entry field. A cart input form message with an age entry field. Required configuration: You will be required to configure the \"Cart Prompt\" message that you want to show on the POS application. ItemLabel needs to be created on Items before it's used in the cart event condition. Payload URL: {{url}}/posservice/api/posservice/cartInputFormGroup/save Payload Sample: Age Attestation: AgeAttestation-cartPrompt{ \"FormGroupId\": \"AttestationFormGroup2\", \"IsCustom\": false, \"AddMultipleItems\": false, \"AdminResource\": null, \"CartInputForm\": [ { \"Description\": \"Age Restriction\", \"DisplaySequence\": 1, \"CartInputFormField\": [ { \"DisplayAs\": null, \"EnableScanning\": false, \"FormFieldSequence\": 1, \"FormFieldRequired\": true, \"DisplayName\": \"I have verified that customer is above 18 years of age\", \"CartInputFormFieldData\": [], \"InputField\": { \"InputFieldId\": \"AttestationEntityField_InputCheckbox\" }, \"FormFieldId\": \"Check_1\", \"CopyToField\": null } ], \"AllowSkip\": false, \"RichText\": \"# ⚠️ Age Restriction\\n\\n\\\"This Item has an age restriction associated with it. Please verify customer age.\\\"\", \"DisplayName\": \"Age Restriction\", \"FormId\": \"AttestationForm\" } ], \"FormGroupType\": { \"FormGroupTypeId\": \"OrderLine\" }, \"DisplayName\": \"AGE RESTRICTION\", \"CartMode\": null } Age Numeric: AgeNumeric-CartForm{ \"FormGroupId\": \"CustomerAgeFormGroup\", \"AddMultipleItems\": false, \"CartInputForm\": [ { \"Description\": \"Customer Age\", \"DisplaySequence\": 1, \"CartInputFormField\": [ { \"FormFieldSize\": 1, \"EnableScanning\": false, \"FormFieldValidation\": \"^(?:1[01][0-9]|120|1[8-9]|[2-9][0-9])$\", \"FormFieldSequence\": 1, \"FormFieldRequired\": true, \"FormFieldValidationMessage\": \"Minimum age required is 18\", \"DisplayName\": \"Enter Customer Age\", \"FormFieldMaxValue\": \"100\", \"InputField\": { \"InputFieldId\": \"TestCustumerAgeInputField1\" }, \"FormFieldSizeMessage\": \"Overboard\", \"FormFieldMinValue\": \"18\", \"FormFieldId\": \"CustomerAgeFormField\" } ], \"AllowSkip\": false, \"DisplayName\": \"Customer Age form\", \"FormId\": \"CustomerAgeForm\" } ], \"FormGroupType\": { \"FormGroupTypeId\": \"OrderLine\" }, \"DisplayName\": \"Customer Age Restriction\", \"CartMode\": null } Age - Age Input field: Age-AgeField-CartForm{ \"FormGroupId\": \"CustomerAgeFormGroup\", \"AddMultipleItems\": false, \"CartInputForm\": [ { \"Description\": \"Customer Age\", \"DisplaySequence\": 1, \"CartInputFormField\": [ { \"FormFieldSequence\": 1, \"FormFieldRequired\": true, \"FormFieldValidationMessage\": \"You should be minimum of 18 years of age\", \"DisplayName\": \"Enter/Select date of birth\", \"FormFieldMaxValue\": \"100\", \"InputField\": { \"InputFieldId\": \"CustomerAge002-Age-Input\" }, \"FormFieldMinValue\": \"18\", \"FormFieldId\": \"Age-2\" } ], \"AllowSkip\": false, \"DisplayName\": \"Customer Age form\", \"FormId\": \"CustomerAgeForm\" } ], \"FormGroupType\": { \"FormGroupTypeId\": \"OrderLine\" }, \"DisplayName\": \"Customer Age Restriction\", \"CartMode\": null } Link the cart prompt group to a cart event: {{url}}/posservice/api/posservice/cartEventConfig/save Payload Sample: AgeAttestation-CartEvent{ \"PeripheralCommandGroup\": null, \"Description\": \"PreAdd-Age-Attestation\", \"ActionType\": { \"ActionTypeId\": \"CartEventFormGroup\" }, \"CartEventConfigId\": \"PreAdd-AdditionalDetails-Attestation2\", \"FormGroup\": \"AttestationFormGroup2\", \"MatchAny\": true, \"CartEvent\": { \"CartEventId\": \"preOrderLineAdd\" }, \"LocationCriteria\": [], \"EventRank\": 70, \"CartEventCondition\": [ { \"Operator\": { \"OperatorId\": \"=\" }, \"AttributeValue\": \"true\", \"AttributeName\": \"Attestation\", \"ConditionEntity\": \"ItemLabel\" } ] } Preventive The retailer can choose to configure certain items or groups of items to be restricted for sale at a location or group of locations or all locations. The restricted items will not be added to the cart when scanned or added manually and a configurable message can be displayed on the UI. Product restricted sale Business scenario: The retailer can configure a Preventive pop-up message to show up on the POS application whenever an item is attempted to be added to the cart. This message prompt, when configured for a \"preOrderLineAdd\" cart event, will be displayed and an item will not be added to the cart. Required configuration: You will be required to configure the \"Cart Prompt\" message that you want to show on the POS application. Cart prompt configuration screen: {{url}}//om/dm-config/screen/posservice/cartPromptGroup Cart Event configuration screen: {{url}}/om/dm-config/screen/posservice/cartEventConfig ItemLabel needs to be created on Items before it's used in the cart event condition. Payload URL: {{url}}/posservice/api/posservice/cartPromptGroup/save Payload Sample: Preventive-CartPrompt{ \"PromptGroupId\": \"CartPrompt-SaleRestricted\", \"DisplayName\": \"Restricted Sale\", \"ContextId\": \"0104d344-e872-4538-b858-924b042345ab\", \"CartMode\": null, \"CartPrompt\": [ { \"PromptType\": { \"PromptTypeId\": \"Preventive\" }, \"Description\": \"Sale Restricted prompt message\", \"Message\": \"This item cannot be sold. If a customer is returning this item, please return it to the warehouse.\", \"DisplayName\": \"Restricted Sale\", \"PromptId\": \"Restricted Sale\" } ] } Link the cart prompt group to a cart event: {{url}}/posservice/api/posservice/cartEventConfig/save Payload Sample: Preventive-cartEvent{ \"Description\": \"PreOrderAdd-RestrictedSale\", \"ActionType\": { \"ActionTypeId\": \"CartEventPromptGroup\" }, \"CartEventConfigId\": \"CartPrompt-SaleRestricted\", \"FormGroup\": null, \"MatchAny\": false, \"CartEvent\": { \"CartEventId\": \"preOrderLineAdd\" }, \"LocationCriteria\": [], \"EventRank\": 90, \"CartEventCondition\": [ { \"ConditionEntity\": \"Itemlabel\", \"AttributeName\": \"RestrictedSale\", \"Operator\": { \"OperatorId\": \"=\" }, \"AttributeValue\": \"true\" } ], \"PromptGroup\": \"PreOrderAdd-RestrictedSale\" } Limited capability Below is a summary of existing limitations to cart prompts. Only one Cart Prompt message can be displayed per cart prompt group. If an item has a cart prompt to be displayed, rapid scan is not available unless the prompt is acknowledged. Informative prompts work for pre-and-post order line add cart event. But preventive prompts only work with pre-order line and cart events. Cart Prompt/Input forms configured with preOrderLineAdd cart event is only supported in Sale mode. If an Item added to the cart has 3 matching CartEvents. Rank 1 is cartInputFormGroup (CustomerAgePopUp) and Rank 2 is preventive prompt and Rank 3 informative prompt. Here, this will be a configuration issue because the application will show an input form first and then, as Rank 2 is preventive, an item will not get added. So the recommendation is to rank preventive prompts before the input forms. If Add Item is configured in the context menu or configured for checkout. This does cannot have a matching condition for the preOrderLine to show prompt or cart Input Form. This is not supported for preOrderLineAdd cart Prompt or Cart Input Form, No pop-up messages will be prompted for this scenario. Services The following are the key APIs related to cart forms. Refer to the API documentation for additional details on each service. Service Component Service Endpoint cart Prompt posservice /api/posservice/cartPrompt Cart Prompt Group posservice /api/posservice/CartPromptGroup Item Annotations item /api/item/item/save Location Annotations organization /api/organization/location/save"
}