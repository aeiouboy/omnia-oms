{
  "id": "2837120",
  "permalink": "deliverydateperformance",
  "title": "Delivery Date Performance Dashboard",
  "type": "topic",
  "level": 5,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Order Promising/Interactive Inventory/Delivery Date Performance Dashboard",
  "raw_item": {
    "id": "2837120",
    "text": "Delivery Date Performance Dashboard",
    "title": "Delivery Date Performance Dashboard",
    "permalink": "deliverydateperformance",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "290126",
    "parent": "f;290126",
    "created_date": "1631102712",
    "modified_date": "1750667745",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "5"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158972\" href=\"/order-promising\" class=\"breadcrumb-links\">Order Promising</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2592404\" href=\"/interactive-inv\" class=\"breadcrumb-links\">Interactive Inventory</a></li><li> <span>››</span>Delivery Date Performance Dashboard</li></ul>  \t\r\n\t\t<h2>Delivery Date Performance Dashboard</h2>\r\n\r\n<p></p>\r\n\r\n<a href=\"/metrics-dashboard\" hqid=\"2683666\">Previous</a>&nbsp;I&nbsp;\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/deliverydateperformance$overview\">Overview</a></li><li><a href=\"/deliverydateperformance$process-flow\">Process Flow</a></li><li><a href=\"/deliverydateperformance$what-is-tracked\">What is Tracked</a></li><li><a href=\"/deliverydateperformance$delivery-date-performance-metrics\">Delivery Date Performance Metrics</a><ul><li><a href=\"/deliverydateperformance$order-metrics\">Order Metrics</a><ul><li><a href=\"/deliverydateperformance$shipment-delivered-count\">Shipment Delivered Count</a></li><li><a href=\"/deliverydateperformance$shipment-delivered-predicted-count\">Shipment Delivered Predicted Count</a></li><li><a href=\"/deliverydateperformance$shipment-delivered-leadtime-count\">Shipment Delivered LeadTime Count</a></li><li><a href=\"/deliverydateperformance$shipment-delivered-predicted-leadtime-count\">Shipment Delivered Predicted LeadTime Count</a></li></ul></li></ul></li><li><a href=\"/deliverydateperformance$delivery-date-promise-performance-dashboard-ui\">Delivery Date Promise Performance Dashboard UI</a><ul><li><a href=\"/deliverydateperformance$include-child-organizations\">Include Child Organizations</a></li><li><a href=\"/deliverydateperformance$localization-formatting\">Localization & Formatting</a></li><li><a href=\"/deliverydateperformance$integration\">Integration</a></li></ul></li><li><a href=\"/deliverydateperformance$configuration\">Configuration</a><ul><li><a href=\"/deliverydateperformance$grant\">Grant</a></li><li><a href=\"/deliverydateperformance$seed-data\">Seed Data</a></li></ul></li><li><a href=\"/deliverydateperformance$not-supported\">Not Supported</a></li><li><a href=\"/deliverydateperformance$implementation-flavors\">Implementation Flavors</a></li><li><a href=\"/deliverydateperformance$troubleshooting\">Troubleshooting</a><ul><li><a href=\"/deliverydateperformance$not-able-to-see-any-data-on-dashboard\">Not able to see any data on Dashboard</a></li><li><a href=\"/deliverydateperformance$getting-error-while-loading-the-page\">Getting Error while loading the page</a></li><li><a href=\"/deliverydateperformance$the-number-of-delivered-shipments-is-less-or-more-than-the-actual\">The number of delivered shipments is less or more than the actual</a></li></ul></li><li><a href=\"/deliverydateperformance$services\">Services</a></li><li><a href=\"/deliverydateperformance$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"overview\" id=\"overview\"></a>Overview</h3>\r\n\r\n<p>The Interactive Inventory feature helps the retailer to calculate accurate and optimized delivery dates in real-time across every stage of the buyer's journey. In order to provide insights into key metrics and KPIs related to Inventory and Promising, such as delivery date lead times and inventory availability, the Interactive Inventory Metrics Dashboard was introduced. This dashboard provides visibility to the Availability API calls, Delivery Date API calls, and the orders created. Refer to the <a href=\"http://omni.helpdocsonline.com/metrics-dashboard\">metric dashboard</a> for more details.&nbsp;</p>\r\n\r\n<p>The “Delivery Date Promise Performance” dashboard has been introduced to provide key metrics and KPIs related to delivery performance. This enables retailers to monitor and understand how they are performing related to the promises they are making to customers in terms of expected delivery dates. It provides high-level visibility in near real-time into key metrics related to total shipments delivered.&nbsp;The dashboard enables users to:</p>\r\n\r\n<ul>\r\n\t<li>Track how well a retailer is meeting the delivery promise to its customers</li>\r\n\t<li>Identify the trends for shipments delivered OnTime, Early or Late over the last 14 days</li>\r\n\t<li>Assess the timely delivery against promised Lead Times with respect to Service Levels</li>\r\n</ul>\r\n\r\n<h6 data-renderer-start-pos=\"108\" id=\"View-details-based-on-MAML\"><a id=\"MAML\" name=\"MAML\"></a>View details based on MAML</h6>\r\n\r\n<p data-renderer-start-pos=\"136\">Whenever an order is allocated, the promising dates such as Earliest Ship Date and Earliest Delivery Date calculated based on the “Optimization Fulfillment” strategy are persisted in the system. Additionally, orders can arrive with a Requested Delivery Date and Promised Delivery Date as well.&nbsp;Also, these dates are used by the retailers for customer communication, release information to fulfillment location, and for other reporting systems. These dates are calculated as per configuration data. If a retailer enables the Machine Learning feature to predict dates based on historical data, predicted dates are calculated by the ML algorithm and persisted in the system. Based on whether the Machine Learning Feature is enabled in Active or Passive mode, these dates can be used either for communication or just for reporting. Refer to&nbsp;<a href=\"https://omni.helpdocsonline.com/predict-promising-with-machine-learning\">Predict Promising with Machine Learning</a>&nbsp;for more details.</p>\r\n\r\n<p data-renderer-start-pos=\"880\">The dashboard compares dates calculated by configuration data&nbsp;(Earliest Ship Date, Earliest Delivery Date, Requested Delivery Date, Promised Delivery Date) with actual ship and delivery dates for displaying data. If the user wants to evaluate the delivery performance based on predicted dates, the View Comparison check box on the UI can be enabled. This will refresh the dashboard with details based on comparison between predicted dates with actual dates. The dashboard will also show the comparison between both modes. This would help retailers to gauge \" how predicted dates would impact their Delivery Performance metrics\".</p>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"880\"><strong>Note</strong>: Comparison checkbox will be disabled if the <a href=\"https://omni.helpdocsonline.com/predict-promising-with-machine-learning$step-6-turn-on-prediction-select-prediction-mode-options\">Predictive Promising Config</a> is set to Off</div>\r\n\r\n<h6 data-renderer-start-pos=\"1430\">#1 If 100 orders are delivered and dates calculated by configuration data and predicted dates are the same for 95 orders but different for 5 orders</h6>\r\n\r\n<table border=\"1\" data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"61\" rowspan=\"1\" scope=\"col\" style=\"width: 77px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1549\"><strong data-renderer-mark=\"true\">Orders</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"102\" rowspan=\"1\" scope=\"col\" style=\"width: 158px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1559\"><strong data-renderer-mark=\"true\">Actual Dates</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"115\" rowspan=\"1\" scope=\"col\" style=\"width: 200px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1575\">Dates calculated by configuration data</p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"122\" rowspan=\"1\" scope=\"col\" style=\"width: 211px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1595\"><strong data-renderer-mark=\"true\">Predicted Dates</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"106\" rowspan=\"1\" scope=\"col\" style=\"width: 143px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1614\">Dates calculated by configuration data&nbsp;<strong data-renderer-mark=\"true\">Vs Predicted dates</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"133\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"1642\"><strong data-renderer-mark=\"true\">Performance as per </strong>dates calculated by configuration data&nbsp;</p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"121\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"1680\"><strong data-renderer-mark=\"true\">Performance as per Predicted Dates</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"61\" rowspan=\"1\" style=\"width: 75px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1720\">50 orders created/allocated</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"102\" rowspan=\"1\" style=\"width: 156px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"1753\">Shipped Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"1778\">Delivered Date = <strong data-renderer-mark=\"true\">Jan 20</strong></li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"115\" rowspan=\"1\" style=\"width: 197px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"1809\">Earliest Ship Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"1840\">Earliest Delivery Date = <strong data-renderer-mark=\"true\">Jan 18</strong></li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"122\" rowspan=\"1\" style=\"width: 209px;\">\r\n\t\t\t<p data-renderer-start-pos=\"1877\">For 45 orders</p>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"1894\">Predicted Ship Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"1926\">Predicted Delivery Date = <strong data-renderer-mark=\"true\">Jan 18</strong></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"1962\">For 5 orders</p>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"1978\">Predicted Ship Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2010\">Predicted Delivery Date = <strong data-renderer-mark=\"true\">Jan 20</strong></li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"106\" rowspan=\"1\" style=\"width: 140px;\">\r\n\t\t\t<p data-renderer-start-pos=\"2048\">The predicted date is the same as the dates calculated by configuration data for 45 orders but different for the remaining 5 orders.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"133\" rowspan=\"2\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2141\">50 Late Orders</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2159\">50 OnTime Orders</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"2177\">OnTime = 50 %, Late = 50 %</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"121\" rowspan=\"2\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2211\">45 Late Orders</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2229\">55 OnTime Orders</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"2247\">OnTime = 55 %, Late = 45 %</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"61\" rowspan=\"1\" style=\"width: 75px;\">\r\n\t\t\t<p data-renderer-start-pos=\"2281\">50 orders created/allocated</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"102\" rowspan=\"1\" style=\"width: 156px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2314\">Shipped Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2339\">Delivered Date = Jan 20</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"115\" rowspan=\"1\" style=\"width: 197px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2370\">Earliest Ship Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2401\">Earliest Delivery Date = Jan 20</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"122\" rowspan=\"1\" style=\"width: 209px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2440\">Predicted Ship Date = Jan 15</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2472\">Predicted Delivery Date = Jan 20</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"106\" rowspan=\"1\" style=\"width: 140px;\">\r\n\t\t\t<p data-renderer-start-pos=\"2510\">Same for all 50 Orders</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p data-renderer-start-pos=\"2537\">&nbsp;</p>\r\n\r\n<h6 data-renderer-start-pos=\"2539\">#2 If 200 orders are delivered and lead time days are different for predicted dates compared to the dates calculated by configuration data.</h6>\r\n\r\n<p data-renderer-start-pos=\"2654\"><strong>Dates calculated by configuration data<strong data-renderer-mark=\"true\">:</strong></strong></p>\r\n\r\n<table border=\"1\" data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"48\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"2670\"><strong data-renderer-mark=\"true\">Orders</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"180\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"2680\"><strong data-renderer-mark=\"true\">Lead Time as per </strong>dates calculated by configuration data</p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"196\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"2717\"><strong data-renderer-mark=\"true\">Performance as per </strong>dates calculated by configuration data</p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"336\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"2756\"><strong data-renderer-mark=\"true\">Average Lead Time</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"48\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2779\">100 Orders</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"180\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2793\">7 days</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"196\" rowspan=\"1\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2805\">OnTime = 50</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2820\">Early = 25</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2834\">Late = 25</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"2847\">OnTime = 50%, Early = 25%, Late = 25%</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"336\" rowspan=\"2\">\r\n\t\t\t<p data-renderer-start-pos=\"2888\">= ( 100 X 7 + 100 X 8 ) / 200 = <strong data-renderer-mark=\"true\">7.5 days</strong></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"48\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2934\">100 orders</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"180\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2948\">8 days</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"196\" rowspan=\"1\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"2960\">OnTime = 50</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2975\">Early = 25</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"2989\">Late = 25</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"3002\">OnTime = 50%, Early = 25%, Late = 25%</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p data-renderer-start-pos=\"3044\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"3046\"><strong data-renderer-mark=\"true\">Predicted:</strong></p>\r\n\r\n<table border=\"1\" data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t</colgroup>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"60\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"3061\"><strong data-renderer-mark=\"true\">Orders</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"169\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"3071\"><strong data-renderer-mark=\"true\">Lead Time as per Predicted Dates</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"195\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"3107\"><strong data-renderer-mark=\"true\">Performance as per Predicted Dates</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colorname=\"\" colspan=\"1\" data-colwidth=\"336\" rowspan=\"1\" scope=\"col\">\r\n\t\t\t<p data-renderer-start-pos=\"3145\"><strong data-renderer-mark=\"true\">Average Lead Time</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"60\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3168\">80 Orders</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"169\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3181\">7 days</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"195\" rowspan=\"1\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"3193\">OnTime = 50</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"3208\">Early = 25</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"3222\">Late = 5</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"3234\">OnTime = 63% <strong data-renderer-mark=\"true\">(+13%), </strong>Early = 31% <strong data-renderer-mark=\"true\">(+6%), </strong>Late = 6% <strong data-renderer-mark=\"true\">(-19%)</strong></p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"336\" rowspan=\"2\">\r\n\t\t\t<p data-renderer-start-pos=\"3294\">= ( 80 X 7 + 120 X 8 ) / 200 = <strong data-renderer-mark=\"true\">7.6 days ( +0.1 )</strong></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"60\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3348\">120 orders</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"169\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3362\">8 days</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"195\" rowspan=\"1\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"3374\">OnTime = 70</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"3389\">Early = 25</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"3403\">Late = 25</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<p data-renderer-start-pos=\"3416\">OnTime = 58% <strong data-renderer-mark=\"true\">(+8%), </strong>Early = 21% <strong data-renderer-mark=\"true\">(-4%), </strong>Late = 21% <strong data-renderer-mark=\"true\">(-4%)</strong></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Prediction Promising config can be set up in Live or Passive mode. Passive mode is used when retailers want to evaluate Machine Learning to predict ship&nbsp;and dates but not use it in business processes. In Live mode, retailers wanted to go live with the predicted ship date, delivery date and also use it in business processes.</p>\r\n\r\n<p>In Passive mode, the dashboard primarily shows the performance as per<strong><strong data-renderer-mark=\"true\"> </strong></strong>dates calculated by configuration data. In Live mode, the dashboard shows the performance as per the predicted dates. The compare option will show the comparison between both modes. Refer to <a href=\"/deliverydateperformance$View Comparison\">View comparison</a> section for more details.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3 data-renderer-start-pos=\"3476\" id=\"Process-Flow\"><a name=\"process-flow\" id=\"process-flow\"></a>Process Flow</h3>\r\n\r\n<p>This dashboard uses an existing framework for tracking metrics and key APIs to display details&nbsp;on the dashboard. Refer to the complete process flow here,&nbsp;<a href=\"https://omni.helpdocsonline.com/metrics-dashboard$process-flow\">metric dashboard process flow</a> which covers end to end details.</p>\r\n\r\n<div class=\"tip\"><span style=\"color:#000000;\">Note* Dashboard displays data assuming MAML mode is passive&nbsp;</span></div>\r\n\r\n<p><img height=\"754\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/Dashboard_22_1.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1L0Rhc2hib2FyZF8yMl8xLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTY3OH19fV19&Signature=RgmZz~~89-3oV5AuTuMiWEbA7QEWXjCbUp0mqLc3GyattkHaEQj3Caz5~8MNgoKkgsdWKphClY90mnGjyKYg7oIaYFyCaj809TJSAYEV0t3UaGZZzSFzJ~rlmpFNdI0fF2Qg5tl-9iSO~DogFj0oToU~W30rHUwedgfsdkba55nqk1WfaJksf4oLp7nHMBDc1Miq6v4vO0rctdIRSL53udQOz1CPPScF9R~bzShlQYjH9WT0TGKH13GbN2i8rmfVYX1yurBRoRGxBfl6LN0zc-dCseBBZLiLCS~WrGdL0v3rqyweUZ5ggDzoaOeWm5cZwVUYs~3hDWZs4Lx~0cPWRQ__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 840px; height: 428px;\" width=\"1480\"></p>\r\n\r\n<h3><a name=\"what-is-tracked\" id=\"what-is-tracked\"></a>What is Tracked</h3>\r\n\r\n<p>This dashboard is intended to display details of delivered&nbsp;shipments in near real-time, based on the tracking details shared by carriers.&nbsp;All these shipments are tagged as either OnTime, Early, or Late by comparing the expected delivery date, predicted delivery date calculated during allocation with the actual delivered date shared by the carrier in two separate metrics: Metric 1 for dates calculated by configuration data&nbsp;and Metrics 2 for dates calculated by Machine Learning,&nbsp;respectively. These insights are tracked at a more granular level, such as location type, shipping method, carrier and service level, and lead time. There are further details with respect to the reason for shipments delivered late, whether it is shipped late by the fulfillment center or it is delivered late by the carrier.</p>\r\n\r\n<p>In order to display details on this dashboard, the&nbsp;delivery tracking feature needs to be enabled. This will ensure, once an order is marked as shipped with tracking details in Manhattan Active® Omni, the delivery status is tracked by making scheduled calls to the carrier. Refer to <a href=\"https://omni.helpdocsonline.com/deliverytracking$how-to-enable-delivery-tracking\">\"How to Enable Delivery Tracking\"</a><span style=\"color:#e67e22;\">&nbsp;</span>for more details.</p>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"delivery-date-performance-metrics\" id=\"delivery-date-performance-metrics\"></a>Delivery Date Performance Metrics</h3>\r\n\r\n<p>This section describes the actual metrics that are tracked for the shipments delivered in Active Omni.&nbsp;</p>\r\n\r\n<h4><a name=\"order-metrics\" id=\"order-metrics\"></a>Order Metrics</h4>\r\n\r\n<p>These metrics provide insights into the shipment delivery after an order is created, shipped, and marked as delivered in&nbsp;Manhattan Active® Omni. It tracks the total number of shipments delivered, delivered status, lead times, and delay source in case of late shipments. Also, these metrics explicitly track shipment packages rather than orders. Hence, if an order is split into multiple releases and every release is shipped in multiple shipment packages, the metric&nbsp;counter will be increased as per the number of packages.</p>\r\n\r\n<p>Illustration:&nbsp;Single Order, Multiple Releases, Shipped in multiple packages</p>\r\n\r\n<ul>\r\n\t<li>Line 1 - Item A - 10 qty - Released to Store 1, Shipped in 1 package (Package A1)</li>\r\n\t<li>Line 2 - Item B - 10 qty - Released to Store 2, Shipped in 2 packages (Package A2, Package A3)</li>\r\n</ul>\r\n\r\n<p>Metrics will track it as 3 delivered shipments. These are individually tracked by unique tracking numbers, hence the KPI for individual packages needs to be separately tracked.</p>\r\n\r\n<h5><a name=\"shipment-delivered-count\" id=\"shipment-delivered-count\"></a>Shipment Delivered Count</h5>\r\n\r\n<p>Shipment Delivered Count will be incremented every time a shipment package for an order is delivered. During allocation, promised dates such as EarliestShipDate and&nbsp;EarliestDeliveryDate are calculated by the system and saved in order. Similarly, once an order is shipped and delivered, “ShippedDate” and “DeliveredDate” are saved in the order tracking details. Based on the comparison (till date), delivered status is categorized as OnTime, Early, or Late.</p>\r\n\r\n<ul>\r\n\t<li>Metric Name -&nbsp;shipment_delivered_count</li>\r\n\t<li>Labels\r\n\t<ul>\r\n\t\t<li>organization -&nbsp;Indicates the primary organization of the user creating the order.</li>\r\n\t\t<li>deliveryMethod - Indicates the delivery method on the order line.</li>\r\n\t\t<li>shippingMethod - Indicates the shipping method or combined value of the carrier / service level code&nbsp;on the order line.</li>\r\n\t\t<li>locationType - Indicates the location type of source location from where the order is shipped. Values are Distribution Centers, Stores, Suppliers, and Others</li>\r\n\t\t<li>deliveredStatusBucket - It is populated based on a comparison between the expected delivery date and actual delivered date; and the&nbsp;shipments delivered status is categorized. Values are OnTime, Early, or Late.</li>\r\n\t\t<li>delaySource -&nbsp;It is populated based on a comparison between the expected shipment date and the actual shipped date when the shipment is delivered late. If a shipment&nbsp;is shipped later than the expected date, it is categorized as a delay due to shipping or as a delivery delay by a carrier. Values are ShippingDelay, DeliveryDelay, and NoDelay.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>UI Charts Supported\r\n\t<ul>\r\n\t\t<li>Delivered Shipments - The “Shipment Delivered Count” metric is used to display the total number of shipments delivered per location type with the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as a percentage of total shipments per location type.</li>\r\n\t\t<li>Percentage Calculation = Total Number of Shipments Delivered “OnTime” for a location type / Total Number of Shipments Delivered “OnTime, Early or Late” for a location type</li>\r\n\t\t<li>Delivered Shipments Graph - The “Shipment Delivered Count” metric is used to display the total number of shipments delivered per shipping method with the further break-up of the delivered status bucket (OnTime, Early, or Late) plotted over a period of time selected by the user.</li>\r\n\t\t<li>Late Shipments Graph - “Shipment Delivered Count” metric is used to display the total number of late shipments delivered per location type with the further break-up of the source of delay as shipping delay or delivery delay.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<h5 data-renderer-start-pos=\"4330\" id=\"Shipment-Delivered-Predicted-Count\"><a name=\"shipment-delivered-predicted-count\" id=\"shipment-delivered-predicted-count\"></a>Shipment Delivered Predicted Count</h5>\r\n\r\n<p>Shipment Delivered Predicted Count metrics are incremented in a similar fashion as Shipment Delivered Count. Based on the comparison with predicted dates (till date), delivered status is categorized as OnTime, Early, or Late.</p>\r\n\r\n<h5><a name=\"shipment-delivered-leadtime-count\" id=\"shipment-delivered-leadtime-count\"></a>Shipment Delivered LeadTime Count</h5>\r\n\r\n<p>Shipment Delivered Lead Time Count will also be incremented every time a shipment package for an order is delivered. This metric&nbsp;explicitly tracks granular details at the “Lead Time” level for shipments delivered for every shipping method. Lead time is calculated as the difference between the expected delivery date and the order allocation date for every line. Depending on the number of days that lead time calculates, the counter will be incremented for the corresponding lead time bucket.</p>\r\n\r\n<ul>\r\n\t<li>Metric Name -&nbsp;shipment_delivered_leadtime_count</li>\r\n\t<li>Labels\r\n\t<ul>\r\n\t\t<li>organization -&nbsp;Indicates the primary organization of the user creating the order.</li>\r\n\t\t<li>deliveryMethod - Indicates the delivery method on the order line.</li>\r\n\t\t<li>shippingMethod - Indicates the shipping method or combined value of the carrier / service level code&nbsp;on the order line.</li>\r\n\t\t<li>locationType - Indicates the location type of source location from where the order is shipped. Values are Distribution Centers, Stores, Suppliers, and Others.</li>\r\n\t\t<li>deliveredStatusBucket - It is populated based on a comparison between the expected delivery date and actual delivered date; and the&nbsp;shipments delivered status is categorized. Values are OnTime, Early, or Late.</li>\r\n\t\t<li>leadTimeBucket -&nbsp;Predefined buckets for lead times in \"Days\". Depending on the lead time computed as part of allocation, the counter is incremented for one of the following buckets: 1Day, 2Day, 3Day, 4Day, 5Day, 6Day, 7Day, 8Day, 9Day, 10Day, GT10DAY</li>\r\n\t\t<li>leadTimeDays –&nbsp;Predefined lead time days for each of&nbsp;the above buckets used for average calculation in the UI. 1 - 1DAY, 2 - 2DAY, 3 - 3DAY, 4 - 4DAY, 5 - 5DAY, 6 - 6DAY, 7 - 7DAY, 8 - 8DAY, 9 - 9DAY, 10 - 10DAY, 10 - GT10DAY</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>UI Charts Supported\r\n\t<ul>\r\n\t\t<li>Shipments - “Shipment Delivered LeadTime Count” metric is used to display the total number of shipments delivered per shipping method as a percentage of the total number of shipments delivered. Users can see the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as the percentage of total shipments per shipping method. Also, for every shipping method, the average lead time is displayed. To view more granular details on a side panel, users can click on the individual shipping method. It will display the total number of shipments delivered per lead time displayed as a percentage of the total number of shipments delivered per shipping method. Users can see the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as the percentage of total shipments per lead time bucket.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<h5 data-renderer-start-pos=\"4592\" id=\"Shipment-Delivered-Predicted-LeadTime-Count\"><a name=\"shipment-delivered-predicted-leadtime-count\" id=\"shipment-delivered-predicted-leadtime-count\"></a>Shipment Delivered Predicted LeadTime Count</h5>\r\n\r\n<p>Shipment Delivered Predicted LeadTime Count metrics are incremented in a similar fashion as Shipment Delivered LeadTime Count. Based on the comparison with predicted dates (till date), lead time days are calculated as 1 day, 2 days etc.</p>\r\n\r\n<div class=\"tip\"><span style=\"color:#000000;\"><strong>Note</strong>:&nbsp;If an order is allocated multiple times, there will be multiple sets of the earliest dates. If the&nbsp;allocations are released and shipped in a single package, the system will always consider the latest or max value for dates and lead time for calculation. </span></div>\r\n\r\n<h6><span style=\"color:#000000;\">Use case without comparison with ML predicted dates</span></h6>\r\n\r\n<table border=\"1\" data-autosize=\"false\" data-layout=\"default\" data-number-column=\"true\" data-pm-slice=\"1 1 []\" data-table-local-id=\"537586a2-a9a4-42a8-b525-e762d250ebb1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"705\" scope=\"col\">\r\n\t\t\t<p>S.N</p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"705\" scope=\"col\" style=\"width: 238px;\">\r\n\t\t\t<p><strong>UseCase</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"493\" scope=\"col\" style=\"width: 357px;\">\r\n\t\t\t<p>Metric: Shipment Delivered Count</p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"599\" scope=\"col\" style=\"width: 503px;\">\r\n\t\t\t<p>Metric: Shipment Delivered LeadTime Count</p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"705\">1</td>\r\n\t\t\t<td data-colwidth=\"705\" style=\"width: 235px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order with Shipping Method = “Standard” is allocated on Jan 5.</li>\r\n\t\t\t\t<li>Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9</li>\r\n\t\t\t\t<li>Order is shipped on time but delivered to customer late on Jan 10.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"493\" style=\"width: 354px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"delaySource\": \"DeliveryDelay\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 501px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_leadtime_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeDays\": \"4\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeBucket\": \"4Day\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"705\">2</td>\r\n\t\t\t<td data-colwidth=\"705\" style=\"width: 235px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order with Shipping Method = “Standard” is allocated on Jan 5.</li>\r\n\t\t\t\t<li>Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9</li>\r\n\t\t\t\t<li>Order is shipped late on Jan 8 and delivered to customer late on Jan 11.<br>\r\n\t\t\t\t<br>\r\n\t\t\t\tNote* Whenever a shipment is delivered late&nbsp;as&nbsp;it is shipped late from the fulfillment center, it is considered only as \"ShippingDelay\".</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"493\" style=\"width: 354px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"delaySource\": \"ShippingDelay\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 501px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_leadtime_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeDays\": \"4\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeBucket\": \"4Day\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"705\">3</td>\r\n\t\t\t<td data-colwidth=\"705\" style=\"width: 235px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order with Shipping Method = “Standard” is partially allocated on Jan 5 and remaining on Jan 6 as a new allocation. But, both allocations are released in a single release to distribution center.</li>\r\n\t\t\t\t<li>Promised dates will be different for different allocations. But, the system will consider the latest or max value. Earliest Ship Date = Jan 8 and Earliest Delivery Date = Jan 10</li>\r\n\t\t\t\t<li>Order is shipped and delivered on time to customers.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"493\" style=\"width: 354px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"OnTime\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"delaySource\": \"NoDelay\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 501px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_leadtime_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"OnTime\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeDays\": \"4\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeBucket\": \"4Day\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h6 data-pm-slice=\"1 1 []\"><span style=\"color:#000000;\">Use case with comparison based on ML predicted dates</span></h6>\r\n\r\n<table border=\"1\" data-autosize=\"false\" data-layout=\"default\" data-number-column=\"true\" data-pm-slice=\"1 1 []\" data-table-local-id=\"537586a2-a9a4-42a8-b525-e762d250ebb1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"705\" scope=\"col\">\r\n\t\t\t<p>S.N</p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"705\" scope=\"col\" style=\"width: 193px;\">\r\n\t\t\t<p><strong>UseCase</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"493\" scope=\"col\" style=\"width: 100px;\">\r\n\t\t\t<p>Metric: Shipment Delivered Count</p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"599\" scope=\"col\" style=\"width: 178px;\">\r\n\t\t\t<p>Metric: Shipment Delivered LeadTime Count</p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"599\" scope=\"col\" style=\"width: 195px;\">Metric: Shipment Delivered Predicted Count</th>\r\n\t\t\t<th data-colwidth=\"599\" scope=\"col\" style=\"width: 196px;\">\r\n\t\t\t<p>Metric: Shipment Delivered Predicted LeadTime Count</p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"705\">1</td>\r\n\t\t\t<td data-colwidth=\"705\" style=\"width: 190px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order with Shipping Method = “Standard” is allocated on Jan 5.</li>\r\n\t\t\t\t<li>Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9</li>\r\n\t\t\t\t<li>Predicted dates: Predicted Ship Date = Jan 7 and Predicted Delivery Date = Jan 10</li>\r\n\t\t\t\t<li>Actual dates: Ship Date = Jan 7 and Delivery Date = Jan 10</li>\r\n\t\t\t\t<li>As per dates calculated by configuration data, Order is shipped on time but delivered to customer late on Jan 10.</li>\r\n\t\t\t\t<li>As per Predicted Dates, Order is shipped and delivered on time to customer</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"493\" style=\"width: 98px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"delaySource\": \"DeliveryDelay\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 175px;\">\r\n\t\t\t<div><code>{<br>\r\n\t\t\t&nbsp; \"name\": \"shipment_delivered_leadtime_count\",<br>\r\n\t\t\t&nbsp; \"labels\": {<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"Late\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeDays\": \"4\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",<br>\r\n\t\t\t&nbsp;&nbsp;&nbsp; \"leadTimeBucket\": \"4Day\"<br>\r\n\t\t\t&nbsp; },<br>\r\n\t\t\t&nbsp; \"value\": 1<br>\r\n\t\t\t}</code></div>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 192px;\"><code data-renderer-mark=\"true\">{</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"name\": \"shipment_delivered_predicted_count\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"labels\": {</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"OnTime\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"delaySource\": \"NoDelay\"</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; },</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"value\": 1</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">}</code></td>\r\n\t\t\t<td data-colwidth=\"599\" style=\"width: 194px;\"><code data-renderer-mark=\"true\">{</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"name\": \"shipment_delivered_predicted_leadtime_count\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"labels\": {</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"shippingMethod\": \"Standard\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"organization\": \"ecomorg\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"deliveryMethod\": \"ShipToAddress\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"deliveredStatusBucket\": \"OnTime\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"leadTimeDays\": \"5\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"locationType\": \"DistributionCenters\",</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp;&nbsp;&nbsp; \"leadTimeBucket\": \"5Day\"</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; },</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">&nbsp; \"value\": 1</code><br>\r\n\t\t\t<code data-renderer-mark=\"true\">}</code></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"delivery-date-promise-performance-dashboard-ui\" id=\"delivery-date-promise-performance-dashboard-ui\"></a>Delivery Date Promise Performance Dashboard UI</h3>\r\n\r\n<p>The metrics dashboard resides in the inventoryfacade component. Users can navigate to&nbsp;<strong>Menu -&gt; Delivery Date Performance Dashboard&nbsp;</strong>from the home screen&nbsp;to access the dashboard UI. The dashboard consists of 4 different panels:</p>\r\n\r\n<ul>\r\n\t<li>Delivered Shipments Panel -&nbsp;Displays delivered shipments for every location type with the further break-up of the delivered status bucket (OnTime, Early, or Late)</li>\r\n\t<li>Delivered Shipments Graph Panel - Displays delivered shipments over a period of time, for every shipping method with the further break-up of the delivered status bucket (OnTime, Early, or Late)</li>\r\n\t<li>Late Shipments Graph Panel - Displays shipments delivered late over a period of time for every location type with the further break-up of “ShippingDelay” and&nbsp;“DeliveryDelay”</li>\r\n\t<li>Shipments Panel - Displays delivered shipment details for every shipping method with an average “Lead Time” with the further break-up of the delivered status bucket (OnTime, Early, or Late). Also, it displays details of every shipping method for a different “Lead Time Bucket” with the further break-up of the delivered status bucket (OnTime, Early, or Late)</li>\r\n\t<li>User Filter - Users can select either a date or a date range within the last 7&nbsp;days for the entire dashboard. Based on the selected user filter, the dashboard will always get refreshed with the required data.</li>\r\n</ul>\r\n\r\n<h6 data-renderer-start-pos=\"8934\">&nbsp;</h6>\r\n\r\n<h6 data-renderer-start-pos=\"8934\"><a id=\"View Comparison\" name=\"View Comparison\"></a>View Comparison based on ML predicted dates</h6>\r\n\r\n<p data-renderer-start-pos=\"8934\">On the Delivery Date Promise Performance page, click the View Comparison check box to refresh all the panels of the dashboard based on the predicted dates. Also, comparisons between before and after values will be displayed. Comparison values are positive or negative, and are displayed by following the below convention:</p>\r\n\r\n<ul>\r\n\t<li data-renderer-start-pos=\"9259\">For OnTime and Early → If the value is positive, then the upward arrow (Green) is displayed, else the downward arrow (Red) is displayed.</li>\r\n\t<li data-renderer-start-pos=\"9386\">For Late → If the value is positive, then the upward arrow (Red) is displayed, else the downward arrow (Green) is displayed.</li>\r\n</ul>\r\n\r\n<p><img height=\"330\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/DeliveryDateDashboard_Example_22_1(1).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1L0RlbGl2ZXJ5RGF0ZURhc2hib2FyZF9FeGFtcGxlXzIyXzEoMSkucG5nIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzUxNjc4fX19XX0_&Signature=ny-Ve~Z2n99NlCI~gOM0Toh4FPXnQ82fjDQlsvdHvpiGYuuQFOtZR3I00D-Co05xDRy-Y5SsjbqEnDFPHATzufbSLeKJSaRZIFpX4XAxH-fNxLIucHV02C8us1yK9oBG6FShYaMCaKaqThCczxqPYhMYb7VUlxRGLND4Z2jm6UhkOz4bJRuFKvw4uo8PkLIppGK7W79m70ty9aL7HeBPVFp-vPRnGVVvzjvOEvwRFnoqzEuMVwH3NagiWsFE1Xs8kkTxlXnYqYIFx4zTza35gCfcT8pVYZUiAfmahf11k0ptAsk2k7rXleioqb4iP7k3d9Ns10yF1WIy4OROCByUPw__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 833px; height: 233px;\" width=\"1180\"></p>\r\n\r\n<div class=\"tip\">Note: In Compare mode (when Predictive Promising Config is set other than Off) - Orders with both Predicted dates and dates computed as per configuration and populated are used for comparison. If there are Orders with no predicted dates (because of business/technical failures), then these Orders are not used for comparison.<br>\r\n<br>\r\nExample: Consider there are 100 orders. If Ship and Delivery dates are computed based on configuration, and Predicted date is populated only for 90 orders, then comparison will happen only for the 90 orders and the remaining 10 orders will be skipped.</div>\r\n\r\n<h4><a name=\"include-child-organizations\" id=\"include-child-organizations\"></a>Include Child Organizations</h4>\r\n\r\n<p>The dashboard UI is always loaded with all shipments for a&nbsp;hierarchy of organizations. It includes metrics for the selected organization and all the related child organizations, provided the user has access to these child organizations.&nbsp;If not, they will only see shipments for the organizations to which they have&nbsp;access.</p>\r\n\r\n<h4><a name=\"localization-formatting\" id=\"localization-formatting\"></a>Localization & Formatting</h4>\r\n\r\n<p>Refer <a href=\"https://omni.helpdocsonline.com/metrics-dashboard$localization-amp-formatting\">metric dashboard localization</a> for details.</p>\r\n\r\n<h4><a name=\"integration\" id=\"integration\"></a>Integration</h4>\r\n\r\n<p>While loading the Delivery Date Promise Performance Dashboard UI, a&nbsp;call is made from the UI to the facade layer. As part of this call, a set of UI Metrics are passed to the facade layer. A single UI Metric corresponds to a unique&nbsp;chart on the UI and can correspond to one&nbsp;or multiple backend metrics that the controller component understands. The facade layer converts the&nbsp;UI metric to the corresponding backend metric(s) and calls the controller component with the backend MetricId, Start time, End time, and Query to Prometheus. Refer to the&nbsp;<a href=\"https://omni.helpdocsonline.com/metrics-dashboard$seed-data\">Seed Data&nbsp;</a>for more details on UI Metric and the corresponding backend metric.&nbsp;</p>\r\n\r\n<p>If the response from the controller is empty for any of the UI metrics, an informational message is displayed on that specific chart indicating “Metrics Not Available”. If there is an error or some form of an exception while loading the dashboard, a pop-up is displayed on the UI indicating there was some error. The user has an option in the pop-up to export the error which can be shared with the implementation team for further analysis. When the user clicks the “OK” button on the pop-up, the corresponding panel(s) for which the call failed will display an error message indicating&nbsp;“Error while loading metrics”.</p>\r\n\r\n<h3><a name=\"configuration\" id=\"configuration\"></a>Configuration</h3>\r\n\r\n<h4><a name=\"grant\" id=\"grant\"></a>Grant</h4>\r\n\r\n<p>To access the Delivery Date Promise Performance Dashboard, the user should have access to the following grants:</p>\r\n\r\n<ul>\r\n\t<li><strong>inventoryfacade::performancemetricsdashboard::view</strong>. This will give the user a menu option to access the dashboard.</li>\r\n\t<li><strong>inventoryfacade::read. </strong>The user should have access to this grant to load and view the dashboard.</li>\r\n</ul>\r\n\r\n<h4><a name=\"seed-data\" id=\"seed-data\"></a>Seed Data</h4>\r\n\r\n<p>The seed data for all the UI Metrics is available as part of the \"MetricInfo\" entity. The key attributes of this entity are:</p>\r\n\r\n<ul>\r\n\t<li>UiMetricId – The UI Metric ID that is used to represent a specific chart on the UI</li>\r\n\t<li>UiMetricType – The type of chart. For example,&nbsp;LinearGraph, Donut, etc.</li>\r\n\t<li>MetricDetail – A list of backend metrics with the MetricId and the query&nbsp;corresponding to the UI metric.</li>\r\n</ul>\r\n\r\n<p>Below is an example of a UI metric. The endpoint to get the complete list of Metric Info&nbsp;seed data can be found <a hqid=\"2837120\" href=\"/deliverydateperformance$Services\">here</a>.</p>\r\n\r\n<table border=\"1\" data-autosize=\"false\" data-layout=\"default\" data-number-column=\"false\" data-pm-slice=\"1 1 []\" data-table-local-id=\"7ea7e353-66e8-4538-bf85-729973e5b615\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"158\" scope=\"col\">\r\n\t\t\t<p><strong>UI Metric ID</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"136\" scope=\"col\">\r\n\t\t\t<p><strong>UI Metric Type</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"466\" scope=\"col\">\r\n\t\t\t<p><strong>Backend Metric ID(s)</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"158\">\r\n\t\t\t<p>DeliveredShipmentsCount</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"136\">\r\n\t\t\t<p>SimpleDonut</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"466\">\r\n\t\t\t<p>shipment_delivered_count</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"158\">\r\n\t\t\t<p>DeliveredShipmentsGraph</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"136\">\r\n\t\t\t<p>LinearGraph</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"466\">\r\n\t\t\t<p>shipment_delivered_count</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"not-supported\" id=\"not-supported\"></a>Not Supported</h3>\r\n\r\n<ul>\r\n\t<li>Dashboard metrics do not track orders with a delivery method as “PickUpAtStore”. In the case of ShipToStore or Merge orders, only the last leg is tracked.</li>\r\n\t<li>Shipments are classified as On Time, Early, or Late&nbsp;by comparing the Delivered Date with one of the following dates: <strong data-end=\"221\" data-start=\"195\">Earliest Delivery Date</strong>, <strong data-end=\"250\" data-start=\"223\">Requested Delivery Date</strong>, or <strong data-end=\"281\" data-start=\"255\">Promised Delivery Date</strong>, depending on which is configured by the user. The selected date serves as the reference point for evaluating shipment timeliness.</li>\r\n\t<li>Users can select any date or date range from the previous 14-day window on the UI. There is no configuration to increase or decrease the window to 7 days or 30 days.</li>\r\n</ul>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<p>NA</p>\r\n\r\n<h3 data-pm-slice=\"1 1 []\"><a name=\"troubleshooting\" id=\"troubleshooting\"></a>Troubleshooting</h3>\r\n\r\n<h4><a name=\"not-able-to-see-any-data-on-dashboard\" id=\"not-able-to-see-any-data-on-dashboard\"></a>Not able to see any data on Dashboard</h4>\r\n\r\n<ul>\r\n\t<li>Check if the delivery tracking feature is enabled. Refer to <a href=\"https://omni.helpdocsonline.com/deliverytracking$how-to-enable-delivery-tracking\">\"How to Enable Delivery Tracking\"</a><span style=\"color:#e67e22;\">&nbsp;</span>for more details.</li>\r\n\t<li>Check whether the user has the required grants. Refer to the configuration section for details.</li>\r\n</ul>\r\n\r\n<h4><a name=\"getting-error-while-loading-the-page\" id=\"getting-error-while-loading-the-page\"></a>Getting Error while loading the page</h4>\r\n\r\n<ul>\r\n\t<li>If the error message&nbsp;is&nbsp;\"Unable to load Metrics Dashboard. Please check the log file\". Click on \"Export Error\" and share the log file with OPS team.</li>\r\n</ul>\r\n\r\n<h4><a name=\"the-number-of-delivered-shipments-is-less-or-more-than-the-actual\" id=\"the-number-of-delivered-shipments-is-less-or-more-than-the-actual\"></a>The number of delivered shipments is less or more than the actual</h4>\r\n\r\n<p>Run this API:&nbsp;{{url}}/order/internal/core/custommetrics</p>\r\n\r\n<ul>\r\n\t<li>Search for record&nbsp;with \"name\":&nbsp;\"Shipment_Delivered_Count\".</li>\r\n\t<li>Search for record with \"name\":&nbsp;\"Shipment_Delivered_LeadTime_Count\"</li>\r\n</ul>\r\n\r\n<p>These metrics are captured as and when shipments are delivered. After every interval of say X minutes, Prometheus pulls data from these metrics.</p>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a><a id=\"Services\" name=\"Services\"></a>Services</h3>\r\n\r\n<p>The&nbsp;APIs listed in the following table are referenced in this document. Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" data-autosize=\"false\" data-layout=\"default\" data-number-column=\"false\" data-pm-slice=\"1 1 []\" data-table-local-id=\"9306ed7b-a35f-4229-8763-c928d0498f6b\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"254\" scope=\"col\">\r\n\t\t\t<p><strong>Service</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"253\" scope=\"col\">\r\n\t\t\t<p><strong>Component</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"253\" scope=\"col\">\r\n\t\t\t<p><strong>Service Endpoint</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"254\">\r\n\t\t\t<p>Controller API to Prometheus</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>Controller</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>/controller/api/controller/promMetrics</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"254\">\r\n\t\t\t<p>Custom Metrics</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>Order</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>/{{Component}}/internal/core/custommetrics</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"254\">\r\n\t\t\t<p>Seed Data for Metric Info</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>Inventoryfacade</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"253\">\r\n\t\t\t<p>/inventoryfacade/api/inventoryfacade/metricInfo</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/interactive_inventory\" hqid=\"2590162\">Overview</a></li><li><a href=\"/metrics-dashboard\" hqid=\"2683666\">Metrics Dashboard</a></li><li><a href=\"/reservationsfromcache\" hqid=\"2792232\">Reservations from Cache</a></li><li><a href=\"/interactive-inventory-3\" hqid=\"2590179\">Delivery Dates Services</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 54472,
  "scraped_at": "2025-08-09T21:56:18.847842",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Order Promising››Interactive Inventory ››Delivery Date Performance Dashboard Delivery Date Performance Dashboard Previous I OverviewProcess FlowWhat is TrackedDelivery Date Performance MetricsOrder MetricsShipment Delivered CountShipment Delivered Predicted CountShipment Delivered LeadTime CountShipment Delivered Predicted LeadTime CountDelivery Date Promise Performance Dashboard UIInclude Child OrganizationsLocalization & FormattingIntegrationConfigurationGrantSeed DataNot SupportedImplementation FlavorsTroubleshootingNot able to see any data on DashboardGetting Error while loading the pageThe number of delivered shipments is less or more than the actualServicesRelated Articles Overview The Interactive Inventory feature helps the retailer to calculate accurate and optimized delivery dates in real-time across every stage of the buyer's journey. In order to provide insights into key metrics and KPIs related to Inventory and Promising, such as delivery date lead times and inventory availability, the Interactive Inventory Metrics Dashboard was introduced. This dashboard provides visibility to the Availability API calls, Delivery Date API calls, and the orders created. Refer to the metric dashboard for more details. The “Delivery Date Promise Performance” dashboard has been introduced to provide key metrics and KPIs related to delivery performance. This enables retailers to monitor and understand how they are performing related to the promises they are making to customers in terms of expected delivery dates. It provides high-level visibility in near real-time into key metrics related to total shipments delivered. The dashboard enables users to: Track how well a retailer is meeting the delivery promise to its customers Identify the trends for shipments delivered OnTime, Early or Late over the last 14 days Assess the timely delivery against promised Lead Times with respect to Service Levels View details based on MAML Whenever an order is allocated, the promising dates such as Earliest Ship Date and Earliest Delivery Date calculated based on the “Optimization Fulfillment” strategy are persisted in the system. Additionally, orders can arrive with a Requested Delivery Date and Promised Delivery Date as well. Also, these dates are used by the retailers for customer communication, release information to fulfillment location, and for other reporting systems. These dates are calculated as per configuration data. If a retailer enables the Machine Learning feature to predict dates based on historical data, predicted dates are calculated by the ML algorithm and persisted in the system. Based on whether the Machine Learning Feature is enabled in Active or Passive mode, these dates can be used either for communication or just for reporting. Refer to Predict Promising with Machine Learning for more details. The dashboard compares dates calculated by configuration data (Earliest Ship Date, Earliest Delivery Date, Requested Delivery Date, Promised Delivery Date) with actual ship and delivery dates for displaying data. If the user wants to evaluate the delivery performance based on predicted dates, the View Comparison check box on the UI can be enabled. This will refresh the dashboard with details based on comparison between predicted dates with actual dates. The dashboard will also show the comparison between both modes. This would help retailers to gauge \" how predicted dates would impact their Delivery Performance metrics\". Note: Comparison checkbox will be disabled if the Predictive Promising Config is set to Off #1 If 100 orders are delivered and dates calculated by configuration data and predicted dates are the same for 95 orders but different for 5 orders Orders Actual Dates Dates calculated by configuration data Predicted Dates Dates calculated by configuration data Vs Predicted dates Performance as per dates calculated by configuration data Performance as per Predicted Dates 50 orders created/allocated Shipped Date = Jan 15 Delivered Date = Jan 20 Earliest Ship Date = Jan 15 Earliest Delivery Date = Jan 18 For 45 orders Predicted Ship Date = Jan 15 Predicted Delivery Date = Jan 18 For 5 orders Predicted Ship Date = Jan 15 Predicted Delivery Date = Jan 20 The predicted date is the same as the dates calculated by configuration data for 45 orders but different for the remaining 5 orders. 50 Late Orders 50 OnTime Orders OnTime = 50 %, Late = 50 % 45 Late Orders 55 OnTime Orders OnTime = 55 %, Late = 45 % 50 orders created/allocated Shipped Date = Jan 15 Delivered Date = Jan 20 Earliest Ship Date = Jan 15 Earliest Delivery Date = Jan 20 Predicted Ship Date = Jan 15 Predicted Delivery Date = Jan 20 Same for all 50 Orders #2 If 200 orders are delivered and lead time days are different for predicted dates compared to the dates calculated by configuration data. Dates calculated by configuration data: Orders Lead Time as per dates calculated by configuration data Performance as per dates calculated by configuration data Average Lead Time 100 Orders 7 days OnTime = 50 Early = 25 Late = 25 OnTime = 50%, Early = 25%, Late = 25% = ( 100 X 7 + 100 X 8 ) / 200 = 7.5 days 100 orders 8 days OnTime = 50 Early = 25 Late = 25 OnTime = 50%, Early = 25%, Late = 25% Predicted: Orders Lead Time as per Predicted Dates Performance as per Predicted Dates Average Lead Time 80 Orders 7 days OnTime = 50 Early = 25 Late = 5 OnTime = 63% (+13%), Early = 31% (+6%), Late = 6% (-19%) = ( 80 X 7 + 120 X 8 ) / 200 = 7.6 days ( +0.1 ) 120 orders 8 days OnTime = 70 Early = 25 Late = 25 OnTime = 58% (+8%), Early = 21% (-4%), Late = 21% (-4%) Prediction Promising config can be set up in Live or Passive mode. Passive mode is used when retailers want to evaluate Machine Learning to predict ship and dates but not use it in business processes. In Live mode, retailers wanted to go live with the predicted ship date, delivery date and also use it in business processes. In Passive mode, the dashboard primarily shows the performance as per dates calculated by configuration data. In Live mode, the dashboard shows the performance as per the predicted dates. The compare option will show the comparison between both modes. Refer to View comparison section for more details. Process Flow This dashboard uses an existing framework for tracking metrics and key APIs to display details on the dashboard. Refer to the complete process flow here, metric dashboard process flow which covers end to end details. Note* Dashboard displays data assuming MAML mode is passive What is Tracked This dashboard is intended to display details of delivered shipments in near real-time, based on the tracking details shared by carriers. All these shipments are tagged as either OnTime, Early, or Late by comparing the expected delivery date, predicted delivery date calculated during allocation with the actual delivered date shared by the carrier in two separate metrics: Metric 1 for dates calculated by configuration data and Metrics 2 for dates calculated by Machine Learning, respectively. These insights are tracked at a more granular level, such as location type, shipping method, carrier and service level, and lead time. There are further details with respect to the reason for shipments delivered late, whether it is shipped late by the fulfillment center or it is delivered late by the carrier. In order to display details on this dashboard, the delivery tracking feature needs to be enabled. This will ensure, once an order is marked as shipped with tracking details in Manhattan Active® Omni, the delivery status is tracked by making scheduled calls to the carrier. Refer to \"How to Enable Delivery Tracking\" for more details. Delivery Date Performance Metrics This section describes the actual metrics that are tracked for the shipments delivered in Active Omni. Order Metrics These metrics provide insights into the shipment delivery after an order is created, shipped, and marked as delivered in Manhattan Active® Omni. It tracks the total number of shipments delivered, delivered status, lead times, and delay source in case of late shipments. Also, these metrics explicitly track shipment packages rather than orders. Hence, if an order is split into multiple releases and every release is shipped in multiple shipment packages, the metric counter will be increased as per the number of packages. Illustration: Single Order, Multiple Releases, Shipped in multiple packages Line 1 - Item A - 10 qty - Released to Store 1, Shipped in 1 package (Package A1) Line 2 - Item B - 10 qty - Released to Store 2, Shipped in 2 packages (Package A2, Package A3) Metrics will track it as 3 delivered shipments. These are individually tracked by unique tracking numbers, hence the KPI for individual packages needs to be separately tracked. Shipment Delivered Count Shipment Delivered Count will be incremented every time a shipment package for an order is delivered. During allocation, promised dates such as EarliestShipDate and EarliestDeliveryDate are calculated by the system and saved in order. Similarly, once an order is shipped and delivered, “ShippedDate” and “DeliveredDate” are saved in the order tracking details. Based on the comparison (till date), delivered status is categorized as OnTime, Early, or Late. Metric Name - shipment_delivered_count Labels organization - Indicates the primary organization of the user creating the order. deliveryMethod - Indicates the delivery method on the order line. shippingMethod - Indicates the shipping method or combined value of the carrier / service level code on the order line. locationType - Indicates the location type of source location from where the order is shipped. Values are Distribution Centers, Stores, Suppliers, and Others deliveredStatusBucket - It is populated based on a comparison between the expected delivery date and actual delivered date; and the shipments delivered status is categorized. Values are OnTime, Early, or Late. delaySource - It is populated based on a comparison between the expected shipment date and the actual shipped date when the shipment is delivered late. If a shipment is shipped later than the expected date, it is categorized as a delay due to shipping or as a delivery delay by a carrier. Values are ShippingDelay, DeliveryDelay, and NoDelay. UI Charts Supported Delivered Shipments - The “Shipment Delivered Count” metric is used to display the total number of shipments delivered per location type with the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as a percentage of total shipments per location type. Percentage Calculation = Total Number of Shipments Delivered “OnTime” for a location type / Total Number of Shipments Delivered “OnTime, Early or Late” for a location type Delivered Shipments Graph - The “Shipment Delivered Count” metric is used to display the total number of shipments delivered per shipping method with the further break-up of the delivered status bucket (OnTime, Early, or Late) plotted over a period of time selected by the user. Late Shipments Graph - “Shipment Delivered Count” metric is used to display the total number of late shipments delivered per location type with the further break-up of the source of delay as shipping delay or delivery delay. Shipment Delivered Predicted Count Shipment Delivered Predicted Count metrics are incremented in a similar fashion as Shipment Delivered Count. Based on the comparison with predicted dates (till date), delivered status is categorized as OnTime, Early, or Late. Shipment Delivered LeadTime Count Shipment Delivered Lead Time Count will also be incremented every time a shipment package for an order is delivered. This metric explicitly tracks granular details at the “Lead Time” level for shipments delivered for every shipping method. Lead time is calculated as the difference between the expected delivery date and the order allocation date for every line. Depending on the number of days that lead time calculates, the counter will be incremented for the corresponding lead time bucket. Metric Name - shipment_delivered_leadtime_count Labels organization - Indicates the primary organization of the user creating the order. deliveryMethod - Indicates the delivery method on the order line. shippingMethod - Indicates the shipping method or combined value of the carrier / service level code on the order line. locationType - Indicates the location type of source location from where the order is shipped. Values are Distribution Centers, Stores, Suppliers, and Others. deliveredStatusBucket - It is populated based on a comparison between the expected delivery date and actual delivered date; and the shipments delivered status is categorized. Values are OnTime, Early, or Late. leadTimeBucket - Predefined buckets for lead times in \"Days\". Depending on the lead time computed as part of allocation, the counter is incremented for one of the following buckets: 1Day, 2Day, 3Day, 4Day, 5Day, 6Day, 7Day, 8Day, 9Day, 10Day, GT10DAY leadTimeDays – Predefined lead time days for each of the above buckets used for average calculation in the UI. 1 - 1DAY, 2 - 2DAY, 3 - 3DAY, 4 - 4DAY, 5 - 5DAY, 6 - 6DAY, 7 - 7DAY, 8 - 8DAY, 9 - 9DAY, 10 - 10DAY, 10 - GT10DAY UI Charts Supported Shipments - “Shipment Delivered LeadTime Count” metric is used to display the total number of shipments delivered per shipping method as a percentage of the total number of shipments delivered. Users can see the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as the percentage of total shipments per shipping method. Also, for every shipping method, the average lead time is displayed. To view more granular details on a side panel, users can click on the individual shipping method. It will display the total number of shipments delivered per lead time displayed as a percentage of the total number of shipments delivered per shipping method. Users can see the further break-up of the delivered status bucket (OnTime, Early, or Late) displayed as the percentage of total shipments per lead time bucket. Shipment Delivered Predicted LeadTime Count Shipment Delivered Predicted LeadTime Count metrics are incremented in a similar fashion as Shipment Delivered LeadTime Count. Based on the comparison with predicted dates (till date), lead time days are calculated as 1 day, 2 days etc. Note: If an order is allocated multiple times, there will be multiple sets of the earliest dates. If the allocations are released and shipped in a single package, the system will always consider the latest or max value for dates and lead time for calculation. Use case without comparison with ML predicted dates S.N UseCase Metric: Shipment Delivered Count Metric: Shipment Delivered LeadTime Count 1 Order with Shipping Method = “Standard” is allocated on Jan 5. Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9 Order is shipped on time but delivered to customer late on Jan 10. { \"name\": \"shipment_delivered_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"locationType\": \"DistributionCenters\", \"delaySource\": \"DeliveryDelay\" }, \"value\": 1 } { \"name\": \"shipment_delivered_leadtime_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"leadTimeDays\": \"4\", \"locationType\": \"DistributionCenters\", \"leadTimeBucket\": \"4Day\" }, \"value\": 1 } 2 Order with Shipping Method = “Standard” is allocated on Jan 5. Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9 Order is shipped late on Jan 8 and delivered to customer late on Jan 11. Note* Whenever a shipment is delivered late as it is shipped late from the fulfillment center, it is considered only as \"ShippingDelay\". { \"name\": \"shipment_delivered_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"locationType\": \"DistributionCenters\", \"delaySource\": \"ShippingDelay\" }, \"value\": 1 } { \"name\": \"shipment_delivered_leadtime_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"leadTimeDays\": \"4\", \"locationType\": \"DistributionCenters\", \"leadTimeBucket\": \"4Day\" }, \"value\": 1 } 3 Order with Shipping Method = “Standard” is partially allocated on Jan 5 and remaining on Jan 6 as a new allocation. But, both allocations are released in a single release to distribution center. Promised dates will be different for different allocations. But, the system will consider the latest or max value. Earliest Ship Date = Jan 8 and Earliest Delivery Date = Jan 10 Order is shipped and delivered on time to customers. { \"name\": \"shipment_delivered_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"OnTime\", \"locationType\": \"DistributionCenters\", \"delaySource\": \"NoDelay\" }, \"value\": 1 } { \"name\": \"shipment_delivered_leadtime_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"OnTime\", \"leadTimeDays\": \"4\", \"locationType\": \"DistributionCenters\", \"leadTimeBucket\": \"4Day\" }, \"value\": 1 } Use case with comparison based on ML predicted dates S.N UseCase Metric: Shipment Delivered Count Metric: Shipment Delivered LeadTime Count Metric: Shipment Delivered Predicted Count Metric: Shipment Delivered Predicted LeadTime Count 1 Order with Shipping Method = “Standard” is allocated on Jan 5. Promised dates: Earliest Ship Date = Jan 7 and Earliest Delivery Date = Jan 9 Predicted dates: Predicted Ship Date = Jan 7 and Predicted Delivery Date = Jan 10 Actual dates: Ship Date = Jan 7 and Delivery Date = Jan 10 As per dates calculated by configuration data, Order is shipped on time but delivered to customer late on Jan 10. As per Predicted Dates, Order is shipped and delivered on time to customer { \"name\": \"shipment_delivered_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"locationType\": \"DistributionCenters\", \"delaySource\": \"DeliveryDelay\" }, \"value\": 1 } { \"name\": \"shipment_delivered_leadtime_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"Late\", \"leadTimeDays\": \"4\", \"locationType\": \"DistributionCenters\", \"leadTimeBucket\": \"4Day\" }, \"value\": 1 } { \"name\": \"shipment_delivered_predicted_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"OnTime\", \"locationType\": \"DistributionCenters\", \"delaySource\": \"NoDelay\" }, \"value\": 1 } { \"name\": \"shipment_delivered_predicted_leadtime_count\", \"labels\": { \"shippingMethod\": \"Standard\", \"organization\": \"ecomorg\", \"deliveryMethod\": \"ShipToAddress\", \"deliveredStatusBucket\": \"OnTime\", \"leadTimeDays\": \"5\", \"locationType\": \"DistributionCenters\", \"leadTimeBucket\": \"5Day\" }, \"value\": 1 } Delivery Date Promise Performance Dashboard UI The metrics dashboard resides in the inventoryfacade component. Users can navigate to Menu -> Delivery Date Performance Dashboard from the home screen to access the dashboard UI. The dashboard consists of 4 different panels: Delivered Shipments Panel - Displays delivered shipments for every location type with the further break-up of the delivered status bucket (OnTime, Early, or Late) Delivered Shipments Graph Panel - Displays delivered shipments over a period of time, for every shipping method with the further break-up of the delivered status bucket (OnTime, Early, or Late) Late Shipments Graph Panel - Displays shipments delivered late over a period of time for every location type with the further break-up of “ShippingDelay” and “DeliveryDelay” Shipments Panel - Displays delivered shipment details for every shipping method with an average “Lead Time” with the further break-up of the delivered status bucket (OnTime, Early, or Late). Also, it displays details of every shipping method for a different “Lead Time Bucket” with the further break-up of the delivered status bucket (OnTime, Early, or Late) User Filter - Users can select either a date or a date range within the last 7 days for the entire dashboard. Based on the selected user filter, the dashboard will always get refreshed with the required data. View Comparison based on ML predicted dates On the Delivery Date Promise Performance page, click the View Comparison check box to refresh all the panels of the dashboard based on the predicted dates. Also, comparisons between before and after values will be displayed. Comparison values are positive or negative, and are displayed by following the below convention: For OnTime and Early → If the value is positive, then the upward arrow (Green) is displayed, else the downward arrow (Red) is displayed. For Late → If the value is positive, then the upward arrow (Red) is displayed, else the downward arrow (Green) is displayed. Note: In Compare mode (when Predictive Promising Config is set other than Off) - Orders with both Predicted dates and dates computed as per configuration and populated are used for comparison. If there are Orders with no predicted dates (because of business/technical failures), then these Orders are not used for comparison. Example: Consider there are 100 orders. If Ship and Delivery dates are computed based on configuration, and Predicted date is populated only for 90 orders, then comparison will happen only for the 90 orders and the remaining 10 orders will be skipped. Include Child Organizations The dashboard UI is always loaded with all shipments for a hierarchy of organizations. It includes metrics for the selected organization and all the related child organizations, provided the user has access to these child organizations. If not, they will only see shipments for the organizations to which they have access. Localization & Formatting Refer metric dashboard localization for details. Integration While loading the Delivery Date Promise Performance Dashboard UI, a call is made from the UI to the facade layer. As part of this call, a set of UI Metrics are passed to the facade layer. A single UI Metric corresponds to a unique chart on the UI and can correspond to one or multiple backend metrics that the controller component understands. The facade layer converts the UI metric to the corresponding backend metric(s) and calls the controller component with the backend MetricId, Start time, End time, and Query to Prometheus. Refer to the Seed Data for more details on UI Metric and the corresponding backend metric. If the response from the controller is empty for any of the UI metrics, an informational message is displayed on that specific chart indicating “Metrics Not Available”. If there is an error or some form of an exception while loading the dashboard, a pop-up is displayed on the UI indicating there was some error. The user has an option in the pop-up to export the error which can be shared with the implementation team for further analysis. When the user clicks the “OK” button on the pop-up, the corresponding panel(s) for which the call failed will display an error message indicating “Error while loading metrics”. Configuration Grant To access the Delivery Date Promise Performance Dashboard, the user should have access to the following grants: inventoryfacade::performancemetricsdashboard::view. This will give the user a menu option to access the dashboard. inventoryfacade::read. The user should have access to this grant to load and view the dashboard. Seed Data The seed data for all the UI Metrics is available as part of the \"MetricInfo\" entity. The key attributes of this entity are: UiMetricId – The UI Metric ID that is used to represent a specific chart on the UI UiMetricType – The type of chart. For example, LinearGraph, Donut, etc. MetricDetail – A list of backend metrics with the MetricId and the query corresponding to the UI metric. Below is an example of a UI metric. The endpoint to get the complete list of Metric Info seed data can be found here. UI Metric ID UI Metric Type Backend Metric ID(s) DeliveredShipmentsCount SimpleDonut shipment_delivered_count DeliveredShipmentsGraph LinearGraph shipment_delivered_count Not Supported Dashboard metrics do not track orders with a delivery method as “PickUpAtStore”. In the case of ShipToStore or Merge orders, only the last leg is tracked. Shipments are classified as On Time, Early, or Late by comparing the Delivered Date with one of the following dates: Earliest Delivery Date, Requested Delivery Date, or Promised Delivery Date, depending on which is configured by the user. The selected date serves as the reference point for evaluating shipment timeliness. Users can select any date or date range from the previous 14-day window on the UI. There is no configuration to increase or decrease the window to 7 days or 30 days. Implementation Flavors NA Troubleshooting Not able to see any data on Dashboard Check if the delivery tracking feature is enabled. Refer to \"How to Enable Delivery Tracking\" for more details. Check whether the user has the required grants. Refer to the configuration section for details. Getting Error while loading the page If the error message is \"Unable to load Metrics Dashboard. Please check the log file\". Click on \"Export Error\" and share the log file with OPS team. The number of delivered shipments is less or more than the actual Run this API: {{url}}/order/internal/core/custommetrics Search for record with \"name\": \"Shipment_Delivered_Count\". Search for record with \"name\": \"Shipment_Delivered_LeadTime_Count\" These metrics are captured as and when shipments are delivered. After every interval of say X minutes, Prometheus pulls data from these metrics. Services The APIs listed in the following table are referenced in this document. Refer to the API documentation for additional details on each service. Service Component Service Endpoint Controller API to Prometheus Controller /controller/api/controller/promMetrics Custom Metrics Order /{{Component}}/internal/core/custommetrics Seed Data for Metric Info Inventoryfacade /inventoryfacade/api/inventoryfacade/metricInfo Related Articles OverviewMetrics DashboardReservations from CacheDelivery Dates Services"
}