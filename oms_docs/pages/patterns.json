{
  "success": true,
  "permalink": "patterns",
  "title": "Patterns",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"2161445\" href=\"/administrators\" class=\"breadcrumb-links\">Administrator Tools</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3502829\" href=\"/new-folder-1728918805\" class=\"breadcrumb-links\">Manhattan ProActive®</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2656480\" href=\"/proactive/uiextensibility\" class=\"breadcrumb-links\">User Interface Extensibility</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3085828\" href=\"/contact-center-ui-extensibility\" class=\"breadcrumb-links\">Contact Center UI Extensibility</a></li><li> <span>››</span>Patterns</li></ul>  \t\r\n\t\t<h2>Patterns</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/patterns$implementation-flavors\">Implementation Flavors</a><ul><li><a href=\"/patterns$restricting-a-base-button-action-on-modtype-while-base-restricts-action-based-on-grant\">Restricting a base button action on modtype while base restricts action based on grant</a></li><li><a href=\"/patterns$showing-error-message-from-user-exit-on-ui\">Showing error message from user exit on UI</a></li><li><a href=\"/patterns$how-to-send-an-outbound-message-when-a-case-is-closed\">How to send an outbound message when a case is closed</a></li><li><a href=\"/patterns$showing-attributes-using-ui-extension-that-are-not-present-in-the-base-field\">Showing attributes using UI extension that are not present in the base field</a></li><li><a href=\"/patterns$how-to-display-an-array-of-values-using-extended-attribute-on-the-call-center-ui\">How to display an array of values using extended attribute on the Call Center UI?</a></li></ul></li><li><a href=\"/patterns$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<h4><a name=\"restricting-a-base-button-action-on-modtype-while-base-restricts-action-based-on-grant\" id=\"restricting-a-base-button-action-on-modtype-while-base-restricts-action-based-on-grant\"></a>Restricting a base button action on modtype while base restricts action based on grant</h4>\r\n\r\n<ol>\r\n\t<li>Intercept the Save order call. Refer to&nbsp;<a href=\"https://omni.helpdocsonline.com/intercept-ui-api-calls\">Intercepting UI API calls to re-route to custom API </a>for more details.</li>\r\n\t<li>Get the command router details from Proactive UI: Menu &gt; Proactive &gt; Developer Artifacts &gt; SELECT &gt;Specify APIs &gt; Customerengagementfacade &gt; Search by key: &nbsp;saveOrder</li>\r\n\t<li>{{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder API call.</li>\r\n\t<li>Construct an error message, refer to&nbsp;<a hqid=\"3274503\" href=\"/extension-util-functions$sample-order-validation-error\">Sample Order Validation Error</a>&nbsp;for more details. The UI will display the standard error pop-up.&nbsp;</li>\r\n\t<li>You can customize by hiding base content and implementing the iframe (ScreenId:ce::message-popup, ExtensionId:custom-message-popup). Refer to&nbsp;<a href=\"https://omni.helpdocsonline.com/iframes$how-to-use-iframe-extensions\">How to use IFrame extension</a>&nbsp;for more details.</li>\r\n</ol>\r\n\r\n<h4><a name=\"showing-error-message-from-user-exit-on-ui\" id=\"showing-error-message-from-user-exit-on-ui\"></a>Showing error message from user exit on UI</h4>\r\n\r\n<p>The error returned from the user exit will not be propagated back to UI directly. There are 2 approaches that we can use to solve this:</p>\r\n\r\n<ul>\r\n\t<li>OPTION 1.&nbsp;Instead of user exit, you can intercept calls directly from UI and do the required validation and return error response, if that solves the purpose.</li>\r\n\t<li>OPTION 2. If we are not able to go with OPTION 1, track the error that occurs in user exit in an extended attribute or custom table, now along with the user exit, you will have to implement a command router OR a suitable iframe on UI.\r\n\t<ul>\r\n\t\t<li>If you implement a command router, then you can read the error message that is stored and message the json before returning it back to UI.</li>\r\n\t\t<li>If you implement an iframe, then you can read the error message from the extended attribute / custom table and open up a custom popup to show the error message.</li>\r\n\t\t<li>Once the error message is shown to the user, remember to clear the data stored at the backend.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<h4><a name=\"how-to-send-an-outbound-message-when-a-case-is-closed\" id=\"how-to-send-an-outbound-message-when-a-case-is-closed\"></a>How to send an outbound message when a case is closed</h4>\r\n\r\n<p>Use the Cases:Cases:Event:PostUpdate and PostCreate user exits.</p>\r\n\r\n<h4><a name=\"showing-attributes-using-ui-extension-that-are-not-present-in-the-base-field\" id=\"showing-attributes-using-ui-extension-that-are-not-present-in-the-base-field\"></a>Showing attributes using UI extension that are not present in the base field</h4>\r\n\r\n<p>Example: On the order status screen, we would like to show the phone number of the location from where the order line is being shipped. How do we achieve this?</p>\r\n\r\n<p>Solution:&nbsp;You can populate the extended attributes of the order line using any possible user exits in the back end, and then configure to show the extended field on UI.</p>\r\n\r\n<h4><a name=\"how-to-display-an-array-of-values-using-extended-attribute-on-the-call-center-ui\" id=\"how-to-display-an-array-of-values-using-extended-attribute-on-the-call-center-ui\"></a>How to display an array of values using extended attribute on the Call Center UI?</h4>\r\n\r\n<ul>\r\n\t<li>Implement a button extension.</li>\r\n\t<li>On clicking this button, a pop-up window will display all the values from the array.</li>\r\n</ul>\r\n\r\n<p>For example, in the Call Center UI, add a button near charges. Clicking this button will open a pop-up window showing the required breakup of charges.</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/buttons\" hqid=\"3085834\">Buttons</a></li><li><a href=\"/iframes\" hqid=\"3085835\">iFrames</a></li><li><a href=\"/intercept-ui-api-calls\" hqid=\"3085846\">Intercept UI API Calls</a></li><li><a href=\"/base-components\" hqid=\"3085843\">Base Components </a></li><li><a href=\"/best-practices\" hqid=\"3097757\">Best Practices</a></li><li><a href=\"/contact-center-ui-extensibility-overview\" hqid=\"3085829\">Overview</a></li><li><a href=\"/extension-util-functions\" hqid=\"3274503\">Extension Util Functions</a></li><li><a href=\"/field-extensions\" hqid=\"3085830\">Field Extensions</a></li><li><a href=\"/intercepting-ui-api-calls-to-re-route-to-custom-api\" hqid=\"3097755\">Left Navigation Menu</a></li></ul></div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 6974,
  "scraped_at": "2025-08-09T22:39:41.564242"
}