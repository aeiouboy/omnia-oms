{
  "id": "2786252",
  "permalink": "order-modifications",
  "title": "Order Modifications",
  "type": "topic",
  "level": 4,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Customer Service/Order Modifications",
  "raw_item": {
    "id": "2786252",
    "text": "Order Modifications",
    "title": "Order Modifications",
    "permalink": "order-modifications",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "129583",
    "parent": "f;129583",
    "created_date": "1622653185",
    "modified_date": "1742564524",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "3"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158820\" href=\"/customer-service\" class=\"breadcrumb-links\">Customer Service</a></li><li> <span>››</span>Order Modifications</li></ul>  \t\r\n\t\t<h2>Order Modifications</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/order-modifications$edit-order\">Edit Order</a><ul><li><a href=\"/order-modifications$order-edits-by-status\">Order Edits by Status</a></li><li><a href=\"/order-modifications$nbsp-editing-quote-orders\">&nbsp;Editing Quote Orders</a></li><li><a href=\"/order-modifications$change-edit-email-id-on-digital-goods-before-order-confirmation\">Change/ Edit Email ID on Digital Goods Before Order Confirmation</a></li></ul></li><li><a href=\"/order-modifications$converting-a-quote-order-to-a-customer-service-order\">Converting a Quote Order to a Customer Service Order</a></li><li><a href=\"/order-modifications$canceling-an-order\">Canceling an Order</a><ul><li><a href=\"/order-modifications$configuration\">Configuration</a></li></ul></li><li><a href=\"/order-modifications$late-order-cancellation\">Late Order Cancellation</a></li><li><a href=\"/order-modifications$placing-an-order-on-hold\">Placing an Order on Hold</a></li><li><a href=\"/order-modifications$channel-specific-reason-codes\">Channel-Specific Reason Codes</a></li><li><a href=\"/order-modifications$appeasements\">Appeasements</a><ul><li><a href=\"/order-modifications$appeasement-threshold-limits\">Appeasement Threshold Limits</a></li><li><a href=\"/order-modifications$stacked-appeasements-in-contact-center\">Stacked Appeasements in Contact Center</a></li></ul></li><li><a href=\"/order-modifications$appeasement-for-lost-package\">Appeasement for Lost Package</a></li><li><a href=\"/order-modifications$promotions-coupons\">Promotions, Coupons</a></li><li><a href=\"/order-modifications$payment-based-promotions-in-contact-center-nbsp\">Payment Based Promotions in Contact center&nbsp;</a></li><li><a href=\"/order-modifications$price-overrides-nbsp\">Price Overrides&nbsp;</a></li><li><a href=\"/order-modifications$send-customer-copy-of-invoice-pdf\">Send customer copy of invoice PDF</a></li><li><a href=\"/order-modifications$preview-estimated-refunds-and-toggle-refund-payment-method\">Preview Estimated Refunds and Toggle Refund Payment Method</a></li><li><a href=\"/order-modifications$external-order-modifications\">External Order Modifications</a><ul><li><a href=\"/order-modifications$selling-channel-for-order-updates\">Selling Channel for Order Updates</a></li></ul></li><li><a href=\"/order-modifications$configurations\">Configurations</a><ul><li><a href=\"/order-modifications$configuration-for-nbsp-change-edit-email-id-on-digital-goods-before-order-confirmation\">Configuration for&nbsp;Change/ Edit Email ID on Digital Goods Before Order Confirmation</a></li><li><a href=\"/order-modifications$configuration-for-payment-based-promotions-nbsp\">Configuration for Payment Based Promotions&nbsp;</a></li></ul></li><li><a href=\"/order-modifications$implementation-flavors\">Implementation Flavors</a><ul><li><a href=\"/order-modifications$how-to-disable-order-edits-for-a-certain-order-type-order-status\">How to disable order edits for a certain order type/order status</a></li><li><a href=\"/order-modifications$how-to-display-the-count-of-order-notes-on-the-customer-transaction-ui\">How to display the count of order notes on the Customer Transaction UI</a></li><li><a href=\"/order-modifications$how-to-stop-authorized-calls-from-call-center\">How to stop authorized calls from call center</a></li><li><a href=\"/order-modifications$trigger-point-for-fraud-check-validation-on-csr-confirm-order-during-order-edit\">Trigger point for fraud check validation on CSR confirm order during order edit</a></li><li><a href=\"/order-modifications$how-to-restrict-csr-associates-from-applying-header-level-appeasements-until-the-entire-order-is-shipped\">How to restrict CSR associates from applying header level appeasements until the entire order is shipped</a></li><li><a href=\"/order-modifications$perform-validation-and-show-error-message\">Perform validation and show error message</a></li><li><a href=\"/order-modifications$how-to-avoid-error-pop-up-displayed-when-customer-info-is-not-found-in-active-omni-nbsp-while-placing-an-order\">How to avoid error pop-up displayed when customer info is not found in Active Omni&nbsp;while placing an order</a></li><li><a href=\"/order-modifications$how-to-automatically-trigger-payment-processing-when-csr-39-s-do-not-click-quot-confirm-changes-quot\">How to automatically trigger payment processing when CSR&#39;s do not click &quot;Confirm Changes&quot;</a></li><li><a href=\"/order-modifications$how-to-resolve-the-issue-of-the-discount-exceeding-the-line-total-when-appeasement-is-applied-as-an-amount-off-for-a-line-with-gift-wrap\">How to resolve the issue of the discount exceeding the line total when appeasement is applied as an amount off for a line with gift wrap</a></li></ul></li><li><a href=\"/order-modifications$troubleshooting\">Troubleshooting</a><ul><li><a href=\"/order-modifications$i-am-able-to-override-the-price-in-customer-service-nbsp-even-after-ispriceoverrideable-flag-is-set-as-false-in-item-master\">I am able to override the price in Customer Service&nbsp;even after IsPriceOverrideable flag is set as false in item master</a></li><li><a href=\"/order-modifications$store-number-is-not-populated-and-not-editable-for-call-center-initiated-orders\">Store number is not populated and not editable for call center initiated orders</a></li><li><a href=\"/order-modifications$why-does-the-order-status-display-the-new-address-for-the-old-release-when-quot-modification-for-unreleased-quantities-quot-is-enabled\">Why does the order status display the new address for the old release when &quot;Modification for Unreleased Quantities&quot; is enabled</a></li><li><a href=\"/order-modifications$appeasement-and-promotions-are-not-recalculated-after-the-order-is-released\">Appeasement and promotions are not recalculated after the order is released</a></li><li><a href=\"/order-modifications$why-is-save-order-call-triggered-on-suspending-payment-method\">Why is save order call triggered on suspending payment method</a></li></ul></li><li><a href=\"/order-modifications$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"edit-order\" id=\"edit-order\"></a>Edit Order</h3>\r\n\r\n<p data-renderer-start-pos=\"11139\">Sometimes a customer will call into the call center to modify an order that has already been placed. In this case, the CSR will first identify which order the customer is calling about using one of the methods mentioned above or in the&nbsp;<a data-renderer-mark=\"true\" href=\"https://omni.helpdocsonline.com/search-orders\" title=\"https://omni.helpdocsonline.com/search-orders\">Search Orders</a>&nbsp;guide. Once the order is located, the CSR may modify the existing order as indicated in the&nbsp;<a data-renderer-mark=\"true\" href=\"https://omni.helpdocsonline.com/modify-existing-orders\" title=\"https://omni.helpdocsonline.com/modify-existing-orders\">Modify Orders</a>&nbsp;guide, given that the order is in an editable status. Examples of order modifications that can be performed by the CSR include, order or line&nbsp;cancelations, quantity adjustments, price overrides, VAS modifications, promotion, and discount modifications, appeasement application, payment method adjustments, and shipping related changes.&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"11823\">Once the CSR has completed the changes requested by the customer, the CSR proceeds by clicking the&nbsp;Confirm Changes<strong data-renderer-mark=\"true\">&nbsp;</strong>button. Once this is complete, the CSR may return to the home screen by clicking the&nbsp;Home&nbsp;icon.&nbsp;If the CSR does not select the Confirm Changes button and tries to exit the order, an error will populate asking the CSR to confirm if they would like to leave the order without confirming changes. This pop-up does not block the CSR and the CSR can click &quot;Leave Order&quot; to exit&nbsp;the order.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note:</strong> CSRs must click the &#39;Confirm Changes&#39; button for payment to be processed. For instance, if quantity is increased and more payment is captured, then an open authorization is created. The authorization is not processed unless the CSR clicks &#39;Confirm Changes&#39;. If an appeasement is added and an auth reversal (or refund) transaction is created, then the auth reversal (or refund) is not processed until the CSR clicks &#39;Confirm Changes&#39;. This should be enforced via SOP or can be selectively automated via extension.</div>\r\n\r\n<p data-renderer-start-pos=\"12642\">Modification of the order is based on permissions and mod type.&nbsp;Refer&nbsp;<a hqid=\"2604082\" href=\"/customer-service-ui-resources\">UI resource</a>&nbsp;page for more details.</p>\r\n\r\n<h4 data-renderer-start-pos=\"12642\" id=\"Order-Edits-by-Status\"><a name=\"order-edits-by-status\" id=\"order-edits-by-status\"></a><a id=\"order-edits-by-status\" name=\"order-edits-by-status\"></a>Order Edits by Status</h4>\r\n\r\n<p data-renderer-start-pos=\"12665\">Below are the order edits a contact center agent can make depending on the order status. Refer <a hqid=\"1809208\" href=\"/order-orchestration-process\">here</a>&nbsp;for more information on order status.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 219px;\"><strong data-renderer-mark=\"true\">Call Center Agent Action</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 265px;\"><strong data-renderer-mark=\"true\">Status Permitted&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Add Instructional Notes</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted until an order is partially released</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Add Customer Communication Notes</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted throughout the lifecycle, including fulfilled orders</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Add/Remove Coupons</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted through lifecycle, including fulfilled orders.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Add/Remove Appeasements</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted through lifecycle, including fulfilled orders.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Add order line</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted until order is fulfilled</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Update item quantity</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted until the order line is released</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Update Ship To Address</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted until the order line is packed</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 217px;\">Remove Payment/Add new payment</td>\r\n\t\t\t<td style=\"width: 250px;\">Permitted throughout the lifecycle</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p data-renderer-start-pos=\"12665\">&nbsp;</p>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"12665\"><strong>Note</strong>: Adding a line post fulfillment may create adjustments if there are order level charges, discounts, and so on.</div>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"12665\"><strong>Note</strong>: Remorse period defines the time between order confirmation and order release. Many order edits can only be done within that remorse period window while the order is in Open status and &ldquo;DoNotReleaseBefore&rdquo; is time-stamped on the order. For more information on remorse periods click&nbsp;<a hqid=\"2588625\" href=\"/how-release-works\">here</a>. Remorse periods are by order header and can not vary across order lines as order lines do not have a do not release&nbsp;before field.&nbsp;</div>\r\n\r\n<h4 data-renderer-start-pos=\"12665\"><a name=\"nbsp-editing-quote-orders\" id=\"nbsp-editing-quote-orders\"></a><a id=\"edit quote\" name=\"edit quote\"></a>&nbsp;Editing Quote Orders</h4>\r\n\r\n<p>Quote Orders may be edited from Customer Service. This allows users&nbsp;to assist customers who want to modify a quote order prior to purchase. The user may perform any edit to a quote order that may be made to a customer service order, except they cannot edit any payment related information, since a quote order does not include a payment.&nbsp;Editing quote orders are managed by the same grants and permissions that apply to regular orders. Refer to <a href=\"https://omni.helpdocsonline.com/quote-orders\">Quote Orders </a>for more details.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: If the CSR wants to add units of an item already on the quote order, they should add a new order line to avoid price updates. This will ensure that the new item is priced at the current market price while honoring the quote order pricing for the original units. The CSR can use the Override Price action if they want to modify prices further for either new or original order lines.</div>\r\n\r\n<h4 data-renderer-start-pos=\"4663\"><a name=\"change-edit-email-id-on-digital-goods-before-order-confirmation\" id=\"change-edit-email-id-on-digital-goods-before-order-confirmation\"></a><a id=\"digital_goods\" name=\"digital_goods\"></a>Change/ Edit Email ID on Digital Goods Before Order Confirmation</h4>\r\n\r\n<p data-renderer-start-pos=\"4731\">Contact center associates can change/edit the email ID on a digital good order line&nbsp;before the order is confirmed.</p>\r\n\r\n<p data-renderer-start-pos=\"4850\">Email Id on a digital good order line can be changed or edited for one digital order line at a time.</p>\r\n\r\n<p data-renderer-start-pos=\"4951\">There are two ways to change/edit the email ID on a digital good line.</p>\r\n\r\n<ol data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"5025\"><strong data-renderer-mark=\"true\">During order creation flow, while selecting the item from the item search page:</strong> when a digital goods line is selected on the item search page:</p>\r\n\r\n\t<ol data-indent-level=\"2\">\r\n\t\t<li>\r\n\t\t<p data-renderer-start-pos=\"5169\">If the user searches for the customer and then searches for the item from the item search page, the customer context is available and the customer&rsquo;s email Id will be pre-populated under the &lsquo;Email&rsquo; in the delivery options section. Users can either let the email Id be as is or edit/change the email Id before checkout. In this case, the email Id is stored on the order line under the OrderLineAdditional.Email attribute.</p>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t<p data-renderer-start-pos=\"5592\">If the customer directly accesses the item search page without the context of the customer while selecting a digital good, then the email text box under &ldquo;Email&rdquo; in the delivery options section will be blank, and the contact center associate can either choose to populate the email Id they wish the digital good goes to or leave it black and proceed further, if an email Id is populated then it will be stored under the OrderLineAdditional.Email attribute. If the email ID is left blank then the email on the digital good line item will automatically be stored on the order header under the order.CustomerEmail attribute.</p>\r\n\t\t</li>\r\n\t</ol>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"6218\"><strong data-renderer-mark=\"true\">On the edit order page: </strong>Once a digital good line is selected (before the order is confirmed), the email option radio button under the delivery options menu will be selected and the email Id for the line will be pre-populated. Users can change/edit the email Id and save it on the order line. The email Id&nbsp;will be stored on the order line under the OrderLineAdditional.Email attribute.</p>\r\n\t</li>\r\n</ol>\r\n\r\n<p data-renderer-start-pos=\"6607\">All digital goods that belong to the same email ID will be grouped together on the edit order page in contact center.</p>\r\n\r\n<p data-renderer-start-pos=\"6230\"><a href=\"/order-modifications$digit\">Click here</a> for Configuration to Change/ Edit Email ID On Digital Goods Before Order Confirmation.</p>\r\n\r\n<h3 data-renderer-start-pos=\"12665\"><a name=\"converting-a-quote-order-to-a-customer-service-order\" id=\"converting-a-quote-order-to-a-customer-service-order\"></a><a id=\"convert quote\" name=\"convert quote\"></a>Converting a Quote Order to a Customer Service Order</h3>\r\n\r\n<p>Please note that the term Customer Service Order is used in reference to any order type that can accept payment in returns for goods. Some organizations may use the term customer service order, retail order, sales order, or just order.&nbsp;</p>\r\n\r\n<p>Once a customer decides to purchase the order lines in the quote order, the user can convert the quote order to a regular customer service order. This will enable the user to provide payment and process the order. The order type will change to Call Center Order, unless the organization has defined another order type value to utilize. Until any payment is provided, the user may convert the order back to a quote order; this is helpful if the&nbsp;customer changes their mind. Once a partial or full payment is provided, the order cannot be converted back to a quote order. To convert a quote order, the CSR must have the appropriate <a hqid=\"2604082\" href=\"/customer-service-ui-resources\">grant</a>.</p>\r\n\r\n<p>The Convert Order to Quote button will only be displayed when the order config is synced to the following&nbsp;mod type: ModTypeID =&nbsp; Order::UpdateOrderToQuote. To learn more about converting quote orders to customer service orders, see <a href=\"https://omni.helpdocsonline.com/quote-orders$convert-quote-to-order-rules\">Converting Quote Orders to Customer Service Orders Rules</a>. The Save As Quote button will only be displayed when the order config is synced to the following mod type: ModTypeID = Order::Update QuoteToOrder.&nbsp;To learn more about converting orders back to quote orders, see<a href=\"https://omni.helpdocsonline.com/quote-orders$update-order-to-quote-rules\"> Updating Orders back to Quote Orders Rules</a>.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: when the system converts an order <em>back</em> to a quote order, it will reference the value defined in the Default Quote Order Type column to determine the quote order type. For more information regarding the column, see the <a href=\"https://omni.helpdocsonline.com/call-center-configuration$default-quote-order-type\">Call Center Configuration</a> help.&nbsp;</div>\r\n\r\n<h3 data-renderer-start-pos=\"13918\" id=\"Canceling-an-Order\"><a name=\"canceling-an-order\" id=\"canceling-an-order\"></a><a id=\"canceling-an-order\" name=\"canceling-an-order\"></a>Canceling an Order</h3>\r\n\r\n<p data-renderer-start-pos=\"13938\">Another common request from customers is the cancelation of an order that they may have placed by mistake. To perform the cancelation, CSR first locates the order by using one of the search options mentioned above. Once on the Customer Transactions&nbsp;screen, which is a list of all the transactions for the customer, the CSR can click the Cancel&nbsp;link to cancel an order without opening the Edit Order&nbsp;or Order Status&nbsp;screens. If the CSR needs to cancel a specific line item, this must be done by first clicking&nbsp;Edit&nbsp;and then canceling the appropriate order line.&nbsp;&nbsp;Once the cancelation is complete, the CSR may return to the home screen by clicking the&nbsp;Home&nbsp;icon. Cancel reasons can be configured in addition to seed data provided under order reasons with reason type Id cancel. For more information on cancel reason, refer to this section <a hqid=\"2737255\" href=\"/cancellations$DSS_Cancel_Reasons\">here</a>. Cancel reason can be shared across Digital Self-Service and Call Center by using flags eligible for self-service and eligible for contact center.</p>\r\n\r\n<p data-renderer-start-pos=\"98\">Canceled orders will display the values of totals, subtotals, prices, charges, discounts, and taxes in parentheses after the order is canceled. This ensures that agents can address any customer inquiries regarding the order details or potentially place a new order honoring the same charges and discounts. This information will be available at both the child and header levels, meaning that if an entire order is canceled, the original order amounts will be shown in the totals section as well as for each individual line item. This functionality can be accessed on the following pages:</p>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"680\">Order Status&nbsp;</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"703\">Edit Order&nbsp;</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"724\">Customer Transactions&nbsp;</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"754\">Customer Dashboard&nbsp;</p>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"782\">Note: Currently, this feature is supported only for regular customer orders and is not available for orders involving returns or exchanges.</div>\r\n\r\n<h4 data-renderer-start-pos=\"959\"><a name=\"configuration\" id=\"configuration\"></a>Configuration</h4>\r\n\r\n<p data-renderer-start-pos=\"959\">The feature to display values for canceled orders is currently protected by the&nbsp;<a hqid=\"3092761\" href=\"/behaviorchange\">behavior change </a>configuration under the menu entry &#39;OM - Display amounts for canceled orders or lines&#39;</p>\r\n\r\n<h3 data-renderer-start-pos=\"14603\" id=\"Late-Order-Cancellation\"><a name=\"late-order-cancellation\" id=\"late-order-cancellation\"></a><a id=\"late-order-cancellation\" name=\"late-order-cancellation\"></a>Late Order Cancellation</h3>\r\n\r\n<p data-renderer-start-pos=\"14628\"><a href=\"https://omni.helpdocsonline.com/lateordercancellation\">Click here </a>to know more about how to cancel pickup&nbsp;in-store&nbsp;and ship to home order lines&nbsp;that have already been released to stores or DC for fulfillment.&nbsp;</p>\r\n\r\n<h3 data-renderer-start-pos=\"14628\"><a name=\"placing-an-order-on-hold\" id=\"placing-an-order-on-hold\"></a><a id=\"Placing an order on hold\" name=\"Placing an order on hold\"></a>Placing an Order on Hold</h3>\r\n\r\n<p>For more information on order and order line holds, please reference the UI guide <a hqid=\"1808451\" href=\"/modify-existing-orders\">here</a>. From the customer service application, only orders can be put on hold at the order header level, removal or placing an order line hold is not permitted within the call center.</p>\r\n\r\n<h3><a name=\"channel-specific-reason-codes\" id=\"channel-specific-reason-codes\"></a><a id=\"channel-specific-reason-codes\" name=\"channel-specific-reason-codes\"></a><a id=\"reason code\" name=\"reason code\"></a>Channel-Specific Reason Codes</h3>\r\n\r\n<p>Order reasons&nbsp;displayed in the contact center and order list pages can be unique or&nbsp;shared with those used in digital self-service. On the Order reasons UI,&nbsp;reasons for having the&nbsp;&#39;Eligible for Contact center&#39; enabled will&nbsp;be displayed in the drop-downs. If the eligibility for contact center is true or null, then the reason is displayed on the contact center and other order-related screens. If this flag is set to false, then the reason will not be shown in the reason drop-downs. Similarly,&nbsp;enable&nbsp;&#39;Eligible for Self Service&#39; for each reason which should be displayed in Digital Self-Service.</p>\r\n\r\n<h3><a name=\"appeasements\" id=\"appeasements\"></a>Appeasements</h3>\r\n\r\n<p>Appeasements are a policy of giving concessions or discounts on an order to customers. Appeasements can be applied at both the order level and the item level. Once the appeasement is applied or removed, the total amount of the order is re-calculated.</p>\r\n\r\n<p>There are 3 types of appeasements available for call center agents to give to customers:</p>\r\n\r\n<ul>\r\n\t<li><strong>Amt Off</strong>&mdash; A fixed value appeasement is keyed in by the CSR.</li>\r\n\t<li><strong>Perc Off</strong>&mdash; Appeasements can be given as a percentage of the total value of the order</li>\r\n\t<li><strong>Flat</strong>&mdash; Supervisors may configure pre-set amounts for CSRs&nbsp;to give as appeasements (that is. $5, $10, and so on). CSRs&nbsp;can select appeasement from a drop-down list.</li>\r\n</ul>\r\n\r\n<p><strong>Conditions&nbsp;</strong></p>\r\n\r\n<ul>\r\n\t<li>The value of appeasement cannot be more than the order or order line total. If the entered value of&nbsp;appeasement is more than the total amount of the order or order line, the maximum value is applied.</li>\r\n\t<li>The value of the appeasement may not exceed the configured threshold amount in the call center configuration. Supervisors may configure limits by CSR role, up to which a CSR may give appeasements.</li>\r\n\t<li>It is mandatory to have a reason associated with the appeasement.</li>\r\n\t<li>\r\n\t<p>Unique reason codes may be applied at the line and order level. They can be configured in the Order Reasons&nbsp;UI. To apply unique reason codes at line or order level, navigate to the Order Reasons UI and select add. Input a Reason ID and then select a Reason Type ID. Reasons with Return Type ID as HeaderAppeasement will apply only to the order level. Reasons with Return Type ID as LineAppeasement will apply only to the line level. Reasons with Return Type ID as Appeasement will apply to both Order and Line level appeasements.</p>\r\n\t</li>\r\n</ul>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: The appeasement at either line or header level&nbsp;is rounded off to two decimal places (to the nearest integer value).&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong><a id=\"appeasement header vs line\" name=\"appeasement header vs line\"></a>Note:</strong> Users have the ability to apply appeasements at both the header and line levels of an order, and these capabilities are covered by a single permission grant. Additionally, users can opt to use separate grants&mdash;one for the order <a hqid=\"2604082\" href=\"/customer-service-ui-resources$appease header\">header level </a>and another for the <a hqid=\"2604082\" href=\"/customer-service-ui-resources$appease line\">line level</a>. This approach is particularly useful for retailers who prefer to restrict their agents to applying either line-level appeasements or header-level appeasements exclusively.</div>\r\n\r\n<h5><a name=\"appeasement-threshold-limits\" id=\"appeasement-threshold-limits\"></a><a id=\"appeasement-threshold-limits\" name=\"appeasement-threshold-limits\"></a>Appeasement Threshold Limits</h5>\r\n\r\n<p>Call center supervisors and administrators can configure limits for how much their call center agents may give as appeasements to customers. The limits can be configured either as a value limit or percentage limit and each configured limit is associated with a particular user role. If multiple limits are configured for a single role or if a user is associated with multiple roles then the minimum of the configured roles is used. For example, if a tier 1 CSR has a threshold limit configured for a $5 value and also a limit for 10%, if the user attempts to apply appeasement to a $100 order, the user is only allowed to apply up to a maximum of $5. If no threshold limit is configured for any of the user roles associated with a user, then the user may appease up to the total order value.&nbsp;</p>\r\n\r\n<p>After the appeasement threshold limits are configured, when a user attempts to give appeasement through the call center application, the appeasement threshold limits are evaluated for the user&#39;s roles and the maximum allowable appeasement is displayed. The user is not allowed to exceed the configured threshold limit or order value. The evaluation of appeasement limits includes any appeasements which were previously given on the order either by the same user or a different user. This prevents a user from exceeding their allowable appeasement amount by giving multiple appeasements. For example, if a Tier 1 CSR is allowed to give a maximum of $5 as an appeasement if an order has already received a $5 appeasement, that user will not be allowed to give any additional appeasement.&nbsp;</p>\r\n\r\n<p>Note that appeasement thresholds only apply to appeasements. They do not apply to overrides (i.e. shipping, item price, VAS, and so on) For UI help regarding appeasements,&nbsp;refer to this&nbsp;<a hqid=\"2005642\" href=\"/applyappeasement\">page</a>.</p>\r\n\r\n<div class=\"tip\">When the order or order line&nbsp;is canceled, then all the charges and discounts are deleted.</div>\r\n\r\n<div class=\"tip\">\r\n<p data-renderer-start-pos=\"1\"><strong>Note</strong>: The appeasement threshold limit configuration in the call center config is <u data-renderer-mark=\"true\">not</u> defined for every order at the order level. It is defined for the user role and the appeasement type. i.e. this threshold will apply<strong data-renderer-mark=\"true\"> every time</strong> this user (of a specific user role) applies the type of appeasement configured.</p>\r\n\r\n<p data-renderer-start-pos=\"307\">This is at the entity level and not at the order level. So if an order has 2 order lines then the user can apply the appeasement at 3 entity levels (one at the order header and one at each of the 2 order lines) so the threshold will apply every time the user applies the type of appeasement configured in the call center config.</p>\r\n</div>\r\n\r\n<h5><a name=\"stacked-appeasements-in-contact-center\" id=\"stacked-appeasements-in-contact-center\"></a>Stacked Appeasements in Contact Center</h5>\r\n\r\n<p>In general, when appeasements are applied one after another on an order, the appeasement amount is always taken from the original order total.&nbsp;</p>\r\n\r\n<p>Stacked appeasement is a feature to enable the appeasement amount to be applied in a specific sequence on the resultant amount due to the previous % appeasement.</p>\r\n\r\n<p data-renderer-start-pos=\"214\">Example of non-stacked appeasements:&nbsp;</p>\r\n\r\n<ol data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"226\">The order is total is $100.00</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"246\">Add Appeasement A for 10%. The new order total is&nbsp; $100.00 - (100*.1) = $90</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"317\">Add appeasement B for 10%. The new order total is $90 - (100*.1)= $80</p>\r\n\t</li>\r\n</ol>\r\n\r\n<p data-renderer-start-pos=\"383\">Example of stacked appeasements:&nbsp;</p>\r\n\r\n<ol data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"409\">The order total is&nbsp;$100.00</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"429\">Add Appeasement A for 10%. The new order total is $100.00 - (100*.1) = $90</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"500\">Add appeasement B for 10%. The new order total is $90 - (90*.1)= $81</p>\r\n\t</li>\r\n</ol>\r\n\r\n<p data-renderer-start-pos=\"500\">Customer Service will apply a charge sequence on all appeasements applied in the Call Center application. The charge sequence is applied in ascending order by the timestamp it is applied.&nbsp;The value populated in the charge sequence field is the number of seconds elapsed since January 1, 1970, 00:00:00 UTC.</p>\r\n\r\n<p data-renderer-start-pos=\"14207\"><span style=\"font-size:14px;\">Configuration for Stacked Appeasements&nbsp;</span></p>\r\n\r\n<p data-renderer-start-pos=\"14207\">The stacked appeasement behavior can be used once the Enable Stacked Appeasements flag&nbsp;is enabled in the <a href=\"http://omni.helpdocsonline.com/call-center-configuration$configuration-for-stacked-appeasement\">Call Center configuration</a>. When this configuration is disabled, all applied appeasements will have the Charge Sequence of zero and the appeasement will be calculated based on the order line total or order header total.</p>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"14012\">\r\n<p>Appeasements are stackable within the order line and within the order header; but are not stackable across the two.</p>\r\n\r\n<p>All line-level appeasements/discounts are applied before the header level. For more details on discount application logic, <a href=\"https://omni.helpdocsonline.com/discount\">click here.&nbsp;</a></p>\r\n</div>\r\n\r\n<h3 data-renderer-start-pos=\"14628\"><a name=\"appeasement-for-lost-package\" id=\"appeasement-for-lost-package\"></a>Appeasement for Lost Package</h3>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">If a customer calls CSR to report or complain about packages that were never delivered to them after it was shipped because it was lost by the carrier or for any other reason - CSR can decide to provide appeasement for the lost package so that the customer is refunded for the lost package. The CSR can apply appeasement for a&nbsp;specific package that is reported as lost from the Completed Shipments panel displayed on the Transaction List panel of the customer dashboard or order status screen by clicking on Appease button that is displayed and enabled for each package shipped for th order below - Package Appeasement Options. The CSR can also decide if charges like shipping and handling and VAS charges can also be included in the appeasement or not before applying the appeasement.&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">To enable the CSR to apply Package Appeasement,&nbsp;the grant -&nbsp;customerservice::order::appeasement::package - has to be provided for the CSR.</p>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The package will be eligible for applying appeasement if all the below-mentioned conditions are satisfied.&nbsp;</p>\r\n\r\n<ul>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">Order is partially fulfilled&nbsp;or fulfilled</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">Delivery method is Ship To Address and NOT any other delivery method.</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">Package is shipped for Delivery Leg and NOT for Merge Leg and the</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">Package is not yet delivered</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The order is configured for generating shipment invoices at Fulfilled status (7000) or any other valid status so that the shipment invoice is generated based on package Id&nbsp;and NOT on any other status where shipment invoice does not have package Id information.</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The order has a shipment invoice generated for the specific package</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The package has not already been&nbsp;appeased</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">A return order has not already been created for the items shipped as part of the package&nbsp;</li>\r\n</ul>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The appeasement amount for lost package appeasement is automatically calculated by the system and the CSR cannot specify any percentage or amount to appease. The maximum amount of appeasement that can be applied is derived from the shipment invoice generated for the specific package that includes item price and tax component.&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The charges included in the shipment invoice can be configured to be NOT eligible for appeasement in chargeTypeConfig&nbsp;by configuring the attribute isNotRefundableOnPackageAppeasement = true for the specific charge type.</p>\r\n\r\n<ul>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The charges with charge type for which&nbsp;the attribute isNotRefundableOnPackageAppeasement = false&nbsp;are included in the lost package appeasement automatically.</li>\r\n\t<li data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">The charges with charge type for which&nbsp;the attribute isNotRefundableOnPackageAppeasement = true are&nbsp;excluded from the lost package appeasement automatically.&nbsp;&nbsp;</li>\r\n</ul>\r\n\r\n<p style=\"text-align: justify;\">By default,&nbsp;the charges with charge type for which&nbsp;the attribute isNotRefundableOnPackageAppeasement = false are included in the package appeasement - indicated by the checkbox Include Charges checkbox next to Appease Button already selected (checked) by default by the system. If&nbsp;CSR can&nbsp;deselect (uncheck) it manually to exclude it from being included in lost package appeasement.&nbsp;</p>\r\n\r\n<div class=\"info\" style=\"text-align: justify;\"><strong>Note</strong>: Use &#39;<strong>api/order/orderConfig/orderConfigId/{OrderConfigId}</strong>&#39; API&nbsp;to configure&nbsp;isNotRefundableOnPackageAppeasement attribute under &#39;ChargeTypeConfig&#39; section.</div>\r\n\r\n<p style=\"text-align: justify;\">Before applying&nbsp;the lost package appeasement, by clicking on the Appease button, CSR can select the reason&nbsp;for the appeasement from the reason dropdown. The system displays all order reasons defined in the system for reason type -&nbsp;PackageAppeasement and Eligible For Contact Center configured, sorted in alphabetical order with the first reason already selected by default. If CSR wants to select another reason from the available reasons - they can select it from the dropdown. If there are no order reasons defined in the system for&nbsp;reason type -&nbsp;PackageAppeasement - the reason dropdown will be hidden.&nbsp;</p>\r\n\r\n<p style=\"text-align: justify;\">When CSR clicks the Appease button - the Confirm Package Appeasement popup is displayed with the message -&nbsp;Package appeasements cannot be removed. Are you sure you want to appease this package? - displayed on it along with two buttons for the CSR to either Confirm the system that lost package appeasement can be applied or to Cancel the action.&nbsp;</p>\r\n\r\n<div class=\"warning\" style=\"text-align: justify;\"><em><strong>WARNING: Once a lost package appeasement is applied for a specific package, it CANNOT BE REMOVED&nbsp;from the order and the action is irreversible.</strong></em></div>\r\n\r\n<p data-renderer-start-pos=\"14628\" style=\"text-align: justify;\">Once CSR confirms the system to apply the lost package appeasement, the system will apply the appeasement accordingly to the specific package and creates appropriate charge records for the appeasement for the respective order lines, items and quantities which were included in the specific package and the final order totals and other details like total discounts after applying the lost package appeasement will be displayed on the order status screen or on the order status panel if the appeasement was applied from the transaction list panel on customer dashboard screen.</p>\r\n\r\n<div class=\"tip\" data-renderer-start-pos=\"14628\" style=\"text-align: justify;\"><strong>Note</strong>: Once the Lost Package Appeasement is successfully applied to the order , the details of the appeasement applied will be displayed on the Appeasement Popup - Applied Appeasements section with&nbsp;&nbsp;Type as Package_&lt;PackageId&gt; and the reason selected at the time of applying the lost package appeasement. Entered Value and APplied values will NOT be populated since the CSR did not enter any appeasement value.</div>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"14628\" style=\"text-align: justify;\"><strong>WARNING:</strong> Lost package appeasement with&nbsp;&nbsp;ype as Package_&lt;PackageId&gt; cannot be removed by clicking on the cancel/remove button (X) from the Appeasement Popup in the Applied Appeasement section. The&nbsp;cancel/remove button (X) from the Appeasement Popup in the Applied Appeasement sec will be disabled for appeasement type -&nbsp;&nbsp;Package_&lt;PackageId&gt; and a tool tip -&nbsp;&quot;Package appeasement cannot be removed&quot; will be displayed.</div>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"14628\" style=\"text-align: justify;\"><strong>WARNING:&nbsp;</strong>Once lost package appeasement is applied to a specific package - the system will reduce the returnable quantities for the respective order line, item and quantity that was shipped as part of the specific package that was appeased, and the customer will not be able to create a return order for the same-from any channel including contact center or self-service</div>\r\n\r\n<h3 data-renderer-start-pos=\"14628\"><a name=\"promotions-coupons\" id=\"promotions-coupons\"></a>Promotions, Coupons</h3>\r\n\r\n<p data-renderer-start-pos=\"14628\">Within the contact&nbsp;center, the contact center associate can add coupons to an order or order line and can also have promotions automatically applied. Refer to these UI guides for <a hqid=\"2005644\" href=\"/applypromotions\">promotions</a> and <a hqid=\"2005643\" href=\"/applycoupons\">coupons</a>.&nbsp; For more information on the base promotion evaluation, refer to this guide <a hqid=\"2406770\" href=\"/item-pricing-and-promotional-event-process$pricing-evaluation-and-sale-price\">here</a>. These promotions are automatically applied to the order if all criteria configured meet the promotion requirements. Promotions are applied when the order&nbsp;created fits the configured promotion and will not notify the agent if they qualify for promotions prior to adding the promotion in the cart.&nbsp;</p>\r\n\r\n<h3 data-renderer-start-pos=\"14628\"><a name=\"payment-based-promotions-in-contact-center-nbsp\" id=\"payment-based-promotions-in-contact-center-nbsp\"></a>Payment Based Promotions in Contact center&nbsp;</h3>\r\n\r\n<p>The Payment Promotion feature provides the ability to configure and execute promotion deals based on the payment methods used to make the payment.</p>\r\n\r\n<p>The Manhattan Active&reg; Omni promotions engine supports a payment-based promotion, such as 10% if you pay with a Private Label Credit Card. When a user selects a payment type configured for promotion, the discount is automatically applied and visible to the agent.&nbsp;</p>\r\n\r\n<p>Depending on the selected payment method, the discounted amount is displayed to the agent even before the payment transaction is processed to:</p>\r\n\r\n<ol type=\"1\">\r\n\t<li value=\"1\">Ensure&nbsp;that the payment is processed accurately for the correct amount based on the selected payment method.</li>\r\n\t<li>Allow&nbsp;the agent to confirm the revised order total with the customer before finalizing the transaction.</li>\r\n</ol>\r\n\r\n<p lang=\"en-US\">On the contact center UI:</p>\r\n\r\n<p lang=\"en-US\">To preview the payment based promotion, retailers have to configure&nbsp;&quot;<a href=\"https://omni.helpdocsonline.com/cart-and-preview-mode$initializing-nbsp-the-cart\">Enable Preview Mode</a>&quot; configuration. To apply payment promotions during the UI order capture/modification&nbsp;flows, the agent should choose to pay through the payment type which is associated to the promo deal.&nbsp;</p>\r\n\r\n<p lang=\"en-US\">The agent can capture/edit an order on the UI and will be able to see the payment based promotion applied based on the payment method they intend to use. In the payment tab, clicking on the selected payment method expansion panel will trigger the promotion evaluation and the user will see the balance to pay even before actually making a payment. Based on the payment method selected on the UI, the user will also be able to see the payment-based promotion applied at the order level.</p>\r\n\r\n<div class=\"tip\">When a retailer configures a payment deal that results in a 0.00 balance, as seen in scenarios like &quot;Pay with PLCC and receive Women&#39;s items for free&quot; for a purchase exclusively consisting of Women&#39;s items, or when a user gets a $50 discount on every PLCC purchase, but the item they are&nbsp;purchasing costs $50, or even in the case of an exchange scenario where the balance is positive and the user chooses a payment method that leads to a refund, it&#39;s essential to understand that in such instances, the user will not immediately observe the promotion. Instead, they will be required to input their card or payment details when placing the order, and the discount will be applied when they proceed with the payment and confirm the order.</div>\r\n\r\n<div class=\"tip\" lang=\"en-US\"><strong>Note</strong>: Payment based promotion is currently not supported at the item level. It is only available at the order level.</div>\r\n\r\n<p>Click <a href=\"http://omni.helpdocsonline.com/discount$payment-based-promotion-nbsp\">here </a>for more details on how payment based promotions work&nbsp;on the tender types used to make the payment.&nbsp;</p>\r\n\r\n<p>Click <a href=\"https://omni.helpdocsonline.com/order-modifications$configuration-for-payment-based-promotions-nbsp\">here </a>for configuration for payment based promotion.</p>\r\n\r\n<h3 data-renderer-start-pos=\"14628\"><a name=\"price-overrides-nbsp\" id=\"price-overrides-nbsp\"></a>Price Overrides&nbsp;</h3>\r\n\r\n<p>For information regarding price overrides, refer to the UI guide <a hqid=\"2005647\" href=\"/overrideprices\">here</a>.</p>\r\n\r\n<h3 data-pm-slice=\"1 1 []\" data-prosemirror-content-type=\"node\" data-prosemirror-node-block=\"true\" data-prosemirror-node-name=\"paragraph\"><a name=\"send-customer-copy-of-invoice-pdf\" id=\"send-customer-copy-of-invoice-pdf\"></a>Send customer copy of invoice PDF</h3>\r\n\r\n<p>Contact center agents can send shipment invoices to customers using the Send Invoices option available in the Order Status UI and the Order Edit UI. If a customer requests for the shipment&nbsp;invoices, the agent can use this button to send an email with the invoice attached.</p>\r\n\r\n<p>Clicking the Send Invoices button opens a popup with a pre-filled email field and a Send button. The pre-filled email ID is the one already available on the order. If the order does not have an email, the customer&rsquo;s email ID is displayed if available. The email field is editable, allowing agents to enter a different email address if the customer wants the invoice sent to a different address. Updating the email in this popup only affects the current interaction and does not update the email address on the order.</p>\r\n\r\n<p>The Send Invoices button is available only for customer and exchange&nbsp;orders and is not displayed for return orders. The button is protected by permission. If the agent has the necessary resource, the button is visible. If&nbsp;not available, the button remains hidden.&nbsp;Refer&nbsp;<a href=\"https://omni.helpdocsonline.com/customer-service-ui-resources$send invoice\">UI Resource</a>&nbsp;for more details on grants.</p>\r\n\r\n<p>Once the agent reviews or updates the email address, they can click Send to send the invoice. The system then emails the invoice as an attachment to the specified email address.</p>\r\n\r\n<h3><a name=\"preview-estimated-refunds-and-toggle-refund-payment-method\" id=\"preview-estimated-refunds-and-toggle-refund-payment-method\"></a>Preview Estimated Refunds and Toggle Refund Payment Method</h3>\r\n\r\n<p>By default, the system will apply a refund&nbsp;as soon as you provide it. A refund&nbsp;is considered any change that lessens the price of the order, such as appeasements, coupons, promotions, waiving fees and reducing order line quantities. However, you can summarize the refund and display the estimated amount in the Refund Section on the Payment Tab, which allows the CSR to communicate the dollar value to the customer. To summarize the discount to be refunded,&nbsp;set the&nbsp;<a href=\"https://omni.helpdocsonline.com/call-center-configuration$display-estimated-refund-for-orders-nbsp\">configuration value</a>; this is applied at the organization level.&nbsp;</p>\r\n\r\n<p>In addition, you can toggle the payment method for the refund between an electronic gift card and the original credit card(s). This provides greater flexibility, in the event the original card is expired or the organization prefers to tender refunds as gift cards. To toggle the refund payment method, <a hqid=\"2604082\" href=\"/customer-service-ui-resources$overridepaymentmethod\">provide the grant </a>and assign to the user&#39;s role.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>:&nbsp;if the organization applies discounts to the authorized amount before settled amounts, the estimated refund does not include the authorized amount. For example, if the total discount refund&nbsp;= $100 and the authorized amount = $20, the Estimated Refund = $80.</div>\r\n\r\n<h3><a name=\"external-order-modifications\" id=\"external-order-modifications\"></a>External Order Modifications</h3>\r\n\r\n<p>If an order is modified by an external system, for example, a payment is added by an external system,&nbsp;the call center does not currently support automatically refreshing to reflect those changes. Please contact your services team for testing these flows and possible solutions to capture external updates.&nbsp;</p>\r\n\r\n<h5><a name=\"selling-channel-for-order-updates\" id=\"selling-channel-for-order-updates\"></a>Selling Channel for Order Updates</h5>\r\n\r\n<p>The selling channel specifies the channel where the order was captured, such as a store, call center, or web. So editing an order that was created on the web or store in the contact center application will not change the original selling channel.</p>\r\n\r\n<h3><a name=\"configurations\" id=\"configurations\"></a>Configurations</h3>\r\n\r\n<h5 data-renderer-start-pos=\"6230\"><a name=\"configuration-for-nbsp-change-edit-email-id-on-digital-goods-before-order-confirmation\" id=\"configuration-for-nbsp-change-edit-email-id-on-digital-goods-before-order-confirmation\"></a><a id=\"digit\" name=\"digit\"></a>Configuration for&nbsp;Change/ Edit Email ID on Digital Goods Before Order Confirmation</h5>\r\n\r\n<p data-renderer-start-pos=\"1590\">To enable this feature, perform the following steps:</p>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1617\">Navigate to&nbsp;<strong data-renderer-mark=\"true\">Menu&nbsp;</strong>&gt;&nbsp;<strong data-renderer-mark=\"true\">Proactive&nbsp;</strong>&gt;<strong data-renderer-mark=\"true\">&nbsp;Proactive Menu</strong>&nbsp;&gt;&nbsp;<strong data-renderer-mark=\"true\">Functional Config</strong>&nbsp;&gt;<strong data-renderer-mark=\"true\">&nbsp;Review Behavior Changes</strong></p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1712\">For the record with&nbsp;<strong data-renderer-mark=\"true\">Change Name</strong>&nbsp;as &#39;Modify Email ID for Digital Goods,&#39; set&nbsp;<strong data-renderer-mark=\"true\">Enabled&nbsp;</strong>to &#39;true&#39;. If not enabled by the&nbsp;<strong data-renderer-mark=\"true\">Must Enable By Date</strong>&nbsp;listed in this UI, the theme will automatically be enabled on this date.&nbsp;</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1926\">Users will need an appropriate<em data-renderer-mark=\"true\"><strong data-renderer-mark=\"true\">&nbsp;</strong></em><a href=\"https://omni.helpdocsonline.com/customer-service-ui-resources$edit-order\">grant </a>to be able to access the &ldquo;USE THIS&rdquo; button on the edit order page&nbsp;to edit/change an email Id for digital good.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1926\">If the feature is not enabled on the review behavior change configuration, the email ID delivery option will not be displayed on the edit order page.&nbsp;</p>\r\n\t</li>\r\n</ul>\r\n\r\n<h4><a name=\"configuration-for-payment-based-promotions-nbsp\" id=\"configuration-for-payment-based-promotions-nbsp\"></a>Configuration for Payment Based Promotions&nbsp;</h4>\r\n\r\n<p>To enable payment promotion, perform the following steps:</p>\r\n\r\n<ol>\r\n\t<li>Navigate to <strong>Menu </strong>&gt; <strong>Application Configuration</strong> &gt; <strong>Manage Selling Configuration</strong> &gt; <strong>Selling </strong>&gt; <strong>Promotion Global Parameters.</strong></li>\r\n\t<li>Select the promotion configuration and click<strong> View.&nbsp;</strong>&nbsp;</li>\r\n\t<li>On the Edit Promotion Configuration, select the <strong>Enable Payment Promotions </strong>check box.</li>\r\n</ol>\r\n\r\n<p>The cart component should also be initialized to support payment-based&nbsp;promotions. Refer to&nbsp;<span style=\"color:#f1c40f;\"><a href=\"https://omni.helpdocsonline.com/cart-and-preview-mode$initializing-nbsp-the-cart\">Initializing&nbsp;the Cart</a> </span>for more details..&nbsp;</p>\r\n\r\n<h3><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<h4><a name=\"how-to-disable-order-edits-for-a-certain-order-type-order-status\" id=\"how-to-disable-order-edits-for-a-certain-order-type-order-status\"></a>How to disable order edits for a certain order type/order status</h4>\r\n\r\n<p>There are two options to disable order edits for a certain order type/order status.</p>\r\n\r\n<p>Option 1:</p>\r\n\r\n<p>UI disables/enables the edit actions on the call center based on mod types that the Permittedmodtype API returns.</p>\r\n\r\n<ol>\r\n\t<li>Intercept&nbsp;the following API that UI makes</li>\r\n</ol>\r\n\r\n<p style=\"margin-left: 40px;\">/customerengagementfacade/api/customerengagementfacade/ds/order/orderId/{{orderId}}/permittedModTypes</p>\r\n\r\n<ol start=\"2\">\r\n\t<li>Get the command router details from Proactive UI: Menu &gt; Proactive &gt; Developer Artifacts &gt; SELECT &gt;Specify APIs &gt; Customerengagementfacade &gt; Search by key: listModTypesDS</li>\r\n\t<li>Ensure all <a href=\"https://omni.helpdocsonline.com/mod-types\">mod types</a> are removed based on order type and order status or any other custom details.</li>\r\n</ol>\r\n\r\n<p>Option 2:</p>\r\n\r\n<p>To allow&nbsp;UI to display an error when a user tries to perform an action that is not allowed to perform, follow the steps:</p>\r\n\r\n<ol>\r\n\t<li>Intercept the following save order call</li>\r\n</ol>\r\n\r\n<p style=\"margin-left: 40px;\">/customerengagementfacade/api/customerengagementfacade/ds/order/save</p>\r\n\r\n<p style=\"margin-left: 40px;\">/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder</p>\r\n\r\n<ol start=\"2\">\r\n\t<li>Get the command router details from Proactive UI: Menu &gt; Proactive &gt; Developer Artifacts &gt; SELECT &gt;Specify APIs &gt; Customerengagementfacade &gt; Search by key: saveOrderDS</li>\r\n\t<li>Construct an error message (refer <a href=\"https://omni.helpdocsonline.com/proactive/uiextensibility/contactcenter$sample-order-validation-error\">sample Order validation error</a>).</li>\r\n\t<li>The UI will display the standard error pop-up. You can now customize this pop-up by hiding the base content and using an iframe to show a custom message like &lsquo;Order modifications are not allowed&rsquo;.</li>\r\n</ol>\r\n\r\n<h4><a name=\"how-to-display-the-count-of-order-notes-on-the-customer-transaction-ui\" id=\"how-to-display-the-count-of-order-notes-on-the-customer-transaction-ui\"></a>How to display the count of order notes on the Customer Transaction UI</h4>\r\n\r\n<p>The order notes can be displayed at the header and line level.</p>\r\n\r\n<p>To configure the count of order notes at the header level, use the following UI extension points:</p>\r\n\r\n<p>ScreenId: ce::customer-transaction-orderline<br />\r\nExtensionId: customer-transaction-orderline-label-2</p>\r\n\r\n<p>To configure the count of order notes at the line level, use the following UI extension points:</p>\r\n\r\n<p>ScreenId: ds::call-center-transaction-list<br />\r\nExtensionId: line-item-info-label-4</p>\r\n\r\n<h4><a name=\"how-to-stop-authorized-calls-from-call-center\" id=\"how-to-stop-authorized-calls-from-call-center\"></a>How to stop authorized calls from call center</h4>\r\n\r\n<p>It is necessary to stop auth call when the fraud response is pending or declined from service provided. The&nbsp;requirement is to have the payment saved, order confirmed, and a pop-up message displayed. This can be implemented through the following options.</p>\r\n\r\n<p>Option 1:&nbsp;Hidden iFrame Approach</p>\r\n\r\n<p>In the Summary section of the Edit order screen, there is an iFrame&nbsp;<br />\r\nScreenId: ds::edit-order<br />\r\nExtensionId: edit-order-summary-iframe</p>\r\n\r\n<ol>\r\n\t<li>Perform fraud check in the custom code based on onPlaceOrder and onConfirmOrder events.</li>\r\n\t<li>If the fraud check passes, you can call ackplaceorder and ackconfirmorder actions with pro as parameter that will continue with the base flow.</li>\r\n\t<li>If the fraud check fails,&nbsp;in the custom code you can make a call directly to hit the order component to confirm the order, and then you can open the custom pop-up within the iFrame (use util functions). You can call maextensionsutil.popups.openspop API to open a pop-up to display a message that you want to show with a button, on clicking this button again, the util function will help you to navigate to the Transaction List page.</li>\r\n</ol>\r\n\r\n<p>Option 2:&nbsp;Command Router Approach</p>\r\n\r\n<ol>\r\n\t<li>Intercept the following API call {{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder</li>\r\n\t<li>In the custom code, load the order by passing a template to get isconfirmed flag to true.</li>\r\n\t<li>In the intercepted call, perform the fraud check.</li>\r\n\t<li>If the order is already confirmed, it will go with custom flow, otherwise forward it to base flow.</li>\r\n\t<li>If a fraud check fails, show the standard pop-up.</li>\r\n</ol>\r\n\r\n<h4><a name=\"trigger-point-for-fraud-check-validation-on-csr-confirm-order-during-order-edit\" id=\"trigger-point-for-fraud-check-validation-on-csr-confirm-order-during-order-edit\"></a>Trigger point for fraud check validation on CSR confirm order during order edit</h4>\r\n\r\n<p>Option 1 : Hidden iframe Approach</p>\r\n\r\n<p>In the Summary section of the Edit order screen there is an iframe<br />\r\nScreenId: ds::edit-order<br />\r\nExtensionId: edit-order-summary-iframe</p>\r\n\r\n<ul>\r\n\t<li>When you click the confirm changes button, in the custom code, you can listen to onConfirmOrder event. This event should be fired, and you can perform the required fraud check validation inside the custom code. If it seems like a fraud, then you can call API to open a custom pop-up to inform the same to the CSR, and this will stop the flow.&nbsp;</li>\r\n\t<li>In custom code, if everything is successful, you can call this action acknowledgeconfirmorder with boolean as true(&quot;ConfirmOrderBool&quot;:true). It will continue with the regular base flow.</li>\r\n</ul>\r\n\r\n<p>Option 2: Command Router Approach</p>\r\n\r\n<p>By Intercepting the payment request API call (https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/payment/paymentRequest).</p>\r\n\r\n<h4><a name=\"how-to-restrict-csr-associates-from-applying-header-level-appeasements-until-the-entire-order-is-shipped\" id=\"how-to-restrict-csr-associates-from-applying-header-level-appeasements-until-the-entire-order-is-shipped\"></a>How to restrict CSR associates from applying header level appeasements until the entire order is shipped</h4>\r\n\r\n<ul>\r\n\t<li>Intercept the following API that UI makes</li>\r\n</ul>\r\n\r\n<p>https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/orderId/{{orderId}}/permittedModTypes</p>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"7608\">Get the command router details from Proactive UI: Menu &gt; Proactive &gt; Developer Artifacts &gt; SELECT &gt; Specify APIs &gt; Customerengagementfacade &gt; Search by key: <code data-renderer-mark=\"true\">listModTypesDS</code></p>\r\n\t</li>\r\n</ul>\r\n\r\n<h4 data-renderer-start-pos=\"7608\"><a name=\"perform-validation-and-show-error-message\" id=\"perform-validation-and-show-error-message\"></a>Perform validation and show error message</h4>\r\n\r\n<p>Example : To show a customized error message with a custom popup when CSR tries to apply an appeasement&nbsp;</p>\r\n\r\n<p>Follow the steps below:</p>\r\n\r\n<ol>\r\n\t<li>Intercept the Save order call.&nbsp;Refer to&nbsp;<a hqid=\"3097755\" href=\"/intercepting-ui-api-calls-to-re-route-to-custom-api\">Intercepting UI API calls to re-route to custom API&nbsp;</a>for more details.</li>\r\n\t<li>Get the command router details from Proactive UI: Menu &gt; Proactive &gt; Developer Artifacts &gt; SELECT &gt;Specify APIs &gt; Customerengagementfacade &gt; Search by key: &nbsp;saveOrder</li>\r\n\t<li>{{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder API call.</li>\r\n\t<li>Construct an error message, refer to<a href=\"https://omni.helpdocsonline.com/command-router$sample-order-validation-error\">&nbsp;Sample Order Validation Error</a>&nbsp;for more details.&nbsp;UI will display the standard error pop-up.&nbsp;</li>\r\n\t<li>You can customize by hiding base content and implementing the iframe (ScreenId:ce::message-popup, ExtensionId:custom-message-popup).&nbsp;Refer to&nbsp;<a href=\"https://omni.helpdocsonline.com/iframes$how-to-use-iframe-extensions\">How to use IFrame extension</a>&nbsp;for more details.</li>\r\n\t<li>If you want the iframe to have 2 buttons , example proceed to apply appeasement &nbsp;and cancel buttons you need to pass all info in custom code and call save order on click of PROCEED refresh by calling MAExtension.PopupsScreen.actions.refresh() and on click of CANCEL call MAExtension.PopupsScreen.actions.close(). Refer to <a href=\"https://omni.helpdocsonline.com/command-router$extension-util-functions\">MA Extension Util Functions</a>&nbsp;for more details.</li>\r\n</ol>\r\n\r\n<h4><a name=\"how-to-avoid-error-pop-up-displayed-when-customer-info-is-not-found-in-active-omni-nbsp-while-placing-an-order\" id=\"how-to-avoid-error-pop-up-displayed-when-customer-info-is-not-found-in-active-omni-nbsp-while-placing-an-order\"></a>How to avoid error pop-up displayed when customer info is not found in Active Omni&nbsp;while placing an order</h4>\r\n\r\n<p>Follow the steps below:</p>\r\n\r\n<ol>\r\n\t<li>Intercept the following API call to handle the error pop-up when customerid is not found</li>\r\n</ol>\r\n\r\n<p>(<a href=\"https://%7b%7bhostname%7d%7d/customerengagementfacade/api/customerengagementfacade/customer/customerId/%7b%7bcustomerId%7d%7d?templateName=callCenterCustomerInfoTemplate&orderId=%7b%7borderId%7d%7d\">https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/customer/customerId/{{customerId}}?templateName=callCenterCustomerInfoTemplate&orderId={{orderId}}</a>)</p>\r\n\r\n<ol start=\"2\">\r\n\t<li>Enable the following call center configurations:</li>\r\n</ol>\r\n\r\n<ul>\r\n\t<li>Register Customer</li>\r\n\t<li>Update Customer</li>\r\n\t<li>Save all payment types to the customer during checkout</li>\r\n</ul>\r\n\r\n<h4><a name=\"how-to-automatically-trigger-payment-processing-when-csr-39-s-do-not-click-quot-confirm-changes-quot\" id=\"how-to-automatically-trigger-payment-processing-when-csr-39-s-do-not-click-quot-confirm-changes-quot\"></a>How to automatically trigger payment processing when CSR&#39;s do not click &quot;Confirm Changes&quot;</h4>\r\n\r\n<p>In some cases, payment processing may be automatically triggered without the CSR selecting &quot;Confirm Changes&quot;, for example, if the order is completely fulfilled and paid, and the order total is reduced due to an appeasement being applied, the refund will process automatically unless the &quot;hold transaction till confirmation&quot; parameter is enabled in call center configuration.</p>\r\n\r\n<p>In other cases, however, for example, if the order is not already paid, and an order total reduction due to appeasement, cancelation, price override, etc. will only result in an authorization reversal, confirming the changes from the UI is required to trigger the processing of the payment. In order to perform this process&nbsp;automatically - a mod type level service can be added based on the user action that may require immediate payment processing. The following setup can be done to selectively process the payment:</p>\r\n\r\n<ol>\r\n\t<li>Create a custom&nbsp;extension point or leverage one of the existing &quot;CustomExtensionService&quot; that is not already in use</li>\r\n\t<li>Add your extension point to the&nbsp;&quot;CustomServiceConfig&quot; of the desired modification type. For example: &#39;Apply Appeasement&#39;.</li>\r\n\t<li>Create an extension handler for that extension point&nbsp;which takes the order object as input</li>\r\n\t<li>Within the extension handler, convert the order object into a payment request. For example:</li>\r\n</ol>\r\n\r\n<div class=\"computer_code\" style=\"margin-left: 80px;\">{<br />\r\n&nbsp; &nbsp; &quot;PaymentRequestId&quot;: &quot;{unique value}&quot;,<br />\r\n&nbsp; &nbsp; &quot;OrderId&quot;: &quot;{OrderId}&quot;,<br />\r\n&nbsp; &nbsp; &quot;ExecutionMode&quot;: &quot;CalculateAndExecute&quot;<br />\r\n}</div>\r\n\r\n<ol start=\"5\">\r\n\t<li>After conversion, post&nbsp;the payment request to the payment request queue &quot;queue.SavePaymentRequestEvent&quot;</li>\r\n</ol>\r\n\r\n<h4><a name=\"how-to-resolve-the-issue-of-the-discount-exceeding-the-line-total-when-appeasement-is-applied-as-an-amount-off-for-a-line-with-gift-wrap\" id=\"how-to-resolve-the-issue-of-the-discount-exceeding-the-line-total-when-appeasement-is-applied-as-an-amount-off-for-a-line-with-gift-wrap\"></a>How to resolve the issue of the discount exceeding the line total when appeasement is applied as an amount off for a line with gift wrap</h4>\r\n\r\n<p>Scenario:&nbsp;An order is placed with an order line priced at 187, and two coupons are applied to the order line as follows:</p>\r\n\r\n<ul>\r\n\t<li>Coupon 1: discount amount = -46.75</li>\r\n\t<li>Coupon 2: discount amount = -56.10</li>\r\n</ul>\r\n\r\n<p>At the time of order creation, the total discount on the unit price was 102.85, resulting in a price after discounts as 84.15. At this point, the order line was 84.15 for TaxTypeId SALES and 5 for VAS, making the total of the order line 89.15.</p>\r\n\r\n<p>If an appeasement of 89.15 is applied at the line level for a refund due to a lost order, the base performs the following proration as 86.83 for merchandise and -2.32 for VAS. This causes the total discount applied to the items to exceed the unit price (102.85 + 86.83 = 189.68, which is greater than 187). As a result, a negative tax amount appears on the SALES TaxTypeId orderLineTaxDetail, where a zero amount was expected.</p>\r\n\r\n<p>Solution:&nbsp;The above resulted because the 89.15 appeasement was applied first considering the following charge sequence</p>\r\n\r\n<p>-89.15 &rarr; Appeasement &rarr; ChargeSeq = 0</p>\r\n\r\n<p>-46.75-&gt; Coupon &rarr; chargeSeq = 2</p>\r\n\r\n<p>-56.10 &rarr; Coupon &rarr; ChargeSeq = 3</p>\r\n\r\n<p>To resolve the issue of the discount exceeding the line total, the appeasement charge sequence should always be higher than any existing discounts on the line. To implement this, select the Enable Stacked Appeasement check box on the Contact Center Configuration UI. This ensures that the UI will always apply a higher sequence when an appeasement is applied.</p>\r\n\r\n<p>In the above-mentioned use case, if the appeasement&rsquo;s charge sequence is set higher, the proration logic for the coupons already applied to the line would be:</p>\r\n\r\n<p>ProratedValue = (itemSubTotal * AmountToBeProrated) / LineTotal = (84.15 * -89.15) / 89.15 = -84.15, which will be allocated to the subtotal.</p>\r\n\r\n<p>The remaining amount (89.15 - 84.15) = 5 will be applied to the VAS.</p>\r\n\r\n<h3><a name=\"troubleshooting\" id=\"troubleshooting\"></a>Troubleshooting</h3>\r\n\r\n<h4><a name=\"i-am-able-to-override-the-price-in-customer-service-nbsp-even-after-ispriceoverrideable-flag-is-set-as-false-in-item-master\" id=\"i-am-able-to-override-the-price-in-customer-service-nbsp-even-after-ispriceoverrideable-flag-is-set-as-false-in-item-master\"></a>I am able to override the price in Customer Service&nbsp;even after IsPriceOverrideable flag is set as false in item master</h4>\r\n\r\n<p>In Customer Service UI there is no&nbsp;restriction for&nbsp;price override based on Price Overrideable flag. This is as designed.&nbsp;You can configure the baseComponentId (ExtensionId: edit-order-line-override-price-iconedit-order-line-override-price-icon)&nbsp;available in the order line section of the edit order screen&nbsp;to hide the pencil icon based on the condition(OrderLine.IsPriceOverrideable).&nbsp;</p>\r\n\r\n<h4><a name=\"store-number-is-not-populated-and-not-editable-for-call-center-initiated-orders\" id=\"store-number-is-not-populated-and-not-editable-for-call-center-initiated-orders\"></a>Store number is not populated and not editable for call center initiated orders</h4>\r\n\r\n<p>For orders in Call Center, the Store No field displays the SellingLocationId on the order. However, for call center initiated orders the store number is not populated and cannot be edited.&nbsp;</p>\r\n\r\n<p>In Customer Service and Customer Engagement, the Store No field is read only and is not editable.&nbsp;It will display order.SellingLocationId if it has a value. This is as designed.</p>\r\n\r\n<h4><a name=\"why-does-the-order-status-display-the-new-address-for-the-old-release-when-quot-modification-for-unreleased-quantities-quot-is-enabled\" id=\"why-does-the-order-status-display-the-new-address-for-the-old-release-when-quot-modification-for-unreleased-quantities-quot-is-enabled\"></a>Why does the order status display the new address for the old release when &quot;Modification for Unreleased Quantities&quot; is enabled</h4>\r\n\r\n<p>Scenario: When &quot;Modification for Unreleased Quantities&quot; is enabled and an order is partially released at the line level, updating the address causes the new address to appear in the order status for both the new and old releases, instead of only showing the new address for the new release.</p>\r\n\r\n<p>This is as designed. When the address is updated on a partially released order line, the completed shipments section will display the most recent address for both the old and new releases of the order.</p>\r\n\r\n<h4><a name=\"appeasement-and-promotions-are-not-recalculated-after-the-order-is-released\" id=\"appeasement-and-promotions-are-not-recalculated-after-the-order-is-released\"></a>Appeasement and promotions are not recalculated after the order is released</h4>\r\n\r\n<p>Scenario: Suppose an order is created with a line containing multiple quantities, an appeasement in percentage form is applied, and the order is confirmed and moved to released status. If two quantities are then shorted, the appeasement is not recalculated.</p>\r\n\r\n<p>After the order is released, appeasement and promotions are not reevaluated. However, the appeasement will be recalculated if the quantity is reduced through the Customer Service UI.</p>\r\n\r\n<h4><a name=\"why-is-save-order-call-triggered-on-suspending-payment-method\" id=\"why-is-save-order-call-triggered-on-suspending-payment-method\"></a>Why is save order call triggered on suspending payment method</h4>\r\n\r\n<p>Save order call is triggered when suspending a payment method to update the order with additional details related to the payment promotion controlled by the &quot;Enable Preview Mode&quot; Config in the order parameters for the payment promotions. For more information refer <a href=\"https://omni.helpdocsonline.com/order-modifications$payment-based-promotions-in-contact-center-nbsp\">here</a>.</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/transactional-texts\" hqid=\"2607998\">Transactional Texts</a></li><li><a href=\"/customer-service-insights-dashboard\" hqid=\"3574352\">Customer Service Insights Dashboard</a></li><li><a href=\"/cross-org-visibility\" hqid=\"2674494\">Cross-Organization Visibility</a></li><li><a href=\"/call-centerconfiguration\" hqid=\"1805028\">Call Center Configuration</a></li><li><a href=\"/itemsearch\" hqid=\"2781976\">Item Search</a></li><li><a href=\"/order-status-inquiry\" hqid=\"2781980\">Order Status Inquiry</a></li><li><a href=\"/kits-in-call-center\" hqid=\"3631688\">Kits in Call Center</a></li><li><a href=\"/overview\" hqid=\"2778910\">Overview and Navigation</a></li><li><a href=\"/transactional-emails\" hqid=\"2444800\">Transactional Emails</a></li><li><a href=\"/cs_troubleshooting\" hqid=\"2803411\">Troubleshooting </a></li><li><a href=\"/returns-and-exchanges-in-contact-center\" hqid=\"2781984\">Returns and Exchanges</a></li><li><a href=\"/customer-service-ui-resources\" hqid=\"2604082\">UI Resources</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 72445,
  "scraped_at": "2025-08-09T21:54:45.727400",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Customer Service ››Order Modifications Order Modifications Edit OrderOrder Edits by Status Editing Quote OrdersChange/ Edit Email ID on Digital Goods Before Order ConfirmationConverting a Quote Order to a Customer Service OrderCanceling an OrderConfigurationLate Order CancellationPlacing an Order on HoldChannel-Specific Reason CodesAppeasementsAppeasement Threshold LimitsStacked Appeasements in Contact CenterAppeasement for Lost PackagePromotions, CouponsPayment Based Promotions in Contact center Price Overrides Send customer copy of invoice PDFPreview Estimated Refunds and Toggle Refund Payment MethodExternal Order ModificationsSelling Channel for Order UpdatesConfigurationsConfiguration for Change/ Edit Email ID on Digital Goods Before Order ConfirmationConfiguration for Payment Based Promotions Implementation FlavorsHow to disable order edits for a certain order type/order statusHow to display the count of order notes on the Customer Transaction UIHow to stop authorized calls from call centerTrigger point for fraud check validation on CSR confirm order during order editHow to restrict CSR associates from applying header level appeasements until the entire order is shippedPerform validation and show error messageHow to avoid error pop-up displayed when customer info is not found in Active Omni while placing an orderHow to automatically trigger payment processing when CSR's do not click \"Confirm Changes\"How to resolve the issue of the discount exceeding the line total when appeasement is applied as an amount off for a line with gift wrapTroubleshootingI am able to override the price in Customer Service even after IsPriceOverrideable flag is set as false in item masterStore number is not populated and not editable for call center initiated ordersWhy does the order status display the new address for the old release when \"Modification for Unreleased Quantities\" is enabledAppeasement and promotions are not recalculated after the order is releasedWhy is save order call triggered on suspending payment methodRelated Articles Edit Order Sometimes a customer will call into the call center to modify an order that has already been placed. In this case, the CSR will first identify which order the customer is calling about using one of the methods mentioned above or in the Search Orders guide. Once the order is located, the CSR may modify the existing order as indicated in the Modify Orders guide, given that the order is in an editable status. Examples of order modifications that can be performed by the CSR include, order or line cancelations, quantity adjustments, price overrides, VAS modifications, promotion, and discount modifications, appeasement application, payment method adjustments, and shipping related changes. Once the CSR has completed the changes requested by the customer, the CSR proceeds by clicking the Confirm Changes button. Once this is complete, the CSR may return to the home screen by clicking the Home icon. If the CSR does not select the Confirm Changes button and tries to exit the order, an error will populate asking the CSR to confirm if they would like to leave the order without confirming changes. This pop-up does not block the CSR and the CSR can click \"Leave Order\" to exit the order. Note: CSRs must click the 'Confirm Changes' button for payment to be processed. For instance, if quantity is increased and more payment is captured, then an open authorization is created. The authorization is not processed unless the CSR clicks 'Confirm Changes'. If an appeasement is added and an auth reversal (or refund) transaction is created, then the auth reversal (or refund) is not processed until the CSR clicks 'Confirm Changes'. This should be enforced via SOP or can be selectively automated via extension. Modification of the order is based on permissions and mod type. Refer UI resource page for more details. Order Edits by Status Below are the order edits a contact center agent can make depending on the order status. Refer here for more information on order status. Call Center Agent Action Status Permitted Add Instructional Notes Permitted until an order is partially released Add Customer Communication Notes Permitted throughout the lifecycle, including fulfilled orders Add/Remove Coupons Permitted through lifecycle, including fulfilled orders. Add/Remove Appeasements Permitted through lifecycle, including fulfilled orders. Add order line Permitted until order is fulfilled Update item quantity Permitted until the order line is released Update Ship To Address Permitted until the order line is packed Remove Payment/Add new payment Permitted throughout the lifecycle Note: Adding a line post fulfillment may create adjustments if there are order level charges, discounts, and so on. Note: Remorse period defines the time between order confirmation and order release. Many order edits can only be done within that remorse period window while the order is in Open status and “DoNotReleaseBefore” is time-stamped on the order. For more information on remorse periods click here. Remorse periods are by order header and can not vary across order lines as order lines do not have a do not release before field. Editing Quote Orders Quote Orders may be edited from Customer Service. This allows users to assist customers who want to modify a quote order prior to purchase. The user may perform any edit to a quote order that may be made to a customer service order, except they cannot edit any payment related information, since a quote order does not include a payment. Editing quote orders are managed by the same grants and permissions that apply to regular orders. Refer to Quote Orders for more details. Note: If the CSR wants to add units of an item already on the quote order, they should add a new order line to avoid price updates. This will ensure that the new item is priced at the current market price while honoring the quote order pricing for the original units. The CSR can use the Override Price action if they want to modify prices further for either new or original order lines. Change/ Edit Email ID on Digital Goods Before Order Confirmation Contact center associates can change/edit the email ID on a digital good order line before the order is confirmed. Email Id on a digital good order line can be changed or edited for one digital order line at a time. There are two ways to change/edit the email ID on a digital good line. During order creation flow, while selecting the item from the item search page: when a digital goods line is selected on the item search page: If the user searches for the customer and then searches for the item from the item search page, the customer context is available and the customer’s email Id will be pre-populated under the ‘Email’ in the delivery options section. Users can either let the email Id be as is or edit/change the email Id before checkout. In this case, the email Id is stored on the order line under the OrderLineAdditional.Email attribute. If the customer directly accesses the item search page without the context of the customer while selecting a digital good, then the email text box under “Email” in the delivery options section will be blank, and the contact center associate can either choose to populate the email Id they wish the digital good goes to or leave it black and proceed further, if an email Id is populated then it will be stored under the OrderLineAdditional.Email attribute. If the email ID is left blank then the email on the digital good line item will automatically be stored on the order header under the order.CustomerEmail attribute. On the edit order page: Once a digital good line is selected (before the order is confirmed), the email option radio button under the delivery options menu will be selected and the email Id for the line will be pre-populated. Users can change/edit the email Id and save it on the order line. The email Id will be stored on the order line under the OrderLineAdditional.Email attribute. All digital goods that belong to the same email ID will be grouped together on the edit order page in contact center. Click here for Configuration to Change/ Edit Email ID On Digital Goods Before Order Confirmation. Converting a Quote Order to a Customer Service Order Please note that the term Customer Service Order is used in reference to any order type that can accept payment in returns for goods. Some organizations may use the term customer service order, retail order, sales order, or just order. Once a customer decides to purchase the order lines in the quote order, the user can convert the quote order to a regular customer service order. This will enable the user to provide payment and process the order. The order type will change to Call Center Order, unless the organization has defined another order type value to utilize. Until any payment is provided, the user may convert the order back to a quote order; this is helpful if the customer changes their mind. Once a partial or full payment is provided, the order cannot be converted back to a quote order. To convert a quote order, the CSR must have the appropriate grant. The Convert Order to Quote button will only be displayed when the order config is synced to the following mod type: ModTypeID =  Order::UpdateOrderToQuote. To learn more about converting quote orders to customer service orders, see Converting Quote Orders to Customer Service Orders Rules. The Save As Quote button will only be displayed when the order config is synced to the following mod type: ModTypeID = Order::Update QuoteToOrder. To learn more about converting orders back to quote orders, see Updating Orders back to Quote Orders Rules. Note: when the system converts an order back to a quote order, it will reference the value defined in the Default Quote Order Type column to determine the quote order type. For more information regarding the column, see the Call Center Configuration help. Canceling an Order Another common request from customers is the cancelation of an order that they may have placed by mistake. To perform the cancelation, CSR first locates the order by using one of the search options mentioned above. Once on the Customer Transactions screen, which is a list of all the transactions for the customer, the CSR can click the Cancel link to cancel an order without opening the Edit Order or Order Status screens. If the CSR needs to cancel a specific line item, this must be done by first clicking Edit and then canceling the appropriate order line.  Once the cancelation is complete, the CSR may return to the home screen by clicking the Home icon. Cancel reasons can be configured in addition to seed data provided under order reasons with reason type Id cancel. For more information on cancel reason, refer to this section here. Cancel reason can be shared across Digital Self-Service and Call Center by using flags eligible for self-service and eligible for contact center. Canceled orders will display the values of totals, subtotals, prices, charges, discounts, and taxes in parentheses after the order is canceled. This ensures that agents can address any customer inquiries regarding the order details or potentially place a new order honoring the same charges and discounts. This information will be available at both the child and header levels, meaning that if an entire order is canceled, the original order amounts will be shown in the totals section as well as for each individual line item. This functionality can be accessed on the following pages: Order Status Edit Order Customer Transactions Customer Dashboard Note: Currently, this feature is supported only for regular customer orders and is not available for orders involving returns or exchanges. Configuration The feature to display values for canceled orders is currently protected by the behavior change configuration under the menu entry 'OM - Display amounts for canceled orders or lines' Late Order Cancellation Click here to know more about how to cancel pickup in-store and ship to home order lines that have already been released to stores or DC for fulfillment. Placing an Order on Hold For more information on order and order line holds, please reference the UI guide here. From the customer service application, only orders can be put on hold at the order header level, removal or placing an order line hold is not permitted within the call center. Channel-Specific Reason Codes Order reasons displayed in the contact center and order list pages can be unique or shared with those used in digital self-service. On the Order reasons UI, reasons for having the 'Eligible for Contact center' enabled will be displayed in the drop-downs. If the eligibility for contact center is true or null, then the reason is displayed on the contact center and other order-related screens. If this flag is set to false, then the reason will not be shown in the reason drop-downs. Similarly, enable 'Eligible for Self Service' for each reason which should be displayed in Digital Self-Service. Appeasements Appeasements are a policy of giving concessions or discounts on an order to customers. Appeasements can be applied at both the order level and the item level. Once the appeasement is applied or removed, the total amount of the order is re-calculated. There are 3 types of appeasements available for call center agents to give to customers: Amt Off— A fixed value appeasement is keyed in by the CSR. Perc Off— Appeasements can be given as a percentage of the total value of the order Flat— Supervisors may configure pre-set amounts for CSRs to give as appeasements (that is. $5, $10, and so on). CSRs can select appeasement from a drop-down list. Conditions The value of appeasement cannot be more than the order or order line total. If the entered value of appeasement is more than the total amount of the order or order line, the maximum value is applied. The value of the appeasement may not exceed the configured threshold amount in the call center configuration. Supervisors may configure limits by CSR role, up to which a CSR may give appeasements. It is mandatory to have a reason associated with the appeasement. Unique reason codes may be applied at the line and order level. They can be configured in the Order Reasons UI. To apply unique reason codes at line or order level, navigate to the Order Reasons UI and select add. Input a Reason ID and then select a Reason Type ID. Reasons with Return Type ID as HeaderAppeasement will apply only to the order level. Reasons with Return Type ID as LineAppeasement will apply only to the line level. Reasons with Return Type ID as Appeasement will apply to both Order and Line level appeasements. Note: The appeasement at either line or header level is rounded off to two decimal places (to the nearest integer value). Note: Users have the ability to apply appeasements at both the header and line levels of an order, and these capabilities are covered by a single permission grant. Additionally, users can opt to use separate grants—one for the order header level and another for the line level. This approach is particularly useful for retailers who prefer to restrict their agents to applying either line-level appeasements or header-level appeasements exclusively. Appeasement Threshold Limits Call center supervisors and administrators can configure limits for how much their call center agents may give as appeasements to customers. The limits can be configured either as a value limit or percentage limit and each configured limit is associated with a particular user role. If multiple limits are configured for a single role or if a user is associated with multiple roles then the minimum of the configured roles is used. For example, if a tier 1 CSR has a threshold limit configured for a $5 value and also a limit for 10%, if the user attempts to apply appeasement to a $100 order, the user is only allowed to apply up to a maximum of $5. If no threshold limit is configured for any of the user roles associated with a user, then the user may appease up to the total order value. After the appeasement threshold limits are configured, when a user attempts to give appeasement through the call center application, the appeasement threshold limits are evaluated for the user's roles and the maximum allowable appeasement is displayed. The user is not allowed to exceed the configured threshold limit or order value. The evaluation of appeasement limits includes any appeasements which were previously given on the order either by the same user or a different user. This prevents a user from exceeding their allowable appeasement amount by giving multiple appeasements. For example, if a Tier 1 CSR is allowed to give a maximum of $5 as an appeasement if an order has already received a $5 appeasement, that user will not be allowed to give any additional appeasement. Note that appeasement thresholds only apply to appeasements. They do not apply to overrides (i.e. shipping, item price, VAS, and so on) For UI help regarding appeasements, refer to this page. When the order or order line is canceled, then all the charges and discounts are deleted. Note: The appeasement threshold limit configuration in the call center config is not defined for every order at the order level. It is defined for the user role and the appeasement type. i.e. this threshold will apply every time this user (of a specific user role) applies the type of appeasement configured. This is at the entity level and not at the order level. So if an order has 2 order lines then the user can apply the appeasement at 3 entity levels (one at the order header and one at each of the 2 order lines) so the threshold will apply every time the user applies the type of appeasement configured in the call center config. Stacked Appeasements in Contact Center In general, when appeasements are applied one after another on an order, the appeasement amount is always taken from the original order total. Stacked appeasement is a feature to enable the appeasement amount to be applied in a specific sequence on the resultant amount due to the previous % appeasement. Example of non-stacked appeasements: The order is total is $100.00 Add Appeasement A for 10%. The new order total is  $100.00 - (100*.1) = $90 Add appeasement B for 10%. The new order total is $90 - (100*.1)= $80 Example of stacked appeasements: The order total is $100.00 Add Appeasement A for 10%. The new order total is $100.00 - (100*.1) = $90 Add appeasement B for 10%. The new order total is $90 - (90*.1)= $81 Customer Service will apply a charge sequence on all appeasements applied in the Call Center application. The charge sequence is applied in ascending order by the timestamp it is applied. The value populated in the charge sequence field is the number of seconds elapsed since January 1, 1970, 00:00:00 UTC. Configuration for Stacked Appeasements The stacked appeasement behavior can be used once the Enable Stacked Appeasements flag is enabled in the Call Center configuration. When this configuration is disabled, all applied appeasements will have the Charge Sequence of zero and the appeasement will be calculated based on the order line total or order header total. Appeasements are stackable within the order line and within the order header; but are not stackable across the two. All line-level appeasements/discounts are applied before the header level. For more details on discount application logic, click here. Appeasement for Lost Package If a customer calls CSR to report or complain about packages that were never delivered to them after it was shipped because it was lost by the carrier or for any other reason - CSR can decide to provide appeasement for the lost package so that the customer is refunded for the lost package. The CSR can apply appeasement for a specific package that is reported as lost from the Completed Shipments panel displayed on the Transaction List panel of the customer dashboard or order status screen by clicking on Appease button that is displayed and enabled for each package shipped for th order below - Package Appeasement Options. The CSR can also decide if charges like shipping and handling and VAS charges can also be included in the appeasement or not before applying the appeasement. To enable the CSR to apply Package Appeasement, the grant - customerservice::order::appeasement::package - has to be provided for the CSR. The package will be eligible for applying appeasement if all the below-mentioned conditions are satisfied. Order is partially fulfilled or fulfilled Delivery method is Ship To Address and NOT any other delivery method. Package is shipped for Delivery Leg and NOT for Merge Leg and the Package is not yet delivered The order is configured for generating shipment invoices at Fulfilled status (7000) or any other valid status so that the shipment invoice is generated based on package Id and NOT on any other status where shipment invoice does not have package Id information. The order has a shipment invoice generated for the specific package The package has not already been appeased A return order has not already been created for the items shipped as part of the package The appeasement amount for lost package appeasement is automatically calculated by the system and the CSR cannot specify any percentage or amount to appease. The maximum amount of appeasement that can be applied is derived from the shipment invoice generated for the specific package that includes item price and tax component. The charges included in the shipment invoice can be configured to be NOT eligible for appeasement in chargeTypeConfig by configuring the attribute isNotRefundableOnPackageAppeasement = true for the specific charge type. The charges with charge type for which the attribute isNotRefundableOnPackageAppeasement = false are included in the lost package appeasement automatically. The charges with charge type for which the attribute isNotRefundableOnPackageAppeasement = true are excluded from the lost package appeasement automatically. By default, the charges with charge type for which the attribute isNotRefundableOnPackageAppeasement = false are included in the package appeasement - indicated by the checkbox Include Charges checkbox next to Appease Button already selected (checked) by default by the system. If CSR can deselect (uncheck) it manually to exclude it from being included in lost package appeasement. Note: Use 'api/order/orderConfig/orderConfigId/{OrderConfigId}' API to configure isNotRefundableOnPackageAppeasement attribute under 'ChargeTypeConfig' section. Before applying the lost package appeasement, by clicking on the Appease button, CSR can select the reason for the appeasement from the reason dropdown. The system displays all order reasons defined in the system for reason type - PackageAppeasement and Eligible For Contact Center configured, sorted in alphabetical order with the first reason already selected by default. If CSR wants to select another reason from the available reasons - they can select it from the dropdown. If there are no order reasons defined in the system for reason type - PackageAppeasement - the reason dropdown will be hidden. When CSR clicks the Appease button - the Confirm Package Appeasement popup is displayed with the message - Package appeasements cannot be removed. Are you sure you want to appease this package? - displayed on it along with two buttons for the CSR to either Confirm the system that lost package appeasement can be applied or to Cancel the action. WARNING: Once a lost package appeasement is applied for a specific package, it CANNOT BE REMOVED from the order and the action is irreversible. Once CSR confirms the system to apply the lost package appeasement, the system will apply the appeasement accordingly to the specific package and creates appropriate charge records for the appeasement for the respective order lines, items and quantities which were included in the specific package and the final order totals and other details like total discounts after applying the lost package appeasement will be displayed on the order status screen or on the order status panel if the appeasement was applied from the transaction list panel on customer dashboard screen. Note: Once the Lost Package Appeasement is successfully applied to the order , the details of the appeasement applied will be displayed on the Appeasement Popup - Applied Appeasements section with  Type as Package_<PackageId> and the reason selected at the time of applying the lost package appeasement. Entered Value and APplied values will NOT be populated since the CSR did not enter any appeasement value. WARNING: Lost package appeasement with  ype as Package_<PackageId> cannot be removed by clicking on the cancel/remove button (X) from the Appeasement Popup in the Applied Appeasement section. The cancel/remove button (X) from the Appeasement Popup in the Applied Appeasement sec will be disabled for appeasement type -  Package_<PackageId> and a tool tip - \"Package appeasement cannot be removed\" will be displayed. WARNING: Once lost package appeasement is applied to a specific package - the system will reduce the returnable quantities for the respective order line, item and quantity that was shipped as part of the specific package that was appeased, and the customer will not be able to create a return order for the same-from any channel including contact center or self-service Promotions, Coupons Within the contact center, the contact center associate can add coupons to an order or order line and can also have promotions automatically applied. Refer to these UI guides for promotions and coupons.  For more information on the base promotion evaluation, refer to this guide here. These promotions are automatically applied to the order if all criteria configured meet the promotion requirements. Promotions are applied when the order created fits the configured promotion and will not notify the agent if they qualify for promotions prior to adding the promotion in the cart. Payment Based Promotions in Contact center The Payment Promotion feature provides the ability to configure and execute promotion deals based on the payment methods used to make the payment. The Manhattan Active® Omni promotions engine supports a payment-based promotion, such as 10% if you pay with a Private Label Credit Card. When a user selects a payment type configured for promotion, the discount is automatically applied and visible to the agent. Depending on the selected payment method, the discounted amount is displayed to the agent even before the payment transaction is processed to: Ensure that the payment is processed accurately for the correct amount based on the selected payment method. Allow the agent to confirm the revised order total with the customer before finalizing the transaction. On the contact center UI: To preview the payment based promotion, retailers have to configure \"Enable Preview Mode\" configuration. To apply payment promotions during the UI order capture/modification flows, the agent should choose to pay through the payment type which is associated to the promo deal. The agent can capture/edit an order on the UI and will be able to see the payment based promotion applied based on the payment method they intend to use. In the payment tab, clicking on the selected payment method expansion panel will trigger the promotion evaluation and the user will see the balance to pay even before actually making a payment. Based on the payment method selected on the UI, the user will also be able to see the payment-based promotion applied at the order level. When a retailer configures a payment deal that results in a 0.00 balance, as seen in scenarios like \"Pay with PLCC and receive Women's items for free\" for a purchase exclusively consisting of Women's items, or when a user gets a $50 discount on every PLCC purchase, but the item they are purchasing costs $50, or even in the case of an exchange scenario where the balance is positive and the user chooses a payment method that leads to a refund, it's essential to understand that in such instances, the user will not immediately observe the promotion. Instead, they will be required to input their card or payment details when placing the order, and the discount will be applied when they proceed with the payment and confirm the order. Note: Payment based promotion is currently not supported at the item level. It is only available at the order level. Click here for more details on how payment based promotions work on the tender types used to make the payment. Click here for configuration for payment based promotion. Price Overrides For information regarding price overrides, refer to the UI guide here. Send customer copy of invoice PDF Contact center agents can send shipment invoices to customers using the Send Invoices option available in the Order Status UI and the Order Edit UI. If a customer requests for the shipment invoices, the agent can use this button to send an email with the invoice attached. Clicking the Send Invoices button opens a popup with a pre-filled email field and a Send button. The pre-filled email ID is the one already available on the order. If the order does not have an email, the customer’s email ID is displayed if available. The email field is editable, allowing agents to enter a different email address if the customer wants the invoice sent to a different address. Updating the email in this popup only affects the current interaction and does not update the email address on the order. The Send Invoices button is available only for customer and exchange orders and is not displayed for return orders. The button is protected by permission. If the agent has the necessary resource, the button is visible. If not available, the button remains hidden. Refer UI Resource for more details on grants. Once the agent reviews or updates the email address, they can click Send to send the invoice. The system then emails the invoice as an attachment to the specified email address. Preview Estimated Refunds and Toggle Refund Payment Method By default, the system will apply a refund as soon as you provide it. A refund is considered any change that lessens the price of the order, such as appeasements, coupons, promotions, waiving fees and reducing order line quantities. However, you can summarize the refund and display the estimated amount in the Refund Section on the Payment Tab, which allows the CSR to communicate the dollar value to the customer. To summarize the discount to be refunded, set the configuration value; this is applied at the organization level. In addition, you can toggle the payment method for the refund between an electronic gift card and the original credit card(s). This provides greater flexibility, in the event the original card is expired or the organization prefers to tender refunds as gift cards. To toggle the refund payment method, provide the grant and assign to the user's role. Note: if the organization applies discounts to the authorized amount before settled amounts, the estimated refund does not include the authorized amount. For example, if the total discount refund = $100 and the authorized amount = $20, the Estimated Refund = $80. External Order Modifications If an order is modified by an external system, for example, a payment is added by an external system, the call center does not currently support automatically refreshing to reflect those changes. Please contact your services team for testing these flows and possible solutions to capture external updates. Selling Channel for Order Updates The selling channel specifies the channel where the order was captured, such as a store, call center, or web. So editing an order that was created on the web or store in the contact center application will not change the original selling channel. Configurations Configuration for Change/ Edit Email ID on Digital Goods Before Order Confirmation To enable this feature, perform the following steps: Navigate to Menu > Proactive > Proactive Menu > Functional Config > Review Behavior Changes For the record with Change Name as 'Modify Email ID for Digital Goods,' set Enabled to 'true'. If not enabled by the Must Enable By Date listed in this UI, the theme will automatically be enabled on this date. Users will need an appropriate grant to be able to access the “USE THIS” button on the edit order page to edit/change an email Id for digital good. If the feature is not enabled on the review behavior change configuration, the email ID delivery option will not be displayed on the edit order page. Configuration for Payment Based Promotions To enable payment promotion, perform the following steps: Navigate to Menu > Application Configuration > Manage Selling Configuration > Selling > Promotion Global Parameters. Select the promotion configuration and click View. On the Edit Promotion Configuration, select the Enable Payment Promotions check box. The cart component should also be initialized to support payment-based promotions. Refer to Initializing the Cart for more details.. Implementation Flavors How to disable order edits for a certain order type/order status There are two options to disable order edits for a certain order type/order status. Option 1: UI disables/enables the edit actions on the call center based on mod types that the Permittedmodtype API returns. Intercept the following API that UI makes /customerengagementfacade/api/customerengagementfacade/ds/order/orderId/{{orderId}}/permittedModTypes Get the command router details from Proactive UI: Menu > Proactive > Developer Artifacts > SELECT >Specify APIs > Customerengagementfacade > Search by key: listModTypesDS Ensure all mod types are removed based on order type and order status or any other custom details. Option 2: To allow UI to display an error when a user tries to perform an action that is not allowed to perform, follow the steps: Intercept the following save order call /customerengagementfacade/api/customerengagementfacade/ds/order/save /customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder Get the command router details from Proactive UI: Menu > Proactive > Developer Artifacts > SELECT >Specify APIs > Customerengagementfacade > Search by key: saveOrderDS Construct an error message (refer sample Order validation error). The UI will display the standard error pop-up. You can now customize this pop-up by hiding the base content and using an iframe to show a custom message like ‘Order modifications are not allowed’. How to display the count of order notes on the Customer Transaction UI The order notes can be displayed at the header and line level. To configure the count of order notes at the header level, use the following UI extension points: ScreenId: ce::customer-transaction-orderline ExtensionId: customer-transaction-orderline-label-2 To configure the count of order notes at the line level, use the following UI extension points: ScreenId: ds::call-center-transaction-list ExtensionId: line-item-info-label-4 How to stop authorized calls from call center It is necessary to stop auth call when the fraud response is pending or declined from service provided. The requirement is to have the payment saved, order confirmed, and a pop-up message displayed. This can be implemented through the following options. Option 1: Hidden iFrame Approach In the Summary section of the Edit order screen, there is an iFrame ScreenId: ds::edit-order ExtensionId: edit-order-summary-iframe Perform fraud check in the custom code based on onPlaceOrder and onConfirmOrder events. If the fraud check passes, you can call ackplaceorder and ackconfirmorder actions with pro as parameter that will continue with the base flow. If the fraud check fails, in the custom code you can make a call directly to hit the order component to confirm the order, and then you can open the custom pop-up within the iFrame (use util functions). You can call maextensionsutil.popups.openspop API to open a pop-up to display a message that you want to show with a button, on clicking this button again, the util function will help you to navigate to the Transaction List page. Option 2: Command Router Approach Intercept the following API call {{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder In the custom code, load the order by passing a template to get isconfirmed flag to true. In the intercepted call, perform the fraud check. If the order is already confirmed, it will go with custom flow, otherwise forward it to base flow. If a fraud check fails, show the standard pop-up. Trigger point for fraud check validation on CSR confirm order during order edit Option 1 : Hidden iframe Approach In the Summary section of the Edit order screen there is an iframe ScreenId: ds::edit-order ExtensionId: edit-order-summary-iframe When you click the confirm changes button, in the custom code, you can listen to onConfirmOrder event. This event should be fired, and you can perform the required fraud check validation inside the custom code. If it seems like a fraud, then you can call API to open a custom pop-up to inform the same to the CSR, and this will stop the flow. In custom code, if everything is successful, you can call this action acknowledgeconfirmorder with boolean as true(\"ConfirmOrderBool\":true). It will continue with the regular base flow. Option 2: Command Router Approach By Intercepting the payment request API call (https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/payment/paymentRequest). How to restrict CSR associates from applying header level appeasements until the entire order is shipped Intercept the following API that UI makes https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/orderId/{{orderId}}/permittedModTypes Get the command router details from Proactive UI: Menu > Proactive > Developer Artifacts > SELECT > Specify APIs > Customerengagementfacade > Search by key: listModTypesDS Perform validation and show error message Example : To show a customized error message with a custom popup when CSR tries to apply an appeasement Follow the steps below: Intercept the Save order call. Refer to Intercepting UI API calls to re-route to custom API for more details. Get the command router details from Proactive UI: Menu > Proactive > Developer Artifacts > SELECT >Specify APIs > Customerengagementfacade > Search by key:  saveOrder {{hostname}}/customerengagementfacade/api/customerengagementfacade/ds/order/saveOrder API call. Construct an error message, refer to Sample Order Validation Error for more details. UI will display the standard error pop-up. You can customize by hiding base content and implementing the iframe (ScreenId:ce::message-popup, ExtensionId:custom-message-popup). Refer to How to use IFrame extension for more details. If you want the iframe to have 2 buttons , example proceed to apply appeasement  and cancel buttons you need to pass all info in custom code and call save order on click of PROCEED refresh by calling MAExtension.PopupsScreen.actions.refresh() and on click of CANCEL call MAExtension.PopupsScreen.actions.close(). Refer to MA Extension Util Functions for more details. How to avoid error pop-up displayed when customer info is not found in Active Omni while placing an order Follow the steps below: Intercept the following API call to handle the error pop-up when customerid is not found (https://{{hostname}}/customerengagementfacade/api/customerengagementfacade/customer/customerId/{{customerId}}?templateName=callCenterCustomerInfoTemplate&orderId={{orderId}}) Enable the following call center configurations: Register Customer Update Customer Save all payment types to the customer during checkout How to automatically trigger payment processing when CSR's do not click \"Confirm Changes\" In some cases, payment processing may be automatically triggered without the CSR selecting \"Confirm Changes\", for example, if the order is completely fulfilled and paid, and the order total is reduced due to an appeasement being applied, the refund will process automatically unless the \"hold transaction till confirmation\" parameter is enabled in call center configuration. In other cases, however, for example, if the order is not already paid, and an order total reduction due to appeasement, cancelation, price override, etc. will only result in an authorization reversal, confirming the changes from the UI is required to trigger the processing of the payment. In order to perform this process automatically - a mod type level service can be added based on the user action that may require immediate payment processing. The following setup can be done to selectively process the payment: Create a custom extension point or leverage one of the existing \"CustomExtensionService\" that is not already in use Add your extension point to the \"CustomServiceConfig\" of the desired modification type. For example: 'Apply Appeasement'. Create an extension handler for that extension point which takes the order object as input Within the extension handler, convert the order object into a payment request. For example: { \"PaymentRequestId\": \"{unique value}\", \"OrderId\": \"{OrderId}\", \"ExecutionMode\": \"CalculateAndExecute\" } After conversion, post the payment request to the payment request queue \"queue.SavePaymentRequestEvent\" How to resolve the issue of the discount exceeding the line total when appeasement is applied as an amount off for a line with gift wrap Scenario: An order is placed with an order line priced at 187, and two coupons are applied to the order line as follows: Coupon 1: discount amount = -46.75 Coupon 2: discount amount = -56.10 At the time of order creation, the total discount on the unit price was 102.85, resulting in a price after discounts as 84.15. At this point, the order line was 84.15 for TaxTypeId SALES and 5 for VAS, making the total of the order line 89.15. If an appeasement of 89.15 is applied at the line level for a refund due to a lost order, the base performs the following proration as 86.83 for merchandise and -2.32 for VAS. This causes the total discount applied to the items to exceed the unit price (102.85 + 86.83 = 189.68, which is greater than 187). As a result, a negative tax amount appears on the SALES TaxTypeId orderLineTaxDetail, where a zero amount was expected. Solution: The above resulted because the 89.15 appeasement was applied first considering the following charge sequence -89.15 → Appeasement → ChargeSeq = 0 -46.75-> Coupon → chargeSeq = 2 -56.10 → Coupon → ChargeSeq = 3 To resolve the issue of the discount exceeding the line total, the appeasement charge sequence should always be higher than any existing discounts on the line. To implement this, select the Enable Stacked Appeasement check box on the Contact Center Configuration UI. This ensures that the UI will always apply a higher sequence when an appeasement is applied. In the above-mentioned use case, if the appeasement’s charge sequence is set higher, the proration logic for the coupons already applied to the line would be: ProratedValue = (itemSubTotal * AmountToBeProrated) / LineTotal = (84.15 * -89.15) / 89.15 = -84.15, which will be allocated to the subtotal. The remaining amount (89.15 - 84.15) = 5 will be applied to the VAS. Troubleshooting I am able to override the price in Customer Service even after IsPriceOverrideable flag is set as false in item master In Customer Service UI there is no restriction for price override based on Price Overrideable flag. This is as designed. You can configure the baseComponentId (ExtensionId: edit-order-line-override-price-iconedit-order-line-override-price-icon) available in the order line section of the edit order screen to hide the pencil icon based on the condition(OrderLine.IsPriceOverrideable). Store number is not populated and not editable for call center initiated orders For orders in Call Center, the Store No field displays the SellingLocationId on the order. However, for call center initiated orders the store number is not populated and cannot be edited. In Customer Service and Customer Engagement, the Store No field is read only and is not editable. It will display order.SellingLocationId if it has a value. This is as designed. Why does the order status display the new address for the old release when \"Modification for Unreleased Quantities\" is enabled Scenario: When \"Modification for Unreleased Quantities\" is enabled and an order is partially released at the line level, updating the address causes the new address to appear in the order status for both the new and old releases, instead of only showing the new address for the new release. This is as designed. When the address is updated on a partially released order line, the completed shipments section will display the most recent address for both the old and new releases of the order. Appeasement and promotions are not recalculated after the order is released Scenario: Suppose an order is created with a line containing multiple quantities, an appeasement in percentage form is applied, and the order is confirmed and moved to released status. If two quantities are then shorted, the appeasement is not recalculated. After the order is released, appeasement and promotions are not reevaluated. However, the appeasement will be recalculated if the quantity is reduced through the Customer Service UI. Why is save order call triggered on suspending payment method Save order call is triggered when suspending a payment method to update the order with additional details related to the payment promotion controlled by the \"Enable Preview Mode\" Config in the order parameters for the payment promotions. For more information refer here. Related Articles Transactional TextsCustomer Service Insights DashboardCross-Organization VisibilityCall Center ConfigurationItem SearchOrder Status InquiryKits in Call CenterOverview and NavigationTransactional EmailsTroubleshooting Returns and ExchangesUI Resources"
}