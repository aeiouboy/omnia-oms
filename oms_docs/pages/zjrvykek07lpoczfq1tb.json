{
  "success": true,
  "permalink": "zjrvykek07lpoczfq1tb",
  "title": "Config Store",
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"2161445\" href=\"/administrators\" class=\"breadcrumb-links\">Administrator Tools</a></li><li> <span>››</span>Config Store</li></ul>  \t\r\n\t\t<h2>Introduction to Config Store</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/zjrvykek07lpoczfq1tb$user-interface\">User Interface</a></li><li><a href=\"/zjrvykek07lpoczfq1tb$profile-purposes-in-configstore\">Profile Purposes in ConfigStore</a></li><li><a href=\"/zjrvykek07lpoczfq1tb$config-store-json-formats\">Config Store JSON Formats</a></li><li><a href=\"/zjrvykek07lpoczfq1tb$config-store-standard-json-format\">Config Store Standard JSON Format</a></li><li><a href=\"/zjrvykek07lpoczfq1tb$important-notes\">Important Notes</a></li><li><a href=\"/zjrvykek07lpoczfq1tb$managing-separators-in-configstore\">Managing Separators in ConfigStore</a></li></ul></div>\r\n\r\n<h2 data-renderer-start-pos=\"323\" id=\"Overview\">Overview</h2>\r\n\r\n<p data-renderer-start-pos=\"333\">Manhattan Active&reg; component Config Store provides a mechanism for managing custom configurations, enabling the storage and retrieval of Extension or Custom Configuration. Config Store provides user Interface&nbsp;and also exposes the REST endpoints to view and maintain the configuration data for the extensions developed by Manhattan or by the customer.&nbsp;&nbsp;Config Store supports the following&nbsp;</p>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"722\"><strong data-renderer-mark=\"true\">Data Encryption:</strong>&nbsp;ConfigStore data is encrypted at rest, and when accessed via ConfigStore APIs, the data is returned as plain text in JSON format.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"872\"><strong data-renderer-mark=\"true\">Increased Data Capacity:</strong>&nbsp;ConfigStore allows up to&nbsp;<strong data-renderer-mark=\"true\">256KB</strong>&nbsp;of data per row, providing a significant improvement over CustomConfig.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1003\"><strong data-renderer-mark=\"true\">Search Capabilities:</strong>&nbsp;ConfigStore supports searching capabilities and allows new&nbsp;<strong data-renderer-mark=\"true\">extended attributes</strong>&nbsp;to be added if required.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1131\">Management of config through&nbsp;<strong data-renderer-mark=\"true\">Config Director.</strong></p>\r\n\t</li>\r\n</ul>\r\n\r\n<p data-renderer-start-pos=\"2\">Extensions that are built by the Manhattan services team or by the customers, can be invoked and these endpoints can be exposed to store and retrieve configurations as needed by the custom logic.</p>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>The data size of the&nbsp;ConfigStore&nbsp;can be up to 256KB in a single data row.&nbsp;</div>\r\n\r\n<h3 data-renderer-start-pos=\"1180\" id=\"User-Interface\"><a name=\"user-interface\" id=\"user-interface\"></a>User Interface</h3>\r\n\r\n<p>The user interface to view and manage config store can be found in the menu under Config Store.</p>\r\n\r\n<p data-renderer-start-pos=\"1293\">The ConfigStore screen consists of the following&nbsp;attributes:</p>\r\n\r\n<table data-layout=\"default\" data-number-column=\"false\" data-table-width=\"760\" data-testid=\"renderer-table\">\r\n\t<colgroup>\r\n\t\t<col />\r\n\t\t<col />\r\n\t</colgroup>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"none\" colspan=\"1\" data-cell-background=\"#dddddd\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1358\"><strong data-renderer-mark=\"true\">Attribute&nbsp;</strong></p>\r\n\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"none\" colspan=\"1\" data-cell-background=\"#dddddd\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1372\"><strong data-renderer-mark=\"true\">Description&nbsp;</strong></p>\r\n\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1390\">Config Store ID</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1409\">It is a unique identifier for Config Store.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1460\">Config Store Data</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1481\">Config Store Data with multiple key/values supports JSONs or any other formats of customer data.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1584\">Reference Field 1</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1605\">An additional reference field is for&nbsp;use.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1653\">Reference Field 2</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1674\">An additional reference field is for&nbsp;use.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"1721\">Create, Edit, Delete actions are allowed to manage the config store data and download actions are allowed to view the data.&nbsp;</p>\r\n\r\n<p>The ConfigStore user interface consists of the following&nbsp;attributes:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\"><strong>Attribute&nbsp;</strong></th>\r\n\t\t\t<th scope=\"col\"><strong>Description&nbsp;</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Config Store ID</td>\r\n\t\t\t<td>It is a unique identifier for ConfigStore.&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Reference Field 1</td>\r\n\t\t\t<td>\r\n\t\t\t<p data-renderer-start-pos=\"2297\" id=\"Provisioning-Profile-Structure-with-configStore-data-level.\">The reference field is for future&nbsp;use.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Reference Field 2</td>\r\n\t\t\t<td>\r\n\t\t\t<p data-renderer-start-pos=\"2297\" id=\"Provisioning-Profile-Structure-with-configStore-data-level.\">The reference field is&nbsp;for future use.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Config Store Data</td>\r\n\t\t\t<td>\r\n\t\t\t<p id=\"ConfigStoreUserGuide-BelowaretheRECOMMENDEDConfigStoreStandardJSONFormats.ConfigStoreDatacanjusthavemultiplekey/value'sandeachkey/valuepairisseparatedbyasemicolondelimiterandkey/valuemustbeseparatedbyanequaldelimiterinordertousetheextensionstarterUtilityA\">ConfigStore Data with multiple key/ values supports JSONs and any other formats of customer data.&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"profile-purposes-in-configstore\" id=\"profile-purposes-in-configstore\"></a>Profile Purposes in ConfigStore</h3>\r\n\r\n<p>ConfigStore comes with specific profile purposes designed to manage data at the provisioning profile level:</p>\r\n\r\n<p data-renderer-start-pos=\"2001\"><strong data-renderer-mark=\"true\">cfs::configstore</strong>&nbsp;is the profile purpose and it allows extension or custom configuration storage at the&nbsp;<strong data-renderer-mark=\"true\">Provisioning Profile Level</strong>.</p>\r\n\r\n<p data-renderer-start-pos=\"2001\">&nbsp;</p>\r\n\r\n<h3><a name=\"config-store-json-formats\" id=\"config-store-json-formats\"></a>Config Store JSON Formats</h3>\r\n\r\n<p data-renderer-start-pos=\"2160\">The Config Store component accepts data in&nbsp;<strong data-renderer-mark=\"true\">JSON format</strong>&nbsp;with key-value pairs, similar to CustomConfig but with the flexibility to handle more complex configurations.</p>\r\n\r\n<p data-renderer-start-pos=\"2160\">&nbsp;</p>\r\n\r\n<h3 data-renderer-start-pos=\"2160\"><a name=\"config-store-standard-json-format\" id=\"config-store-standard-json-format\"></a><a id=\"config-store-standard-json-format\" name=\"config-store-standard-json-format\"></a>Config Store Standard JSON Format</h3>\r\n\r\n<p>Below are examples of the&nbsp;<strong data-renderer-mark=\"true\">standard JSON format</strong>&nbsp;for ConfigStore:</p>\r\n\r\n<p data-renderer-start-pos=\"2427\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"2427\"><strong data-renderer-mark=\"true\">One-to-One Key/Value Pair</strong></p>\r\n\r\n<div class=\"computer_code\">{ &quot;ProfileId&quot;: &quot;NorthAmerica&quot;, &quot;ConfigStoreId&quot;: &quot;EX01&quot;,<br />\r\n&quot;ConfigStoreData&quot;: &quot;Key1=Value1;Key2=Value2&quot;, &quot;ReferenceField1&quot;: &quot;Field1&quot;,<br />\r\n&quot;ReferenceField2&quot;: &quot;Field2&quot;, &quot;Extended&quot;:<br />\r\n{ &quot;ExtendedAttribute1&quot;: &quot;Value1&quot; }, &quot;NameSpace&quot;: null }</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"2714\" id=\"Other-JSON-Format-Examples\">&nbsp;<strong data-renderer-mark=\"true\">One-to-Many Key/Multiple Values</strong></p>\r\n\r\n<p class=\"computer_code\">{ &quot;ProfileId&quot;: &quot;NorthAmerica&quot;, &quot;ConfigStoreId&quot;: &quot;EX01&quot;, &quot;ConfigStoreData&quot;: &quot;Key1=Value1;Key2=Value20,Value21,Value23&quot;, &quot;ReferenceField1&quot;: &quot;Field1&quot;, &quot;ReferenceField2&quot;: &quot;Field2&quot;, &quot;Extended&quot;: { &quot;ExtendedAttribute1&quot;: &quot;Value1&quot; }, &quot;NameSpace&quot;: null }</p>\r\n\r\n<p data-renderer-start-pos=\"3054\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"3058\"><strong data-renderer-mark=\"true\">Text-Based ConfigStoreData</strong></p>\r\n\r\n<div class=\"computer_code\">{ &quot;ProfileId&quot;: &quot;NorthAmerica&quot;, &quot;ConfigStoreId&quot;: &quot;EX01&quot;, &quot;ConfigStoreData&quot;: &quot;ManhattanAssociates&quot;, &quot;ReferenceField1&quot;: &quot;Field1&quot;, &quot;ReferenceField2&quot;: &quot;Field2&quot;, &quot;Extended&quot;: { &quot;ExtendedAttribute1&quot;: &quot;Value1&quot; }, &quot;NameSpace&quot;: null }</div>\r\n\r\n<p data-renderer-start-pos=\"3342\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"3346\"><strong data-renderer-mark=\"true\">Null Data</strong></p>\r\n\r\n<div class=\"computer_code\" data-renderer-start-pos=\"3346\">{ &quot;ProfileId&quot;: &quot;NorthAmerica&quot;, &quot;ConfigStoreId&quot;: &quot;EX01&quot;, &quot;ConfigStoreData&quot;: null, &quot;ReferenceField1&quot;: &quot;Field1&quot;, &quot;ReferenceField2&quot;: &quot;Field2&quot;, &quot;Extended&quot;: { &quot;ExtendedAttribute1&quot;: &quot;Value1&quot; }, &quot;NameSpace&quot;: null }</div>\r\n\r\n<p data-renderer-start-pos=\"3596\">&nbsp;</p>\r\n\r\n<p data-renderer-start-pos=\"3600\"><strong data-renderer-mark=\"true\">Nested JSON Data</strong></p>\r\n\r\n<div class=\"computer_code\" data-renderer-start-pos=\"3600\">{ &quot;ProfileId&quot;: null, &quot;ConfigStoreId&quot;: &quot;EX01&quot;, &quot;ConfigStoreData&quot;: &quot;{\\&quot;JSONMessage\\&quot;:{\\&quot;Key1\\&quot;=\\&quot;Value1\\&quot;,\\&quot;Key2\\&quot;=\\&quot;Value2\\&quot;}}&quot;, &quot;ReferenceField1&quot;: &quot;Field1&quot;, &quot;ReferenceField2&quot;: &quot;Field2&quot;, &quot;Extended&quot;: { &quot;ExtendedAttribute1&quot;: &quot;Value1&quot; }, &quot;NameSpace&quot;: null }</div>\r\n\r\n<h3 data-renderer-start-pos=\"3906\">&nbsp;</h3>\r\n\r\n<h3 data-renderer-start-pos=\"3906\" id=\"Important-Notes\"><a name=\"important-notes\" id=\"important-notes\"></a><a id=\"important-notes\" name=\"important-notes\"></a>Important Notes</h3>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"3925\">ConfigStoreData can store any format: text, JSON, XML, HTML, etc.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"3994\">Ensure that special characters such as&nbsp;<code data-renderer-mark=\"true\">=</code>&nbsp;(equals) or&nbsp;<code data-renderer-mark=\"true\">;</code>&nbsp;(semicolon) are not included in key or value pairs to avoid conflicts.</p>\r\n\t</li>\r\n</ul>\r\n\r\n<p data-renderer-start-pos=\"3994\">&nbsp;</p>\r\n\r\n<h3 data-renderer-start-pos=\"3994\"><a name=\"managing-separators-in-configstore\" id=\"managing-separators-in-configstore\"></a>Managing Separators in ConfigStore</h3>\r\n\r\n<h4><a id=\"default-separators\" name=\"default-separators\"></a>Default Separators</h4>\r\n\r\n<p data-renderer-start-pos=\"5050\"><a id=\"configstore-uses-the-following-separators\" name=\"configstore-uses-the-following-separators\"></a>ConfigStore uses the following separators:</p>\r\n\r\n<ul data-indent-level=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"5152\"><strong data-renderer-mark=\"true\">Property Separator</strong>:&nbsp;<code data-renderer-mark=\"true\">;</code>&nbsp;(semicolon)</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"5189\"><strong data-renderer-mark=\"true\">Key/Value Separator</strong>:&nbsp;<code data-renderer-mark=\"true\">=</code>&nbsp;(equals)</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"5224\"><strong data-renderer-mark=\"true\">Multi-value Separator</strong>:&nbsp;<code data-renderer-mark=\"true\">,</code>&nbsp;(comma)</p>\r\n\t</li>\r\n</ul>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 12810,
  "scraped_at": "2025-08-09T22:39:51.707548"
}