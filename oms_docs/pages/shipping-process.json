{
  "id": "1808795",
  "permalink": "shipping-process",
  "title": "Shipping Process",
  "type": "topic",
  "level": 6,
  "path": "Manhattan Active® Omni/Store/Process & Configuration Guides/Store Inventory & Fulfillment/Store Order Fulfillment/Shipping/Process",
  "raw_item": {
    "id": "1808795",
    "text": "Process",
    "title": "Process",
    "permalink": "shipping-process",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "129594",
    "parent": "f;129594",
    "created_date": "1482312774",
    "modified_date": "1751055708",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "1"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158410\" href=\"/store\" class=\"breadcrumb-links\">Store Inventory & Fulfillment</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158852\" href=\"/store-fulfillment\" class=\"breadcrumb-links\">Store Order Fulfillment</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158853\" href=\"/shipping\" class=\"breadcrumb-links\">Shipping</a></li><li> <span>››</span>Shipping Process</li></ul>  \t\r\n\t\t<h2><a name=\"shipping-process\" id=\"shipping-process\"></a>Shipping Process</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/shipping-process$shipping-process\">Shipping Process</a><ul><li><a href=\"/shipping-process$mask-shipping-address-with-specific-return-address\">Mask Shipping Address with specific return address:</a></li><li><a href=\"/shipping-process$return-labels\">Return Labels</a><ul><li><a href=\"/shipping-process$return-label-required\">Return Label Required</a></li><li><a href=\"/shipping-process$return-center\">Return Center</a></li><li><a href=\"/shipping-process$return-service-level\">Return Service Level</a></li></ul></li><li><a href=\"/shipping-process$ship-packages\">Ship Packages</a></li><li><a href=\"/shipping-process$update-based-on-carrier-response\">Update Based on Carrier Response</a></li><li><a href=\"/shipping-process$update-nbsp-at-nbsp-specific-time\">Update&nbsp;at&nbsp;Specific Time</a></li><li><a href=\"/shipping-process$completed-shipments\">Completed Shipments</a><ul><li><a href=\"/shipping-process$tracking-number\">Tracking Number</a></li><li><a href=\"/shipping-process$store-exception-management\">Store Exception Management</a></li><li><a href=\"/shipping-process$reprint\">Reprint</a></li><li><a href=\"/shipping-process$rfid-cross-organization\">RFID - Cross Organization</a><ul><li><a href=\"/shipping-process$ship-to-store-orders\">Ship to Store Orders</a></li><li><a href=\"/shipping-process$pullback-transfer-orders\">Pullback/Transfer Orders</a></li><li><a href=\"/shipping-process$store-initiated-transfers\">Store Initiated Transfers</a></li></ul></li></ul></li><li><a href=\"/shipping-process$other-functionality\">Other Functionality</a><ul><li><a href=\"/shipping-process$pickup-individual-packages-for-ship-to-store-orders\">Pickup Individual Packages for Ship to Store Orders</a></li><li><a href=\"/shipping-process$track-packages\">Track packages</a></li><li><a href=\"/shipping-process$rate\">Rate</a></li><li><a href=\"/shipping-process$close\">Close:</a></li><li><a href=\"/shipping-process$exceptions\">Exceptions</a><ul><li><a href=\"/shipping-process$reprint-collate\">Reprint Collate</a></li><li><a href=\"/shipping-process$update-package-nbsp\">Update Package&nbsp;</a></li><li><a href=\"/shipping-process$cancel\">Cancel</a></li></ul></li><li><a href=\"/shipping-process$out-of-the-box-behavior\">Out of the Box Behavior</a><ul><li><a href=\"/shipping-process$event-generation-nbsp\">Event generation&nbsp;</a></li><li><a href=\"/shipping-process$extension-handler-nbsp\">Extension Handler&nbsp;</a></li><li><a href=\"/shipping-process$event-payload\">Event Payload</a></li><li><a href=\"/shipping-process$inbound-message-type\">Inbound Message Type</a></li><li><a href=\"/shipping-process$outbound-message-type\">Outbound Message Type</a></li><li><a href=\"/shipping-process$extension-point-to-message-type-mapping\">Extension Point to Message Type Mapping</a></li></ul></li><li><a href=\"/shipping-process$customization\">Customization</a><ul><li><a href=\"/shipping-process$extension-handler\">Extension Handler </a></li><li><a href=\"/shipping-process$extension-point-to-message-type\">Extension Point to Message Type</a></li><li><a href=\"/shipping-process$inbound-message-type\">Inbound Message Type</a></li><li><a href=\"/shipping-process$outbound-message-type-nbsp\">Outbound Message Type&nbsp;</a></li><li><a href=\"/shipping-process$unsupported-carrier\">Unsupported Carrier</a></li></ul></li></ul></li><li><a href=\"/shipping-process$fulfillment-outbound-events\">Fulfillment Outbound Events</a></li><li><a href=\"/shipping-process$external-oms-integration-with-active-sim\">External OMS Integration with Active SIM</a></li><li><a href=\"/shipping-process$parcel-component-user-exits\">Parcel Component User Exits</a></li><li><a href=\"/shipping-process$services\">Services</a></li></ul></li></ul></div>\r\n\r\n<p>Shipping represents&nbsp;the final stage of the fulfillment when&nbsp;partnered carriers pick up packages and deliver them to their destination. Retailers typically trigger inventory updates and invoicing based on shipping events. Shipping functionality initiates the following:</p>\r\n\r\n<ul>\r\n\t<li>Requests the package tracking number and shipping/return labels from the parcel carrier</li>\r\n\t<li>Generates package shipping and&nbsp;return labels</li>\r\n\t<li>Updates package status to \"Shipped\"&nbsp;based on&nbsp;either a configured time or tracking information provided by the carrier</li>\r\n\t<li>Publishes a&nbsp;fulfillment shipping event for consumption by other components/systems to trigger inventory updates and invoicing</li>\r\n</ul>\r\n\r\n<p>The shipping process triggers the Fulfillment component to interact with the Parcel component&nbsp;in order to ship the packages.&nbsp;The&nbsp;system integrates with parcel carriers&nbsp;such as FedEx and UPS for shipping, rating, and tracking&nbsp;packages.&nbsp;The Parcel component&nbsp;exposes several services that have standardized request and response formats which serve as a single&nbsp;interaction point across different carriers.&nbsp;This enables retailers to expand from a single delivery partner to multiple&nbsp;partners easily. Out-of-the-box support is provided for FedEx, UPS, and Agile. Extension points&nbsp;are available to support other carriers.</p>\r\n\r\n<p><a id=\"Get Tracking Number\" name=\"Get Tracking Number\"></a>Request Tracking Number and Label Images</p>\r\n\r\n<p>The shipping process is initiated&nbsp;when a carrier tracking number is requested. Once the package is built (refer to <a hqid=\"1808793\" href=\"/fulfillment-packing-process\">Packing guide</a>), the Get Tracking Numbers service of the Fulfillment component is invoked, which communicates&nbsp;the carrier, ship from, ship to and package&nbsp;information to obtain the&nbsp;carrier tracking number&nbsp;and shipping/return label. The Ship or Ship and Return services of the Parcel component then forward the request to the appropriate carriers.</p>\r\n\r\n<p>The account details needed for communication with the carrier server are&nbsp;retrieved from the facility account information by the Parcel component. The response provides a unique tracking number for the carrier which is saved in the package. The shipping/return&nbsp;label images&nbsp;are saved&nbsp;if needed for later reprints.</p>\r\n\r\n<h5><a name=\"mask-shipping-address-with-specific-return-address\" id=\"mask-shipping-address-with-specific-return-address\"></a>Mask Shipping Address with specific return address:</h5>\r\n\r\n<p>By default, the shipping label would contain the address of the ShipFromLocation as the 'From' Address in the label provided by the parcel carrier. Contact name and Phone number is pulled from Location Contact of type \"Shipping\". If there is a requirement to print a different address on the shipping label( instead of the actual ship from address of the store fulfilling the order), the organization's address with addressType= shippingLabel can be populated with that address.</p>\r\n\r\n<p>During parcel shipping, if the organization 's shipping address is populated , that address would be used for Shipping label. Please note that the actual ShipFromLocation address would still be used as the shipper address for calculating&nbsp;Shipping charges , delivery date calculations etc.</p>\r\n\r\n<p>This feature would be helpful to print the ReturnDCAddress on shipping labels if needed so that the end customer can use that for return purposes.</p>\r\n\r\n<p>Summary of Fulfillment and Parcel services called:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 741px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 190px;\">Label requested</th>\r\n\t\t\t<th style=\"width: 225px;\">Fulfillment service</th>\r\n\t\t\t<th style=\"width: 280px;\">Parcel service</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 187px;\">Shipping label</td>\r\n\t\t\t<td style=\"width: 222px;\">Get Tracking Numbers</td>\r\n\t\t\t<td style=\"width: 277px;\">Ship</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 187px;\">Shipping and return labels</td>\r\n\t\t\t<td style=\"width: 222px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Get Tracking Numbers</span></td>\r\n\t\t\t<td style=\"width: 277px;\">Ship and Return</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong>Note:</strong> Tracking number and label images sent in the response from the carrier are&nbsp;persisted, additional details such as&nbsp;accessorial charge, total charge or&nbsp;base charge etc. are not persisted.&nbsp;In the case of direct integration with FedEx, the 34-digit Carrier Barcode that is printed on the FedEx label&nbsp;is also persisted.</div>\r\n\r\n<h5><a name=\"return-labels\" id=\"return-labels\"></a>Return Labels</h5>\r\n\r\n<p>Retailers often include preprinted return labels with the package to facilitate the returns process for customers. If the&nbsp;isReturnLabelRequired&nbsp;flag on the fulfillment is true and the&nbsp;returnToLocationId&nbsp;and return service level&nbsp;fields are both populated, a return label is requested for the package from the carrier.&nbsp;Refer to the&nbsp;<a hqid=\"1808785\" href=\"/shipping-configuration\">Configuration guide</a>&nbsp;for further information about the default values mentioned below.</p>\r\n\r\n<p><o:p></o:p></p>\r\n\r\n<h6><a name=\"return-label-required\" id=\"return-label-required\"></a>Return Label Required</h6>\r\n\r\n<p>If the&nbsp;isReturnLabelRequired&nbsp;flag is not populated on the fulfillment after&nbsp;download from the Order component, it can be updated through&nbsp;a default configuration in Fulfillment that defines order types which should have return labels generated.</p>\r\n\r\n<h6><a name=\"return-center\" id=\"return-center\"></a>Return Center</h6>\r\n\r\n<p>The&nbsp;returnToLocationId&nbsp;field on the fulfillment can be populated in the following sequence:</p>\r\n\r\n<ul>\r\n\t<li>Fulfillment extension point - Used to populate the return center from an external system/logic, or</li>\r\n\t<li>Order component - Value bridged from the Order component, or</li>\r\n\t<li>Fulfillment default value - If the value is not populated by one of the preceding methods and&nbsp;isReturnLabelRequired&nbsp;is set to true,&nbsp;it is updated with a configured&nbsp;default value.</li>\r\n</ul>\r\n\r\n<h6><a name=\"return-service-level\" id=\"return-service-level\"></a>Return Service Level</h6>\r\n\r\n<p>The Return Service Level&nbsp;is not present on the Fulfillment entity, and is thus not bridged from the Order component. The field can be obtained from:</p>\r\n\r\n<ul>\r\n\t<li>Fulfillment extension point - Used to populate the service level from an external system/logic, or</li>\r\n\t<li>Fulfillment default value -&nbsp;If the value is not populated by the Fulfillment extension point&nbsp;and&nbsp;isReturnLabelRequired&nbsp;is set to true,&nbsp;it is updated with the&nbsp;configured&nbsp;default value.</li>\r\n</ul>\r\n\r\n<p><span style=\"font-size: 1.12em;\"><a id=\"Label Images\" name=\"Label Images\"></a>Label Images, File Conversion and Storage</span></p>\r\n\r\n<p>If thermal printing is disabled, shipping (and return, if applicable) labels are returned from the carrier as&nbsp;images&nbsp;in PNG or GIF file format&nbsp;(see&nbsp;<a href=\"/shipping-process$Get Tracking Number\">Request&nbsp;Tracking&nbsp;Number and Label Images</a>&nbsp;section) and converted to PDF format using Jasper report templates. On the other hand, when thermal printing is enabled, the labels are requested and returned by the carrier in ZPL format and retained as they are. Irrespective of whether thermal printing is enabled or not, the Get Tracking Number service is leveraged to request tracking numbers and labels from the carrier and the labels&nbsp;are saved, if needed, for future reprints. Refer to the <a hqid=\"1808797\" href=\"/fulfillment-printing-process\">Printing&nbsp;process</a> guide for more details on printing.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: When thermal printing is disabled, only&nbsp;the PNG and GIF file formats are supported in the carrier response. In some exceptional cases, carriers may send labels in the PDF format.&nbsp;If labels are sent in the PDF format, then a collated report is generated by merging the packing slip PDF with the label PDF.</div>\r\n\r\n<div class=\"tip\"><strong>Note:&nbsp;</strong>When thermal printing is enabled, only ZPL format is supported. The collate report in such cases comprises only the packing slip and the ZPL label(s) are saved as they are. The labels and the collate report are printed / reprinted separately using the thermal and document printer respectively.&nbsp;</div>\r\n\r\n<h5 style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><a name=\"ship-packages\" id=\"ship-packages\"></a>Ship Packages</h5>\r\n\r\n<p>The timing of when a fulfillment is updated to \"Shipped\" status could be used to determine&nbsp;when revenue is realized for the sale. Thus, the timing of this status is important.&nbsp;The fulfillment status is updated once all&nbsp;packages&nbsp;are updated to \"Shipped\" status. Retailers can choose to update packages to \"Shipped\" status in one of two ways.&nbsp;Refer to the&nbsp;<a hqid=\"1808785\" href=\"/shipping-configuration\">Configuration guide</a>&nbsp;for additional information.</p>\r\n\r\n<p data-pm-slice=\"1 1 [&quot;table&quot;,null,&quot;tableRow&quot;,null,&quot;tableCell&quot;,null]\">When the carrier tracking is not enabled, the entire fulfillment should be ‘Packed’ (Fulfillment Min Status = “Packed”) for the scheduler to pick it up for processing. Fulfillment with units pending to be packed, are not impacted by the scheduler execution. This&nbsp;is applicable for ‘Ship To Store- Merge’ and ‘Ship to Address’ fulfillments.</p>\r\n\r\n<div class=\"info\" data-pm-slice=\"1 1 [&quot;table&quot;,null,&quot;tableRow&quot;,null,&quot;tableCell&quot;,null]\"><strong>Note</strong>: For the ship to store (Merge Leg) Orders, the default receipt type of the package will be \"Package\"<b>.</b>&nbsp;A user exit has been given to set the other receipt types \"Item\" or \"Load\". The delivery type of the package is Customer Order.</div>\r\n\r\n<h5><a name=\"update-based-on-carrier-response\" id=\"update-based-on-carrier-response\"></a>Update Based on Carrier Response</h5>\r\n\r\n<p>With this method, the system updates the package&nbsp;to \"Shipped\" status based on package tracking responses from the carrier. The batch job scheduler&nbsp;sends the request for manifested packages (packages in \"Built\" status with a tracking number) at defined intervals. This request is initiated by the Track and Ship Packages service of the Fulfillment component, which routes to the Track service of the Parcel component.</p>\r\n\r\n<div class=\"warning\">For customer shipments , the track and ship scheduler will pick fulfillments that are completely or partially packed. This would ensure that all packages are shipped together at the same time.</div>\r\n\r\n<p>If&nbsp;the carrier response indicates that a&nbsp;package&nbsp;is considered as in-transit on&nbsp;the network, Store Fulfillment updates the package to \"Shipped\" status. Otherwise, the package status remains \"Built\". Any&nbsp;packages that remain in \"Built\" status can then be&nbsp;included in the subsequent requests triggered by the job scheduler.<a id=\"Delivered Packages\" name=\"Delivered Packages\"></a>&nbsp;If the track and ship scheduler runs after the package has been delivered by the carrier, carrier response would contain the status of 'Delivered'. In this case, the package status will get updated from 'Packed' to 'Shipped' in the store application. This scenario is most likely to happen in the case of same-day delivery carriers.</p>\r\n\r\n<p>The Status Map&nbsp;entity of&nbsp;the Parcel component maps the various carrier network statuses to Store Fulfillment.</p>\r\n\r\n<p>Summary of Fulfillment and Parcel services called:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 741px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 225px;\">Fulfillment service</th>\r\n\t\t\t<th style=\"width: 280px;\">Parcel service</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 222px;\">Track and Ship Packages</td>\r\n\t\t\t<td style=\"width: 277px;\">Track</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5><a name=\"update-nbsp-at-nbsp-specific-time\" id=\"update-nbsp-at-nbsp-specific-time\"></a>Update&nbsp;at&nbsp;Specific Time</h5>\r\n\r\n<p><span style=\"font-family:Arial,Helvetica,sans-serif;\">Alternatively, packages can be&nbsp;updated to \"Shipped\" status purely based on a configured time,&nbsp;rather than with a carrier response. With this method, the retailer defines&nbsp;a time for the batch job scheduler to update manifested packages (packages in \"Built\" status with a tracking number) to&nbsp;\"Shipped\" status. With this model, there is no dependency on the response from the carrier's network. This occurs using the Ship Packages service of the Fulfillment component.</span></p>\r\n\r\n<p>Summary of Fulfillment and Parcel services called:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 741px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 225px;\">Fulfillment service</th>\r\n\t\t\t<th style=\"width: 280px;\">Parcel service</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 222px;\">Ship Packages</td>\r\n\t\t\t<td style=\"width: 277px;\">N/a</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><span style=\"font-size: 1.12em;\">Shipping Updates</span></p>\r\n\r\n<p>Regardless of what method is used to update the package to shipped status, the following updates occur at that time from&nbsp;the Ship Packages service:</p>\r\n\r\n<ul>\r\n\t<li>Package status is updated from \"Built\" to \"Shipped\". The package shipped date is populated.</li>\r\n\t<li>In-transit inventory records can be created for packages destined to another location. This is based on configuration; refer to the <a hqid=\"1808785\" href=\"/shipping-configuration\">Shipping configuration guide</a>&nbsp;for additional information.This does not&nbsp;apply to packages shipped for pickup by customers at the store (Ship to Store orders.) or ship to address orders.</li>\r\n\t<li>Fulfillment line shipped quantity is updated</li>\r\n\t<li>Fulfillment line status may be updated</li>\r\n\t<li>Fulfillment minimum and maximum status may be updated</li>\r\n\t<li>Fulfillment actual shipped date may be updated</li>\r\n\t<li>Fulfillment shipping event created</li>\r\n</ul>\r\n\r\n<h4><a name=\"completed-shipments\" id=\"completed-shipments\"></a><a id=\"completedshipments\" name=\"completedshipments\"></a>Completed Shipments</h4>\r\n\r\n<p>The Completed Shipments UI lists packages that have been packed in the&nbsp;store throughout the day to confirm the packages that should be handed off to the carrier at the end of the day. The UI also highlights any packages which are missing shipping documents, so associates can print them.&nbsp;By default, the UI shows packages for the current date. A date filter is also available to select previous dates, and additional filtering is available to list packages by carrier,&nbsp;packages with/without a tracking number, by&nbsp;package status, and by shipment type (Pullback / Transfer, Store Initiated Transfer, or Customer Shipment). Filtering options are also available to look for a specific OM (Order Management) Order #, or Tracking #.&nbsp;</p>\r\n\r\n<p>If the fulfillment configuration \"Move packages after tracking with carrier\" is true, then packages in \"Packed\" status are listed, else packages in \"Packed\" and \"Shipped\" status are listed. Refer to&nbsp;<a hqid=\"1808785\" href=\"/shipping-configuration\">Shipping configuration guide</a>&nbsp;for additional information.</p>\r\n\r\n<div class=\"tip\">The Date filter indicates the date from when the packages are packed. Currently there is no restriction to how far back the packages can be searched. If a completed shipment list needs to display a large number of records,&nbsp;pagination and virtual scroll are available.&nbsp;</div>\r\n\r\n<p>The List Packages For Store service is used to list completed packages.</p>\r\n\r\n<h5><a name=\"tracking-number\" id=\"tracking-number\"></a>Tracking Number</h5>\r\n\r\n<p>By default, packages without a tracking number are shown at the top of the list, in the descending order of their last updated date and time (i.e., a package with the most recent last updated timestamp&nbsp;is listed first), to help the store associates identify that their shipping documents need to be reprinted. They are followed by packages with a tracking number present sorted in the same sequence.</p>\r\n\r\n<p>Additional sorting logic is available to sort the packages in the descending or ascending order of their packed date and time. Packed date and time sorting logic doesn't segregate packages without tracking numbers from those with one. In other words, when the completed shipments are sorted based on their packed date and time, they are displayed as a single list regardless of whether they have a tracking number or not.</p>\r\n\r\n<h5><a name=\"store-exception-management\" id=\"store-exception-management\"></a><span style=\"color:#8e44ad;\"><a id=\"storeexceptionpackageswithoutshippinglabel\" name=\"storeexceptionpackageswithoutshippinglabel\"></a></span>Store Exception Management</h5>\r\n\r\n<p>The Store Exception Management UI can be configured to display the&nbsp;count of packages without a tracking number so that store managers can have visibility of these issues for quick resolution. Based on permissions, the user can navigate to the Completed Shipments UI&nbsp;where the list of packages without a shipping label is&nbsp;displayed. It auto applies a filter to show the package without shipping from the last 15 days.&nbsp;Store associates can then reprint the shipping documents for the packages.</p>\r\n\r\n<p>Refer to the<span style=\"color:#8e44ad;\"> <a hqid=\"2998199\" href=\"/store-exceptions-management$StoreExceptions\">Store Exception Management guide</a> </span>for additional information, including configuration and permissions needed.</p>\r\n\r\n<h5><a name=\"reprint\" id=\"reprint\"></a>Reprint</h5>\r\n\r\n<p>Shipping documents of packages can be reprinted or packages can be updated to change carrier, service level, package type, and weight.</p>\r\n\r\n<h5><a name=\"rfid-cross-organization\" id=\"rfid-cross-organization\"></a>RFID - Cross Organization</h5>\r\n\r\n<h6><a name=\"ship-to-store-orders\" id=\"ship-to-store-orders\"></a>Ship to Store Orders</h6>\r\n\r\n<p>For ship to store orders, when an item's unit inventory is shipped from one organization's store to another organization's store,&nbsp;the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving&nbsp;organization's&nbsp;store.</p>\r\n\r\n<h6><a name=\"pullback-transfer-orders\" id=\"pullback-transfer-orders\"></a>Pullback/Transfer Orders</h6>\r\n\r\n<p>Retailers can pack and ship&nbsp;pullback/transfer orders from one organization's store to another organization's store or DC. When an item's unit inventory has been shipped from one organization's store to another organization's store,&nbsp;the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving organization's store.</p>\r\n\r\n<h6><a name=\"store-initiated-transfers\" id=\"store-initiated-transfers\"></a>Store Initiated Transfers</h6>\r\n\r\n<p>Retailers can pack and ship&nbsp;store initiated orders from one organization's store to another organization's store or DC. When an item's unit inventory has been shipped from one organization's store to another organization's store,&nbsp;the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving organization's store.</p>\r\n\r\n<p>Refer&nbsp;to the&nbsp;<a href=\"https://omni.helpdocsonline.com/cross-org-fulfillment-process\">process guide</a>&nbsp;for additional information about cross-organization feature.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>:&nbsp;The unit inventory that is in an inbound state will be purged after 90 days as per the purge process.</div>\r\n\r\n<h4><a name=\"other-functionality\" id=\"other-functionality\"></a>Other Functionality</h4>\r\n\r\n<h5><a name=\"pickup-individual-packages-for-ship-to-store-orders\" id=\"pickup-individual-packages-for-ship-to-store-orders\"></a>Pickup Individual Packages for Ship to Store Orders</h5>\r\n\r\n<p>If a ship to store order involves multiple packages being sent from the same store, a configuration defines whether the customer can pickup only some of the packages in the event that the others are lost or delayed.&nbsp;This is&nbsp;achieved by sending separate fulfillment shipped outbounds for each package that the fulfilling store sends. Order Management creates&nbsp;pickup fulfillments based on the fulfillment shipped outbound messages.</p>\r\n\r\n<p>For example, assume a ship to store order is released to Store A to be shipped to Store B for customer pickup and is shipped in 3 packages.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Fulfillment Line</th>\r\n\t\t\t<th scope=\"col\">Item</th>\r\n\t\t\t<th scope=\"col\">Units</th>\r\n\t\t\t<th scope=\"col\">Package</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>L1</td>\r\n\t\t\t<td>ITEM1&nbsp;</td>\r\n\t\t\t<td>2 Units</td>\r\n\t\t\t<td>PKG1</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>L2</td>\r\n\t\t\t<td>ITEM2&nbsp;</td>\r\n\t\t\t<td>1 Unit</td>\r\n\t\t\t<td>PKG2</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>L3</td>\r\n\t\t\t<td>ITEM3</td>\r\n\t\t\t<td>1 Unit</td>\r\n\t\t\t<td>PKG3</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>By sending a separate fulfillment outbound for each package, the customer can pickup one or two of the packages if the others are lost or delayed. Refer to <a hqid=\"1808785\" href=\"/shipping-configuration\">Configuration guide</a> for more details.</p>\r\n\r\n<h5><a name=\"track-packages\" id=\"track-packages\"></a>Track packages</h5>\r\n\r\n<p>The status of packages that have been manifested in the carrier network can be tracked to provide transit visibility from the shipping location to the&nbsp;final destination. With the provided tracking numbers, information about the specified packages such as the scan event history is returned. The tracking of multiple packages&nbsp;with a single request is supported.</p>\r\n\r\n<p>This is provided by the&nbsp;Track Packages service of&nbsp;the Fulfillment component and the Track service of the Parcel component.</p>\r\n\r\n<p>Summary of&nbsp;Fulfillment and Parcel services called:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 741px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 225px;\">Fulfillment service</th>\r\n\t\t\t<th style=\"width: 280px;\">Parcel service</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 222px;\">Track Packages</td>\r\n\t\t\t<td style=\"width: 277px;\">Track</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5 style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><a name=\"rate\" id=\"rate\"></a>Rate</h5>\r\n\r\n<p>Rating functionality allows retailers to compare and choose a shipping service that is the best fit for their needs and budget. Estimated rates and delivery time&nbsp;are returned by the carrier. Rating can perform the following functions:</p>\r\n\r\n<ul style=\"margin-left: 40px;\">\r\n\t<li>Determine specific shipping charges and estimated delivery window</li>\r\n\t<li>Compare shipping charges for different service levels of the carrier</li>\r\n\t<li>Create a list of shipping choices to choose from</li>\r\n</ul>\r\n\r\n<p>The Rate by Fulfillment and Rate by Package services of the Fulfillment component, along with the Rate service of the Parcel component, request rating information.</p>\r\n\r\n<p>Summary of&nbsp;Fulfillment and Parcel services called:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 741px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th style=\"width: 225px;\">Fulfillment service</th>\r\n\t\t\t<th style=\"width: 280px;\">Parcel service</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 222px;\">Rate by Fulfillment</td>\r\n\t\t\t<td style=\"width: 277px;\">Rate</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 222px;\">Rate by Package</td>\r\n\t\t\t<td style=\"width: 277px;\">Rate</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5 style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\">&nbsp;</h5>\r\n\r\n<div class=\"tip\" style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><strong>Note</strong>:&nbsp;Rate functionality is only available through an API and not a feature that is accessible through&nbsp;UI.</div>\r\n\r\n<h5 style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><a name=\"close\" id=\"close\"></a>Close:</h5>\r\n\r\n<div class=\"warning\">The Close&nbsp;service of the Parcel component initiates the final stage of processing of all FedEx package&nbsp;(shipment)&nbsp;data for the day. This includes the close list (listing currently open manifests), close action (auctioning a currently open manifest), and close get (querying the progress of the end of day processes). With information such as the specified carrier and date, it returns manifest information that meets the provided criteria. The close step is only used for FedEx shipments.</div>\r\n\r\n<h5 style=\"padding: 0px; margin-top: 0px; margin-right: 0px; margin-left: 0px;\"><a name=\"exceptions\" id=\"exceptions\"></a>Exceptions</h5>\r\n\r\n<h6><a name=\"reprint-collate\" id=\"reprint-collate\"></a>Reprint Collate</h6>\r\n\r\n<p>Users can&nbsp;reprint a package collate once the tracking numbers and labels have been returned&nbsp;by the carrier to handle scenarios when the initial collate was lost, damaged or did not print properly. This is done by the Reprint Shipping Labels service. When thermal printing is disabled, the collate document, comprising the packing slip, shipping and return labels (if applicable),&nbsp;is previewed and printed as a single document using the document printer. On the other hand, when thermal printing is enabled, the collate document comprises only the packing slip and is printed using the document printer. The label(s) are separately silently printed using the configured thermal printer.&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note:</strong>&nbsp;Currently, Manhattan Active Omni® Store Inventory & Fulfillment does not support reprinting of labels originally generated in the ZPL format (implying that thermal printing is enabled) using document printers.</div>\r\n\r\n<h6 style=\"padding: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;\"><a name=\"update-package-nbsp\" id=\"update-package-nbsp\"></a>Update Package&nbsp;</h6>\r\n\r\n<p>A store user with the appropriate permission can modify shipping options for the package and reprint the labels. Users can scan an Item, Package, or Order to find the package to reprint the shipping labels.</p>\r\n\r\n<p>Users can change the following shipping information during the packing and reprint process:</p>\r\n\r\n<ul>\r\n\t<li>Carrier</li>\r\n\t<li>Service level</li>\r\n\t<li>Package type</li>\r\n\t<li>Package weight&nbsp;</li>\r\n</ul>\r\n\r\n<p>If shipping labels are not generated because the shipping option for&nbsp;the&nbsp;package is unsupported by the carrier or if the existing shipping label needs to be replaced due to change in carrier,&nbsp;service level, package type or package weight, the store user&nbsp;can update the information and reprint the revised shipping labels.&nbsp;</p>\r\n\r\n<div class=\"warning\"><a id=\"Update package SDD\" name=\"Update package SDD\"></a>Same-day delivery carriers are not supported for the regular shipments.&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong>Note:</strong> When the ship via is available on the fulfillment, it is propagated to&nbsp;the packages on the&nbsp;fulfillment. Carrier and service level are derived&nbsp;based on that ship via. If the carrier or service level&nbsp;is updated via the Update Package functionality, the package's ship&nbsp;via is cleared since&nbsp;the initial ship via no longer corresponds to the new carrier/service level. If any accessorials existed for the original ship via, they will be lost.&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: Fulfillment's ship via/carrier-service level&nbsp;is not updated on updating the package. This difference can be used for reporting purposes on which packages&nbsp;are being upgraded to a different carrier- service level&nbsp;during shipping.</div>\r\n\r\n<h6><a name=\"cancel\" id=\"cancel\"></a><a id=\"CancelLabel\" name=\"CancelLabel\"></a>Cancel</h6>\r\n\r\n<p>If a tracking number is not used, the&nbsp;tracking number can be canceled/voided on the carrier network through the Cancel service of the Parcel component. This can be initiated until the package is in \"Shipped\" status.</p>\r\n\r\n<p>When an associate changes the shipping option(s), updated information is successfully saved on the package. Once the updated information is saved,&nbsp;based on the store fulfillment parameter \"Enable void label call to carrier upon update package\", a call is made to the carrier&nbsp;to cancel existing&nbsp;tracking number/ shipping label. Refer to&nbsp;&nbsp;<a hqid=\"1808785\" href=\"/shipping-configuration\">Shipping Configuration</a>&nbsp;guide for more details. Shipping label cancelation call to the carrier is initiated when updating packages during packing of shipment, pullback & transfer&nbsp;and store initiated transfer order packing flows as well as&nbsp;reprint label flow. The cancel call will cancel shipping label only. The cancellation is not applicable for return label.&nbsp;</p>\r\n\r\n<p>The Cancel service can be called from the <a hqid=\"1808793\" href=\"/fulfillment-packing-process\">cancel packing flow</a>, but requires an extension to call.</p>\r\n\r\n<h5><a name=\"out-of-the-box-behavior\" id=\"out-of-the-box-behavior\"></a>Out of the Box Behavior</h5>\r\n\r\n<p>When enabled, the out of the box behavior for the void package label event generation is to trigger a parcel cancel call to the carrier to cancel the existing label, when shipping option(s) is changed during the update package flow. Details are explained below.</p>\r\n\r\n<h6><a name=\"event-generation-nbsp\" id=\"event-generation-nbsp\"></a>Event generation&nbsp;</h6>\r\n\r\n<p>The \"Enable void label call to carrier upon update package\" parameter controls whether a void package label event&nbsp;can be created (refer to the <a hqid=\"1808785\" href=\"/shipping-configuration\">Shipping Configuration</a>). If this configuration is disabled, a shipping label cancelation call is not sent to the carrier to cancel the existing label. If enabled, when shipping option(s) is changed and updated package information is saved successfully, then the VoidPackageLabelEvent&nbsp;extension handler is checked to determine if an event should be created for the&nbsp;package. This extension handler defines the condition (see EntryCondition below)&nbsp;of when to create the event.</p>\r\n\r\n<p>Out of the box, this&nbsp;condition is set to null, meaning&nbsp;that an event is created for all the configured providers. Out of the box base configuration is shown below.</p>\r\n\r\n<h6><a name=\"extension-handler-nbsp\" id=\"extension-handler-nbsp\"></a>Extension Handler&nbsp;</h6>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/extensionHandler</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"ExtensionHandlerId\": \"VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;\"OutBoundMessageType\": {<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\"<br>\r\n&nbsp;&nbsp; &nbsp;},<br>\r\n&nbsp;&nbsp; &nbsp;\"RegisteredExtensionPoints\": [<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"EntryCondition\": null<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;]<br>\r\n}</div>\r\n\r\n<h6><a name=\"event-payload\" id=\"event-payload\"></a>Event Payload</h6>\r\n\r\n<p data-renderer-start-pos=\"2073\">The payload will include the provider of the old carrier code by making a call to the parcel component to retrieve this data.&nbsp;This field can be used to create a custom condition through the extension handler to only execute this asynchronous call for a specific provider. The rest of the payload will be used to create a ParcelCancelRequest, which will act as the payload when calling the parcel cancel API. The payload below shows what is sent in the message.</p>\r\n\r\n<div class=\"computer_code\"><code>{<br>\r\n&nbsp;&nbsp; &nbsp;\"CarrierCode\": &lt;carrier_code&gt;,&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;\"Provider\": &lt;provider&gt;,&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;\"TrackingNumber\": &lt;tracking_number&gt;,&nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;\"ShipFromLocationId\": &lt;ship_from_location_id&gt;&nbsp;<br>\r\n}</code></div>\r\n\r\n<p data-renderer-start-pos=\"2073\">If there is an error when trying to void the old package, an exception will be thrown in the fulfillment component, which will trigger a retry through failed messages user interface. Potential errors can occur if the old package has already been voided, if the tracking number doesn’t exist, the carrier component is not getting a response. For example, component-agile is not getting a response from Logistyx or&nbsp;component-agile is down, or component-parcel is down.</p>\r\n\r\n<h6><a name=\"inbound-message-type\" id=\"inbound-message-type\"></a>Inbound Message Type</h6>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/inBoundMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\",<br>\r\n&nbsp;&nbsp; &nbsp;\"NoOfConsumer\": 10,<br>\r\n&nbsp;&nbsp; &nbsp;\"MinNoOfConsumer\": 1,<br>\r\n&nbsp;&nbsp; &nbsp;\"MaxDesiredInstances\": 6,<br>\r\n&nbsp;&nbsp; &nbsp;\"ScaleUpTimeWindow\": 10,<br>\r\n&nbsp;&nbsp; &nbsp;\"ScaleDownTimeWindow\": 20,<br>\r\n&nbsp;&nbsp; &nbsp;\"ServiceId\": \"VoidPackageLabel\"<br>\r\n}</div>\r\n\r\n<h6><a name=\"outbound-message-type\" id=\"outbound-message-type\"></a>Outbound Message Type</h6>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/outBoundMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\",<br>\r\n&nbsp;&nbsp; &nbsp;\"Description\": \"Void package during changing shipping options\",<br>\r\n&nbsp;&nbsp; &nbsp;\"Transactional\": true,<br>\r\n&nbsp;&nbsp; &nbsp;\"PersistMessageToMsgStore\": false<br>\r\n}</div>\r\n\r\n<h6><a name=\"extension-point-to-message-type-mapping\" id=\"extension-point-to-message-type-mapping\"></a>Extension Point to Message Type Mapping</h6>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/extPointToMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\"<br>\r\n}</div>\r\n\r\n<h5><a name=\"customization\" id=\"customization\"></a>Customization</h5>\r\n\r\n<h6><a name=\"extension-handler\" id=\"extension-handler\"></a><strong>Extension Handler </strong></h6>\r\n\r\n<p>Add a new extension handler entry mentioned below for the custom profile to <strong>extensionHandler_1.json&nbsp;</strong>& specify entry condition if needed. For example, if you want to enable this feature&nbsp;for say UPS and Logistyx provider, then specify the provider name(s) in the entry condition.&nbsp;</p>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/extensionHandler</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"ExtensionHandlerId\": \"VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;\"OutBoundMessageType\": {<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\"<br>\r\n&nbsp;&nbsp; &nbsp;},<br>\r\n&nbsp;&nbsp; &nbsp;\"RegisteredExtensionPoints\": [<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\"EntryCondition\": \"Provider == 'UPS' || == 'Agile'\"<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;]<br>\r\n}</div>\r\n\r\n<h6><a name=\"extension-point-to-message-type\" id=\"extension-point-to-message-type\"></a><strong>Extension Point to Message Type</strong></h6>\r\n\r\n<p>Add a new extension point to the message type mapping entry mentioned below to <strong data-renderer-mark=\"true\">extPointToMessageType.json&nbsp;</strong>for the custom profile:</p>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/extPointToMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\",<br>\r\n&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\"<br>\r\n}</div>\r\n\r\n<h6><a name=\"inbound-message-type\" id=\"inbound-message-type\"></a><strong>Inbound Message Type</strong></h6>\r\n\r\n<p>Add a new inbound message type entry mentioned below to the <strong data-renderer-mark=\"true\">inBoundMessageType.json&nbsp;</strong>for the custom profile:</p>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong> {URL}/fulfillment/api/ServiceDefinition/inBoundMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp;&nbsp; &nbsp;\"MessageType\": \"VoidPackageLabelEventMSGType\",<br>\r\n&nbsp;&nbsp; &nbsp;\"NoOfConsumer\": 10,<br>\r\n&nbsp;&nbsp; &nbsp;\"MinNoOfConsumer\": 1,<br>\r\n&nbsp;&nbsp; &nbsp;\"MaxDesiredInstances\": 6,<br>\r\n&nbsp;&nbsp; &nbsp;\"ScaleUpTimeWindow\": 10,<br>\r\n&nbsp;&nbsp; &nbsp;\"ScaleDownTimeWindow\": 20,<br>\r\n&nbsp;&nbsp; &nbsp;\"ServiceId\": \"VoidPackageLabel\"<br>\r\n}</div>\r\n\r\n<h6><a name=\"outbound-message-type-nbsp\" id=\"outbound-message-type-nbsp\"></a><strong>Outbound Message Type&nbsp;</strong></h6>\r\n\r\n<p>Add a new outbound message type entry as mentioned below to <strong data-renderer-mark=\"true\">outBoundMessageType.json&nbsp;</strong>for the custom profile:</p>\r\n\r\n<div class=\"computer_code\"><strong>API Name:</strong>&nbsp;{URL}/fulfillment/api/ServiceDefinition/outBoundMessageType/save</div>\r\n\r\n<div class=\"computer_code\">{<br>\r\n&nbsp; &nbsp; \"MessageType\": \"VoidPackageLabelEventMSGType\",<br>\r\n&nbsp; &nbsp; \"Description\": \"Void package during changing shipping options\",<br>\r\n&nbsp; &nbsp; \"Transactional\": true,<br>\r\n&nbsp; &nbsp; \"PersistMessageToMsgStore\": false<br>\r\n}</div>\r\n\r\n<h6><a name=\"unsupported-carrier\" id=\"unsupported-carrier\"></a>Unsupported Carrier</h6>\r\n\r\n<p>If the c<span style=\"font-family:Arial,Helvetica,sans-serif;\">arrier is not supported by base,&nbsp;then void label extension Parce</span>l:Carrier:UserExit:Cancel is required to be configured to send the call to the third party carrier to cancel the label as needed.</p>\r\n\r\n<h4><a name=\"fulfillment-outbound-events\" id=\"fulfillment-outbound-events\"></a>Fulfillment Outbound Events</h4>\r\n\r\n<p></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 870px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 219px;\"><span style=\"text-align: center; font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(221, 221, 221);\">Scenario</span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 196px;\"><span style=\"text-align: center; font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(221, 221, 221);\">Fulfillment Event&nbsp;</span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 212px;\"><span style=\"text-align: center; font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(221, 221, 221);\">Outbound Message Name</span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 206px;\"><span style=\"text-align: center; font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(221, 221, 221);\">Order Event Created from Fulfillment Outbound Message</span></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 216px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">When the full or&nbsp;partial quantity of the fulfillment/fulfillment line is shipped</span></td>\r\n\t\t\t<td style=\"width: 193px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Fulfillment/line status is changed to Partially Shipped or Shipped</span></td>\r\n\t\t\t<td style=\"width: 209px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Fulfillment Shipped</span></td>\r\n\t\t\t<td style=\"width: 203px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">An order event is created with the type \"Ship\"</span></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><a name=\"external-oms-integration-with-active-sim\" id=\"external-oms-integration-with-active-sim\"></a>External OMS Integration with Active SIM</h4>\r\n\r\n<p><span style=\"font-family:Arial,Helvetica,sans-serif;\">When Manhattan Active Store Inventory Management is&nbsp;integrated with an external Order Management System (OMS), SIF can be configured to directly send supply updates to the Inventory component since Manhattan Active Order Management is not present to send the inventory update.&nbsp;This applies to Pickup at Store (including Curbside pickups), Ship to Store and Same Day Delivery orders that are&nbsp;fulfilled by the&nbsp;store. This functionality should be enabled only when Active Store Inventory Management is deployed with an external OMS.</span></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 870px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 219px;\"><span style=\"font-family:Arial,Helvetica,sans-serif;\"><span style=\"text-align: center; background-color: rgb(221, 221, 221);\">Order</span></span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 196px;\"><span style=\"font-family:Arial,Helvetica,sans-serif;\"><span style=\"text-align: center; background-color: rgb(221, 221, 221);\">Supply Transaction Type</span></span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 212px;\"><span style=\"font-family:Arial,Helvetica,sans-serif;\"><span style=\"text-align: center; background-color: rgb(221, 221, 221);\">Supply Update</span></span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 206px;\"><span style=\"font-family:Arial,Helvetica,sans-serif;\">Inventory Transaction Type</span></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 206px;\"><span style=\"font-family:Arial,Helvetica,sans-serif;\">Inventory Transaction Value (mapped to Inventory Transaction ID in the Supply Event)</span></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 216px;\"><font face=\"Open Sans, arial, sans-serif\">Ship to Address</font></td>\r\n\t\t\t<td style=\"width: 193px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Adjustment</span></td>\r\n\t\t\t<td style=\"width: 209px;\"><font face=\"Open Sans, arial, sans-serif\">Reduce On-Hand Supply</font></td>\r\n\t\t\t<td style=\"width: 203px;\"><font face=\"Open Sans, arial, sans-serif\">Order Ship</font></td>\r\n\t\t\t<td style=\"width: 203px;\"><font face=\"Open Sans, arial, sans-serif\">OrderId:FulfillmentId</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 216px;\"><font face=\"Open Sans, arial, sans-serif\">Ship to Store Merge Leg</font></td>\r\n\t\t\t<td style=\"width: 193px;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Adjustment</span></td>\r\n\t\t\t<td style=\"width: 209px;\"><font face=\"Open Sans, arial, sans-serif\">Reduce On-Hand Supply</font></td>\r\n\t\t\t<td style=\"width: 203px;\"><font face=\"Open Sans, arial, sans-serif\">Order Ship</font></td>\r\n\t\t\t<td style=\"width: 203px;\"><font face=\"Open Sans, arial, sans-serif\">OrderId:FulfillmentId</font></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><span style=\"font-family:Arial,Helvetica,sans-serif;\">The “Ship” <a href=\"https://omni.helpdocsonline.com/inventory-audit-configuration$store-transaction-type\">Store Transaction Type</a> and its <a href=\"https://omni.helpdocsonline.com/inventory-audit-configuration$store-inventory-transaction-type-override\">override</a> do not come into effect when this feature is enabled. Additionally, the following relay attributes are sent as part of the supply event for Inventory Audit purposes:</span></p>\r\n\r\n<ol>\r\n\t<li><span style=\"font-family:Arial,Helvetica,sans-serif;\">Order Id</span></li>\r\n\t<li><span style=\"font-family:Arial,Helvetica,sans-serif;\">Order Line Id</span></li>\r\n\t<li><span style=\"font-family:Arial,Helvetica,sans-serif;\">Fulfillment Id</span></li>\r\n\t<li><span style=\"font-family:Arial,Helvetica,sans-serif;\">Fulfillment Line Id</span></li>\r\n</ol>\r\n\r\n<p>This functionality can be enabled for all fulfillment types via a configuration (refer to&nbsp;the <a hqid=\"ID2239205\" href=\"https://omni.helpdocsonline.com/confirm-pickup-configuration\">configuration</a>&nbsp;guide), or for specific fulfillment types.&nbsp;<span style=\"font-family:Arial,Helvetica,sans-serif;\">For example, SIF can be configured to send inventory updates only for Pullback & Transfer orders. If the functionality should only be enabled for certain fulfillment types, pass the</span><span style=\"font-family:Arial,Helvetica,sans-serif;\">&nbsp;'</span>isExternalOrder' property in the Fulfillment as true and leave the configuration set to false. For a given fulfillment, the logic of whether to use the&nbsp;Fulfillment property or the configuration is described below:</p>\r\n\r\n<ol data-indent-level=\"2\" start=\"1\">\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1458\">If the Fulfillment&nbsp;isExternalOrder flag is true, it overrides whatever value is set in the configuration.</p>\r\n\t</li>\r\n\t<li>\r\n\t<p data-renderer-start-pos=\"1458\">If the Fulfillment isExternalOrder flag is false, the configuration is checked to determine the behavior.</p>\r\n\t</li>\r\n</ol>\r\n\r\n<h4><a name=\"parcel-component-user-exits\" id=\"parcel-component-user-exits\"></a>Parcel Component User Exits</h4>\r\n\r\n<table data-autosize=\"false\" data-layout=\"default\" data-number-column=\"false\" data-pm-slice=\"0 0 []\" data-table-local-id=\"2157d747-38ba-4f60-bc4f-b17e920f65c8\" data-table-width=\"760\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th data-colwidth=\"154\">\r\n\t\t\t<p><strong>Type</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"124\">\r\n\t\t\t<p><strong>User Exit</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"178\">\r\n\t\t\t<p><strong>Function</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"152\">\r\n\t\t\t<p><strong>Input</strong></p>\r\n\t\t\t</th>\r\n\t\t\t<th data-colwidth=\"152\">\r\n\t\t\t<p><strong>Output</strong></p>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Carrier Account</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Account:UserExit:Get</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>Used for all communication to external parcel carriers. Carrier system uses this information to authenticate the shipper account.</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>Document object having the Facility Code and Carrier Code</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>Parcel account details</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Carrier Rate</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Rate</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To get rates from a unsupported carrier in base</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>Document object, the RateRequest object can be obtained as a Map using \"rateRequest\" as the key.</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>The Output Document object needs to be created from the RateResponse object.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Parcel Return Label</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Return</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To get a return label from an unsupported carrier in base</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>From the Input Document object, the ShipRequest object can be obtained as a Map using \"shipRequest\" as the key</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>The Output Document object needs to be created from the ShipResponse object</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Shipment-Close</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Close</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To close a shipment with an unsupported carrier in base</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>From the Input Document object, the CloseRequest object can be obtained as a Map using \"closeRequest\" as the key</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>The Output Document object needs to be created from the CloseResponse object</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Parcel Shipping Label</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Ship</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To get a tracking number and label from an unsupported carrier in base</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.Context context,&nbsp;com.manh.cp.parcel.request.ShipRequest shipRequest</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.Document</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Tracking</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Track</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To track a package with an unsupported carrier in base or To convert track request json document into a map using \"trackRequest\" as the key</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p><em>com.manh.cp.fw.common.Context context,&nbsp;com.manh.cp.parcel.request.TrackRequest trackRequest</em></p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.Document</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Tracking-Cancel</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:Cancel</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To cancel a tracking number from a unsupported carrier in base</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>From the Input Document object, the CancelRequest object can be obtained as a Map using \"cancelRequest\" as the key</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>The Output Document object needs to be created from the CancelResponse object.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Return Label- Pre Logic</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:PreReturn</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>To manipulate the Return request (for base carrier/custom carrier too) by updating certain fields with data needed to be appeared on the return label</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.Context context,&nbsp;com.manh.cp.parcel.request.ShipRequest shipRequest</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.parcel.request.ShipRequest shipRequest</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Shipment- Pre Logic</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:PreShip</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>Populate / Replace the attributes in parcel ship request&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.<strong>Context</strong> ,&nbsp;com.manh.cp.parcel.request.<strong>ShipRequest&nbsp;</strong></p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.parcel.request.<strong>ShipRequest</strong></p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>Pre Track User Exit</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:PreTrack</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>Modify the track request before sending the call to the carrier</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>Map (Track Request) (Refer Request Example and technical details section for more details)</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>Track Request (Refer sample JSON)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td data-colwidth=\"154\">\r\n\t\t\t<p>PostShipResponse</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"124\">\r\n\t\t\t<p>Parcel:Carrier:UserExit:PostShipResponse</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"178\">\r\n\t\t\t<p>This user exit would allow clients/project teams to map data from the carrier response to the fulfillment or package</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.fw.common.Context context,&nbsp;com.manh.cp.parcel.response.ShipResponse shipResponse</p>\r\n\t\t\t</td>\r\n\t\t\t<td data-colwidth=\"152\">\r\n\t\t\t<p>com.manh.cp.parcel.response.ShipResponse</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4>&nbsp;</h4>\r\n\r\n<h4><a name=\"services\" id=\"services\"></a>Services</h4>\r\n\r\n<p>The&nbsp;APIs listed in the following table are referenced in this document. Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 1218px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 164px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\"><span>Service</span></font></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 162px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\"><span>Component</span></font></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 284px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\"><span>Group</span></font></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 645px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\"><span>Service Endpoint</span></font></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Cancel</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">cancel</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/cancel</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Close</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">close</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/close</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Get Tracking Numbers</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">parcel-ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/packages/getTrackingNumbers</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Rate</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">rate</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/rate</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Rate by Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">rate</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/rate/fulfillment/fulfillmentId/{fulfillmentId}/organizationId/{organizationId}</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Rate by Package</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">rate</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/rate/fulfillmentId/{fulfillmentId}/package/{packageId}</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Reprint Shipping Labels</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">parcel-ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/packages/reprintShippingLabel</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Return</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/return</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Ship</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/ship</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Ship and Return</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/shipAndReturn</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Ship Packages</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/packages/ship</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Track</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Parcel</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">track</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/parcel/api/parcel/track</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Track and Ship Packages</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">parcel-ship-controller</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/packages/trackandship</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Track&nbsp;Packages</font></td>\r\n\t\t\t<td style=\"width: 159px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Fulfillment</font></td>\r\n\t\t\t<td style=\"width: 281px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">track</font></td>\r\n\t\t\t<td style=\"width: 642px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">/fulfillment/api/fulfillment/track/packages</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\">Update Package to Change Shipping Options</td>\r\n\t\t\t<td style=\"width: 159px;\">Fulfillment</td>\r\n\t\t\t<td style=\"width: 281px;\">parcel-ship-controller</td>\r\n\t\t\t<td style=\"width: 642px;\">/fulfillment/api/fulfillment/packages/changeShippingOptions</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 161px;\">List Packages For Store</td>\r\n\t\t\t<td style=\"width: 159px;\">Fulfillment</td>\r\n\t\t\t<td style=\"width: 281px;\">Packages-controller</td>\r\n\t\t\t<td style=\"width: 642px;\">fulfillment/api/fulfillment/packages/listPackagesForStore</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 65373,
  "scraped_at": "2025-08-09T22:04:35.997942",
  "content_clean": "Home ››Manhattan Active® Omni››Store››Process & Configuration Guides››Store Inventory & Fulfillment››Store Order Fulfillment››Shipping ››Shipping Process Shipping Process Shipping ProcessMask Shipping Address with specific return address:Return LabelsReturn Label RequiredReturn CenterReturn Service LevelShip PackagesUpdate Based on Carrier ResponseUpdate at Specific TimeCompleted ShipmentsTracking NumberStore Exception ManagementReprintRFID - Cross OrganizationShip to Store OrdersPullback/Transfer OrdersStore Initiated TransfersOther FunctionalityPickup Individual Packages for Ship to Store OrdersTrack packagesRateClose:ExceptionsReprint CollateUpdate Package CancelOut of the Box BehaviorEvent generation Extension Handler Event PayloadInbound Message TypeOutbound Message TypeExtension Point to Message Type MappingCustomizationExtension Handler Extension Point to Message TypeInbound Message TypeOutbound Message Type Unsupported CarrierFulfillment Outbound EventsExternal OMS Integration with Active SIMParcel Component User ExitsServices Shipping represents the final stage of the fulfillment when partnered carriers pick up packages and deliver them to their destination. Retailers typically trigger inventory updates and invoicing based on shipping events. Shipping functionality initiates the following: Requests the package tracking number and shipping/return labels from the parcel carrier Generates package shipping and return labels Updates package status to \"Shipped\" based on either a configured time or tracking information provided by the carrier Publishes a fulfillment shipping event for consumption by other components/systems to trigger inventory updates and invoicing The shipping process triggers the Fulfillment component to interact with the Parcel component in order to ship the packages. The system integrates with parcel carriers such as FedEx and UPS for shipping, rating, and tracking packages. The Parcel component exposes several services that have standardized request and response formats which serve as a single interaction point across different carriers. This enables retailers to expand from a single delivery partner to multiple partners easily. Out-of-the-box support is provided for FedEx, UPS, and Agile. Extension points are available to support other carriers. Request Tracking Number and Label Images The shipping process is initiated when a carrier tracking number is requested. Once the package is built (refer to Packing guide), the Get Tracking Numbers service of the Fulfillment component is invoked, which communicates the carrier, ship from, ship to and package information to obtain the carrier tracking number and shipping/return label. The Ship or Ship and Return services of the Parcel component then forward the request to the appropriate carriers. The account details needed for communication with the carrier server are retrieved from the facility account information by the Parcel component. The response provides a unique tracking number for the carrier which is saved in the package. The shipping/return label images are saved if needed for later reprints. Mask Shipping Address with specific return address: By default, the shipping label would contain the address of the ShipFromLocation as the 'From' Address in the label provided by the parcel carrier. Contact name and Phone number is pulled from Location Contact of type \"Shipping\". If there is a requirement to print a different address on the shipping label( instead of the actual ship from address of the store fulfilling the order), the organization's address with addressType= shippingLabel can be populated with that address. During parcel shipping, if the organization 's shipping address is populated , that address would be used for Shipping label. Please note that the actual ShipFromLocation address would still be used as the shipper address for calculating Shipping charges , delivery date calculations etc. This feature would be helpful to print the ReturnDCAddress on shipping labels if needed so that the end customer can use that for return purposes. Summary of Fulfillment and Parcel services called: Label requested Fulfillment service Parcel service Shipping label Get Tracking Numbers Ship Shipping and return labels Get Tracking Numbers Ship and Return Note: Tracking number and label images sent in the response from the carrier are persisted, additional details such as accessorial charge, total charge or base charge etc. are not persisted. In the case of direct integration with FedEx, the 34-digit Carrier Barcode that is printed on the FedEx label is also persisted. Return Labels Retailers often include preprinted return labels with the package to facilitate the returns process for customers. If the isReturnLabelRequired flag on the fulfillment is true and the returnToLocationId and return service level fields are both populated, a return label is requested for the package from the carrier. Refer to the Configuration guide for further information about the default values mentioned below. Return Label Required If the isReturnLabelRequired flag is not populated on the fulfillment after download from the Order component, it can be updated through a default configuration in Fulfillment that defines order types which should have return labels generated. Return Center The returnToLocationId field on the fulfillment can be populated in the following sequence: Fulfillment extension point - Used to populate the return center from an external system/logic, or Order component - Value bridged from the Order component, or Fulfillment default value - If the value is not populated by one of the preceding methods and isReturnLabelRequired is set to true, it is updated with a configured default value. Return Service Level The Return Service Level is not present on the Fulfillment entity, and is thus not bridged from the Order component. The field can be obtained from: Fulfillment extension point - Used to populate the service level from an external system/logic, or Fulfillment default value - If the value is not populated by the Fulfillment extension point and isReturnLabelRequired is set to true, it is updated with the configured default value. Label Images, File Conversion and Storage If thermal printing is disabled, shipping (and return, if applicable) labels are returned from the carrier as images in PNG or GIF file format (see Request Tracking Number and Label Images section) and converted to PDF format using Jasper report templates. On the other hand, when thermal printing is enabled, the labels are requested and returned by the carrier in ZPL format and retained as they are. Irrespective of whether thermal printing is enabled or not, the Get Tracking Number service is leveraged to request tracking numbers and labels from the carrier and the labels are saved, if needed, for future reprints. Refer to the Printing process guide for more details on printing. Note: When thermal printing is disabled, only the PNG and GIF file formats are supported in the carrier response. In some exceptional cases, carriers may send labels in the PDF format. If labels are sent in the PDF format, then a collated report is generated by merging the packing slip PDF with the label PDF. Note: When thermal printing is enabled, only ZPL format is supported. The collate report in such cases comprises only the packing slip and the ZPL label(s) are saved as they are. The labels and the collate report are printed / reprinted separately using the thermal and document printer respectively. Ship Packages The timing of when a fulfillment is updated to \"Shipped\" status could be used to determine when revenue is realized for the sale. Thus, the timing of this status is important. The fulfillment status is updated once all packages are updated to \"Shipped\" status. Retailers can choose to update packages to \"Shipped\" status in one of two ways. Refer to the Configuration guide for additional information. When the carrier tracking is not enabled, the entire fulfillment should be ‘Packed’ (Fulfillment Min Status = “Packed”) for the scheduler to pick it up for processing. Fulfillment with units pending to be packed, are not impacted by the scheduler execution. This is applicable for ‘Ship To Store- Merge’ and ‘Ship to Address’ fulfillments. Note: For the ship to store (Merge Leg) Orders, the default receipt type of the package will be \"Package\". A user exit has been given to set the other receipt types \"Item\" or \"Load\". The delivery type of the package is Customer Order. Update Based on Carrier Response With this method, the system updates the package to \"Shipped\" status based on package tracking responses from the carrier. The batch job scheduler sends the request for manifested packages (packages in \"Built\" status with a tracking number) at defined intervals. This request is initiated by the Track and Ship Packages service of the Fulfillment component, which routes to the Track service of the Parcel component. For customer shipments , the track and ship scheduler will pick fulfillments that are completely or partially packed. This would ensure that all packages are shipped together at the same time. If the carrier response indicates that a package is considered as in-transit on the network, Store Fulfillment updates the package to \"Shipped\" status. Otherwise, the package status remains \"Built\". Any packages that remain in \"Built\" status can then be included in the subsequent requests triggered by the job scheduler. If the track and ship scheduler runs after the package has been delivered by the carrier, carrier response would contain the status of 'Delivered'. In this case, the package status will get updated from 'Packed' to 'Shipped' in the store application. This scenario is most likely to happen in the case of same-day delivery carriers. The Status Map entity of the Parcel component maps the various carrier network statuses to Store Fulfillment. Summary of Fulfillment and Parcel services called: Fulfillment service Parcel service Track and Ship Packages Track Update at Specific Time Alternatively, packages can be updated to \"Shipped\" status purely based on a configured time, rather than with a carrier response. With this method, the retailer defines a time for the batch job scheduler to update manifested packages (packages in \"Built\" status with a tracking number) to \"Shipped\" status. With this model, there is no dependency on the response from the carrier's network. This occurs using the Ship Packages service of the Fulfillment component. Summary of Fulfillment and Parcel services called: Fulfillment service Parcel service Ship Packages N/a Shipping Updates Regardless of what method is used to update the package to shipped status, the following updates occur at that time from the Ship Packages service: Package status is updated from \"Built\" to \"Shipped\". The package shipped date is populated. In-transit inventory records can be created for packages destined to another location. This is based on configuration; refer to the Shipping configuration guide for additional information.This does not apply to packages shipped for pickup by customers at the store (Ship to Store orders.) or ship to address orders. Fulfillment line shipped quantity is updated Fulfillment line status may be updated Fulfillment minimum and maximum status may be updated Fulfillment actual shipped date may be updated Fulfillment shipping event created Completed Shipments The Completed Shipments UI lists packages that have been packed in the store throughout the day to confirm the packages that should be handed off to the carrier at the end of the day. The UI also highlights any packages which are missing shipping documents, so associates can print them. By default, the UI shows packages for the current date. A date filter is also available to select previous dates, and additional filtering is available to list packages by carrier, packages with/without a tracking number, by package status, and by shipment type (Pullback / Transfer, Store Initiated Transfer, or Customer Shipment). Filtering options are also available to look for a specific OM (Order Management) Order #, or Tracking #. If the fulfillment configuration \"Move packages after tracking with carrier\" is true, then packages in \"Packed\" status are listed, else packages in \"Packed\" and \"Shipped\" status are listed. Refer to Shipping configuration guide for additional information. The Date filter indicates the date from when the packages are packed. Currently there is no restriction to how far back the packages can be searched. If a completed shipment list needs to display a large number of records, pagination and virtual scroll are available. The List Packages For Store service is used to list completed packages. Tracking Number By default, packages without a tracking number are shown at the top of the list, in the descending order of their last updated date and time (i.e., a package with the most recent last updated timestamp is listed first), to help the store associates identify that their shipping documents need to be reprinted. They are followed by packages with a tracking number present sorted in the same sequence. Additional sorting logic is available to sort the packages in the descending or ascending order of their packed date and time. Packed date and time sorting logic doesn't segregate packages without tracking numbers from those with one. In other words, when the completed shipments are sorted based on their packed date and time, they are displayed as a single list regardless of whether they have a tracking number or not. Store Exception Management The Store Exception Management UI can be configured to display the count of packages without a tracking number so that store managers can have visibility of these issues for quick resolution. Based on permissions, the user can navigate to the Completed Shipments UI where the list of packages without a shipping label is displayed. It auto applies a filter to show the package without shipping from the last 15 days. Store associates can then reprint the shipping documents for the packages. Refer to the Store Exception Management guide for additional information, including configuration and permissions needed. Reprint Shipping documents of packages can be reprinted or packages can be updated to change carrier, service level, package type, and weight. RFID - Cross Organization Ship to Store Orders For ship to store orders, when an item's unit inventory is shipped from one organization's store to another organization's store, the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving organization's store. Pullback/Transfer Orders Retailers can pack and ship pullback/transfer orders from one organization's store to another organization's store or DC. When an item's unit inventory has been shipped from one organization's store to another organization's store, the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving organization's store. Store Initiated Transfers Retailers can pack and ship store initiated orders from one organization's store to another organization's store or DC. When an item's unit inventory has been shipped from one organization's store to another organization's store, the item's unit inventory status is updated to \"Departed,\" and a new unit inventory record is created as \"Inbound\" at the receiving organization's store. Refer to the process guide for additional information about cross-organization feature. Note: The unit inventory that is in an inbound state will be purged after 90 days as per the purge process. Other Functionality Pickup Individual Packages for Ship to Store Orders If a ship to store order involves multiple packages being sent from the same store, a configuration defines whether the customer can pickup only some of the packages in the event that the others are lost or delayed. This is achieved by sending separate fulfillment shipped outbounds for each package that the fulfilling store sends. Order Management creates pickup fulfillments based on the fulfillment shipped outbound messages. For example, assume a ship to store order is released to Store A to be shipped to Store B for customer pickup and is shipped in 3 packages. Fulfillment Line Item Units Package L1 ITEM1 2 Units PKG1 L2 ITEM2 1 Unit PKG2 L3 ITEM3 1 Unit PKG3 By sending a separate fulfillment outbound for each package, the customer can pickup one or two of the packages if the others are lost or delayed. Refer to Configuration guide for more details. Track packages The status of packages that have been manifested in the carrier network can be tracked to provide transit visibility from the shipping location to the final destination. With the provided tracking numbers, information about the specified packages such as the scan event history is returned. The tracking of multiple packages with a single request is supported. This is provided by the Track Packages service of the Fulfillment component and the Track service of the Parcel component. Summary of Fulfillment and Parcel services called: Fulfillment service Parcel service Track Packages Track Rate Rating functionality allows retailers to compare and choose a shipping service that is the best fit for their needs and budget. Estimated rates and delivery time are returned by the carrier. Rating can perform the following functions: Determine specific shipping charges and estimated delivery window Compare shipping charges for different service levels of the carrier Create a list of shipping choices to choose from The Rate by Fulfillment and Rate by Package services of the Fulfillment component, along with the Rate service of the Parcel component, request rating information. Summary of Fulfillment and Parcel services called: Fulfillment service Parcel service Rate by Fulfillment Rate Rate by Package Rate Note: Rate functionality is only available through an API and not a feature that is accessible through UI. Close: The Close service of the Parcel component initiates the final stage of processing of all FedEx package (shipment) data for the day. This includes the close list (listing currently open manifests), close action (auctioning a currently open manifest), and close get (querying the progress of the end of day processes). With information such as the specified carrier and date, it returns manifest information that meets the provided criteria. The close step is only used for FedEx shipments. Exceptions Reprint Collate Users can reprint a package collate once the tracking numbers and labels have been returned by the carrier to handle scenarios when the initial collate was lost, damaged or did not print properly. This is done by the Reprint Shipping Labels service. When thermal printing is disabled, the collate document, comprising the packing slip, shipping and return labels (if applicable), is previewed and printed as a single document using the document printer. On the other hand, when thermal printing is enabled, the collate document comprises only the packing slip and is printed using the document printer. The label(s) are separately silently printed using the configured thermal printer. Note: Currently, Manhattan Active Omni® Store Inventory & Fulfillment does not support reprinting of labels originally generated in the ZPL format (implying that thermal printing is enabled) using document printers. Update Package A store user with the appropriate permission can modify shipping options for the package and reprint the labels. Users can scan an Item, Package, or Order to find the package to reprint the shipping labels. Users can change the following shipping information during the packing and reprint process: Carrier Service level Package type Package weight If shipping labels are not generated because the shipping option for the package is unsupported by the carrier or if the existing shipping label needs to be replaced due to change in carrier, service level, package type or package weight, the store user can update the information and reprint the revised shipping labels. Same-day delivery carriers are not supported for the regular shipments. Note: When the ship via is available on the fulfillment, it is propagated to the packages on the fulfillment. Carrier and service level are derived based on that ship via. If the carrier or service level is updated via the Update Package functionality, the package's ship via is cleared since the initial ship via no longer corresponds to the new carrier/service level. If any accessorials existed for the original ship via, they will be lost. Note: Fulfillment's ship via/carrier-service level is not updated on updating the package. This difference can be used for reporting purposes on which packages are being upgraded to a different carrier- service level during shipping. Cancel If a tracking number is not used, the tracking number can be canceled/voided on the carrier network through the Cancel service of the Parcel component. This can be initiated until the package is in \"Shipped\" status. When an associate changes the shipping option(s), updated information is successfully saved on the package. Once the updated information is saved, based on the store fulfillment parameter \"Enable void label call to carrier upon update package\", a call is made to the carrier to cancel existing tracking number/ shipping label. Refer to  Shipping Configuration guide for more details. Shipping label cancelation call to the carrier is initiated when updating packages during packing of shipment, pullback & transfer and store initiated transfer order packing flows as well as reprint label flow. The cancel call will cancel shipping label only. The cancellation is not applicable for return label. The Cancel service can be called from the cancel packing flow, but requires an extension to call. Out of the Box Behavior When enabled, the out of the box behavior for the void package label event generation is to trigger a parcel cancel call to the carrier to cancel the existing label, when shipping option(s) is changed during the update package flow. Details are explained below. Event generation The \"Enable void label call to carrier upon update package\" parameter controls whether a void package label event can be created (refer to the Shipping Configuration). If this configuration is disabled, a shipping label cancelation call is not sent to the carrier to cancel the existing label. If enabled, when shipping option(s) is changed and updated package information is saved successfully, then the VoidPackageLabelEvent extension handler is checked to determine if an event should be created for the package. This extension handler defines the condition (see EntryCondition below) of when to create the event. Out of the box, this condition is set to null, meaning that an event is created for all the configured providers. Out of the box base configuration is shown below. Extension Handler API Name: {URL}/fulfillment/api/ServiceDefinition/extensionHandler { \"ExtensionHandlerId\": \"VoidPackageLabelEvent\", \"OutBoundMessageType\": { \"MessageType\": \"VoidPackageLabelEventMSGType\" }, \"RegisteredExtensionPoints\": [ { \"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\", \"EntryCondition\": null } ] } Event Payload The payload will include the provider of the old carrier code by making a call to the parcel component to retrieve this data. This field can be used to create a custom condition through the extension handler to only execute this asynchronous call for a specific provider. The rest of the payload will be used to create a ParcelCancelRequest, which will act as the payload when calling the parcel cancel API. The payload below shows what is sent in the message. { \"CarrierCode\": <carrier_code>, \"Provider\": <provider>, \"TrackingNumber\": <tracking_number>, \"ShipFromLocationId\": <ship_from_location_id> } If there is an error when trying to void the old package, an exception will be thrown in the fulfillment component, which will trigger a retry through failed messages user interface. Potential errors can occur if the old package has already been voided, if the tracking number doesn’t exist, the carrier component is not getting a response. For example, component-agile is not getting a response from Logistyx or component-agile is down, or component-parcel is down. Inbound Message Type API Name: {URL}/fulfillment/api/ServiceDefinition/inBoundMessageType/save { \"MessageType\": \"VoidPackageLabelEventMSGType\", \"NoOfConsumer\": 10, \"MinNoOfConsumer\": 1, \"MaxDesiredInstances\": 6, \"ScaleUpTimeWindow\": 10, \"ScaleDownTimeWindow\": 20, \"ServiceId\": \"VoidPackageLabel\" } Outbound Message Type API Name: {URL}/fulfillment/api/ServiceDefinition/outBoundMessageType/save { \"MessageType\": \"VoidPackageLabelEventMSGType\", \"Description\": \"Void package during changing shipping options\", \"Transactional\": true, \"PersistMessageToMsgStore\": false } Extension Point to Message Type Mapping API Name: {URL}/fulfillment/api/ServiceDefinition/extPointToMessageType/save { \"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\", \"MessageType\": \"VoidPackageLabelEventMSGType\" } Customization Extension Handler Add a new extension handler entry mentioned below for the custom profile to extensionHandler_1.json & specify entry condition if needed. For example, if you want to enable this feature for say UPS and Logistyx provider, then specify the provider name(s) in the entry condition. API Name: {URL}/fulfillment/api/ServiceDefinition/extensionHandler { \"ExtensionHandlerId\": \"VoidPackageLabelEvent\", \"OutBoundMessageType\": { \"MessageType\": \"VoidPackageLabelEventMSGType\" }, \"RegisteredExtensionPoints\": [ { \"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\", \"EntryCondition\": \"Provider == 'UPS' || == 'Agile'\" } ] } Extension Point to Message Type Add a new extension point to the message type mapping entry mentioned below to extPointToMessageType.json for the custom profile: API Name: {URL}/fulfillment/api/ServiceDefinition/extPointToMessageType/save { \"ExtensionPointId\": \"Fulfillment:Fulfillment:Event:VoidPackageLabelEvent\", \"MessageType\": \"VoidPackageLabelEventMSGType\" } Inbound Message Type Add a new inbound message type entry mentioned below to the inBoundMessageType.json for the custom profile: API Name: {URL}/fulfillment/api/ServiceDefinition/inBoundMessageType/save { \"MessageType\": \"VoidPackageLabelEventMSGType\", \"NoOfConsumer\": 10, \"MinNoOfConsumer\": 1, \"MaxDesiredInstances\": 6, \"ScaleUpTimeWindow\": 10, \"ScaleDownTimeWindow\": 20, \"ServiceId\": \"VoidPackageLabel\" } Outbound Message Type Add a new outbound message type entry as mentioned below to outBoundMessageType.json for the custom profile: API Name: {URL}/fulfillment/api/ServiceDefinition/outBoundMessageType/save { \"MessageType\": \"VoidPackageLabelEventMSGType\", \"Description\": \"Void package during changing shipping options\", \"Transactional\": true, \"PersistMessageToMsgStore\": false } Unsupported Carrier If the carrier is not supported by base, then void label extension Parcel:Carrier:UserExit:Cancel is required to be configured to send the call to the third party carrier to cancel the label as needed. Fulfillment Outbound Events Scenario Fulfillment Event Outbound Message Name Order Event Created from Fulfillment Outbound Message When the full or partial quantity of the fulfillment/fulfillment line is shipped Fulfillment/line status is changed to Partially Shipped or Shipped Fulfillment Shipped An order event is created with the type \"Ship\" External OMS Integration with Active SIM When Manhattan Active Store Inventory Management is integrated with an external Order Management System (OMS), SIF can be configured to directly send supply updates to the Inventory component since Manhattan Active Order Management is not present to send the inventory update. This applies to Pickup at Store (including Curbside pickups), Ship to Store and Same Day Delivery orders that are fulfilled by the store. This functionality should be enabled only when Active Store Inventory Management is deployed with an external OMS. Order Supply Transaction Type Supply Update Inventory Transaction Type Inventory Transaction Value (mapped to Inventory Transaction ID in the Supply Event) Ship to Address Adjustment Reduce On-Hand Supply Order Ship OrderId:FulfillmentId Ship to Store Merge Leg Adjustment Reduce On-Hand Supply Order Ship OrderId:FulfillmentId The “Ship” Store Transaction Type and its override do not come into effect when this feature is enabled. Additionally, the following relay attributes are sent as part of the supply event for Inventory Audit purposes: Order Id Order Line Id Fulfillment Id Fulfillment Line Id This functionality can be enabled for all fulfillment types via a configuration (refer to the configuration guide), or for specific fulfillment types. For example, SIF can be configured to send inventory updates only for Pullback & Transfer orders. If the functionality should only be enabled for certain fulfillment types, pass the 'isExternalOrder' property in the Fulfillment as true and leave the configuration set to false. For a given fulfillment, the logic of whether to use the Fulfillment property or the configuration is described below: If the Fulfillment isExternalOrder flag is true, it overrides whatever value is set in the configuration. If the Fulfillment isExternalOrder flag is false, the configuration is checked to determine the behavior. Parcel Component User Exits Type User Exit Function Input Output Carrier Account Parcel:Account:UserExit:Get Used for all communication to external parcel carriers. Carrier system uses this information to authenticate the shipper account. Document object having the Facility Code and Carrier Code Parcel account details Carrier Rate Parcel:Carrier:UserExit:Rate To get rates from a unsupported carrier in base Document object, the RateRequest object can be obtained as a Map using \"rateRequest\" as the key. The Output Document object needs to be created from the RateResponse object. Parcel Return Label Parcel:Carrier:UserExit:Return To get a return label from an unsupported carrier in base From the Input Document object, the ShipRequest object can be obtained as a Map using \"shipRequest\" as the key The Output Document object needs to be created from the ShipResponse object Shipment-Close Parcel:Carrier:UserExit:Close To close a shipment with an unsupported carrier in base From the Input Document object, the CloseRequest object can be obtained as a Map using \"closeRequest\" as the key The Output Document object needs to be created from the CloseResponse object Parcel Shipping Label Parcel:Carrier:UserExit:Ship To get a tracking number and label from an unsupported carrier in base com.manh.cp.fw.common.Context context, com.manh.cp.parcel.request.ShipRequest shipRequest com.manh.cp.fw.common.Document Tracking Parcel:Carrier:UserExit:Track To track a package with an unsupported carrier in base or To convert track request json document into a map using \"trackRequest\" as the key com.manh.cp.fw.common.Context context, com.manh.cp.parcel.request.TrackRequest trackRequest com.manh.cp.fw.common.Document Tracking-Cancel Parcel:Carrier:UserExit:Cancel To cancel a tracking number from a unsupported carrier in base From the Input Document object, the CancelRequest object can be obtained as a Map using \"cancelRequest\" as the key The Output Document object needs to be created from the CancelResponse object. Return Label- Pre Logic Parcel:Carrier:UserExit:PreReturn To manipulate the Return request (for base carrier/custom carrier too) by updating certain fields with data needed to be appeared on the return label com.manh.cp.fw.common.Context context, com.manh.cp.parcel.request.ShipRequest shipRequest com.manh.cp.parcel.request.ShipRequest shipRequest Shipment- Pre Logic Parcel:Carrier:UserExit:PreShip Populate / Replace the attributes in parcel ship request com.manh.cp.fw.common.Context , com.manh.cp.parcel.request.ShipRequest com.manh.cp.parcel.request.ShipRequest Pre Track User Exit Parcel:Carrier:UserExit:PreTrack Modify the track request before sending the call to the carrier Map (Track Request) (Refer Request Example and technical details section for more details) Track Request (Refer sample JSON) PostShipResponse Parcel:Carrier:UserExit:PostShipResponse This user exit would allow clients/project teams to map data from the carrier response to the fulfillment or package com.manh.cp.fw.common.Context context, com.manh.cp.parcel.response.ShipResponse shipResponse com.manh.cp.parcel.response.ShipResponse Services The APIs listed in the following table are referenced in this document. Refer to the API documentation for additional details on each service. Service Component Group Service Endpoint Cancel Parcel cancel /parcel/api/parcel/cancel Close Parcel close /parcel/api/parcel/close Get Tracking Numbers Fulfillment parcel-ship-controller /fulfillment/api/fulfillment/packages/getTrackingNumbers Rate Parcel rate /parcel/api/parcel/rate Rate by Fulfillment Fulfillment rate /fulfillment/api/fulfillment/rate/fulfillment/fulfillmentId/{fulfillmentId}/organizationId/{organizationId} Rate by Package Fulfillment rate /fulfillment/api/fulfillment/rate/fulfillmentId/{fulfillmentId}/package/{packageId} Reprint Shipping Labels Fulfillment parcel-ship-controller /fulfillment/api/fulfillment/packages/reprintShippingLabel Return Parcel ship-controller /parcel/api/parcel/return Ship Parcel ship-controller /parcel/api/parcel/ship Ship and Return Parcel ship-controller /parcel/api/parcel/shipAndReturn Ship Packages Fulfillment ship-controller /fulfillment/api/fulfillment/packages/ship Track Parcel track /parcel/api/parcel/track Track and Ship Packages Fulfillment parcel-ship-controller /fulfillment/api/fulfillment/packages/trackandship Track Packages Fulfillment track /fulfillment/api/fulfillment/track/packages Update Package to Change Shipping Options Fulfillment parcel-ship-controller /fulfillment/api/fulfillment/packages/changeShippingOptions List Packages For Store Fulfillment Packages-controller fulfillment/api/fulfillment/packages/listPackagesForStore"
}