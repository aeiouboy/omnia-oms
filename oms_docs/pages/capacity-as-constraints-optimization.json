{
  "id": "2602500",
  "permalink": "capacity-as-constraints-optimization",
  "title": "Capacity as a Constraint & Optimization",
  "type": "topic",
  "level": 5,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Enterprise Inventory/Capacity Management/Capacity as a Constraint & Optimization",
  "raw_item": {
    "id": "2602500",
    "text": "Capacity as a Constraint & Optimization",
    "title": "Capacity as a Constraint & Optimization",
    "permalink": "capacity-as-constraints-optimization",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "129585",
    "parent": "f;129585",
    "created_date": "1594797159",
    "modified_date": "1684135616",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "6"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158716\" href=\"/enterprise-inventory\" class=\"breadcrumb-links\">Enterprise Inventory</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2163641\" href=\"/capacity-management\" class=\"breadcrumb-links\">Capacity Management</a></li><li> <span>››</span>Capacity as a Constraint & Optimization</li></ul>  \t\r\n\t\t<h2>Capacity as a Constraint &amp; Optimization</h2>\r\n\r\n<p></p>\r\n\r\n<a href=\"/managing-high-utilization-locations\" hqid=\"2602498\">Previous</a> | <a href=\"/caapacity_rest_apis-user-exits\" hqid=\"2602501\">Next</a>\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/capacity-as-constraints-optimization$overview\">Overview</a></li><li><a href=\"/capacity-as-constraints-optimization$capacity-as-constraints\">Capacity as Constraints</a></li><li><a href=\"/capacity-as-constraints-optimization$capacity-as-optimization-factor\">Capacity as Optimization Factor</a></li><li><a href=\"/capacity-as-constraints-optimization$implementation-flavors\">Implementation Flavors</a></li><li><a href=\"/capacity-as-constraints-optimization$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"overview\" id=\"overview\"></a>Overview</h3>\r\n\r\n<p>Capacity is used both as a promising constraint and an optimization factor by the optimization engine. Refer to the following key attributes which plays a role in constraint and optimization.</p>\r\n\r\n<ul>\r\n\t<li><strong>Max Capacity</strong> - Max capacity is used as a daily max, and no more orders are allowed in the store for that day/shift once it reaches the maximum capacity. The View configuration helps to take the store offline when full. When the View configuration says to keep the store online when full then the stores can go over max cap. For example,&nbsp;MaxBacklog = 10 orders; MaxBacklog is the total orders (or units or lines) that can be allocated to a store at a given point in time. This means that when 10 orders are allocated to the store, the&nbsp;ANF will move on to allocate orders to a different store, in order to load balance across stores.&nbsp;</li>\r\n\t<li><strong>Max Backlog</strong> - Max backlog doesn&rsquo;t stop the orders from releasing to the stores/location. It&rsquo;s used more for balancing when configured as an optimization factor. Max backlog is defined as the queue depth at a given time for the stores, but it can go past that if there are no other options. For example, MaxCapacity = 10 orders; MaxCapacity is the total orders (or units or lines) that can be allocated to a store for an entire shift. This means that when 10 orders are allocated to the store, then all inventory at the store is considered unavailable in ATC until the next shift begins.</li>\r\n\t<li><strong>Location Capacity Full</strong> - If the location capacity (defined at the order, order line or unit level) during the shift reaches the configured maximum capacity, the location is marked as full. The location is excluded from promising as the view does not publish any availability from the location.</li>\r\n</ul>\r\n\r\n<p>At no point, neither the max backlog or max capacity stops order directly from allocating or releasing the order to the store, but you can indirectly do that by removing the store from the view when the max capacity is reached.</p>\r\n\r\n<h3><a name=\"capacity-as-constraints\" id=\"capacity-as-constraints\"></a>Capacity as Constraints</h3>\r\n\r\n<p>Promising considers three constraints: scheduling, inventory and capacity. &nbsp;If either of the following are true, the location is excluded from promising due to capacity:</p>\r\n\r\n<p><strong>Capacity Fulfillment Hours not Matching </strong>- The location&#39;s capacity is not defined for the time of the day when the allocation is attempted. If the location is not available to fulfill orders at the time when promising is attempted, the location is excluded from promising. For example, if the capacity of a location is defined from 10:00 AM to 8:00 PM for a given day, the location is not considered for an order being allocated at 9:00 PM.</p>\r\n\r\n<p><strong>Examples:</strong></p>\r\n\r\n<p><strong>Always Unlimited Capacity:&nbsp;</strong>For a location to always have unlimited capacity (i.e, a distribution center), no capacity definition or capacity override record should exist for the location for any day of the week or for any specific date. For such locations:</p>\r\n\r\n<ul>\r\n\t<li>Capacity is never considered as a constraint by the promising engine.</li>\r\n\t<li>Promising always assumes the capacity utilization percentage as zero.</li>\r\n</ul>\r\n\r\n<p><strong>Unlimited Capacity only for a Day of the Week or Specific Date :&nbsp;</strong>On certain occasions (i.e., peak periods), a retailer may wish to grant unlimited capacity to a location that normally has a capacity constraint definition. For example, a business may normally define a max capacity for a DC, but as an exception wishes to exclude capacity constraints for a specific date. In such cases, an unlimited capacity override can be defined for the date.</p>\r\n\r\n<p>Example: &nbsp;Unlimited capacity override for a specific date</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 597px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Location Id&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\">Date&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 78px;\">&nbsp;End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 89px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 105px;\">&nbsp;Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>DC 1&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td>12/21/2020</td>\r\n\t\t\t<td style=\"width: 69px;\">07.30&nbsp;</td>\r\n\t\t\t<td style=\"width: 75px;\">22.00</td>\r\n\t\t\t<td style=\"width: 87px;\">-</td>\r\n\t\t\t<td style=\"width: 102px;\">-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Similarly, if a location has unlimited capacity on a particular day of the week, the retailer can define unlimited capacity for the day.</p>\r\n\r\n<p><strong>Example</strong>: Unlimited capacity for a day of the week:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 604px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 90px;\">Location Id</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 58px;\">Day&nbsp; &nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 81px;\">End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 98px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 124px;\">Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 88px;\">DC 1&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 56px;\">Monday&nbsp;</td>\r\n\t\t\t<td style=\"width: 70px;\">10.00</td>\r\n\t\t\t<td style=\"width: 79px;\">20.00</td>\r\n\t\t\t<td style=\"width: 96px;\">-</td>\r\n\t\t\t<td style=\"width: 122px;\">-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>In both cases:</p>\r\n\r\n<ul>\r\n\t<li>The location has unlimited capacity for consuming e-commerce orders since max Capacity is not defined.</li>\r\n\t<li>The capacity fulfillment hours defined for the location still act as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours.</li>\r\n\t<li>Promising always assumes the capacity utilization percentage for the location to be zero.</li>\r\n</ul>\r\n\r\n<p><strong>Unlimited Capacity with Backlog:&nbsp;</strong>Even if the location has unlimited capacity, the retailer may still choose to maintain a backlog for fulfilling e-commerce orders. This allows promising to continue to allocate to high-throughput stores, regardless of how many orders the store has already processed during the shift. &nbsp;</p>\r\n\r\n<p><strong>Example</strong>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 604px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 90px;\">Location Id</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 58px;\">Day&nbsp; &nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 81px;\">End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 98px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 124px;\">Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 88px;\">DC 1&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 56px;\">Monday&nbsp;</td>\r\n\t\t\t<td style=\"width: 70px;\">07.30</td>\r\n\t\t\t<td style=\"width: 79px;\">22.00</td>\r\n\t\t\t<td style=\"width: 96px;\">50</td>\r\n\t\t\t<td style=\"width: 122px;\">-</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>Locations have unlimited capacity since max Capacity is not specified.</li>\r\n\t<li>The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours.</li>\r\n\t<li>The location utilization percentage is calculated as a percentage of the current backlog to the max backlog of the location. This percentage helps the promising engine balance workload across locations.&nbsp;</li>\r\n</ul>\r\n\r\n<p><strong>Capacity Constraint with no Backlog:&nbsp;</strong>Retailers can choose to only define the maximum capacity of a location if they wish to cap locations at a certain number of orders but are not concerned with backlog metrics. In such cases, the max backlog of the location is not defined. For example, a retailer can define the maximum number of orders the store is willing to accept in a shift, but not be concerned with the number of unfulfilled orders as long as it does not exceed the maximum capacity defined.</p>\r\n\r\n<p><strong>Example</strong>:&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 604px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 90px;\">Location Id</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 58px;\">Day&nbsp; &nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 81px;\">End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 98px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 124px;\">Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 88px;\">DC 1&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 56px;\">Monday&nbsp;</td>\r\n\t\t\t<td style=\"width: 70px;\">07.30</td>\r\n\t\t\t<td style=\"width: 79px;\">22.00</td>\r\n\t\t\t<td style=\"width: 96px;\">-</td>\r\n\t\t\t<td style=\"width: 122px;\">50</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>The location has a maximum capacity defined for accepting orders during the shift.</li>\r\n\t<li>The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours.</li>\r\n\t<li>Since the max backlog is not defined, the location utilization percentage is considered as zero.&nbsp;</li>\r\n</ul>\r\n\r\n<p><strong>Capacity Constraint Equal to Backlog</strong>: Retailers can set the max backlog to be the same as the max capacity when they wish to define capacity utilization percentages based on the max capacity.</p>\r\n\r\n<p>&nbsp;<strong>Example</strong>:&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 604px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 90px;\">Location Id</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 58px;\">Day&nbsp; &nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 81px;\">End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 98px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 124px;\">Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 88px;\">Store A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 56px;\">Monday&nbsp;</td>\r\n\t\t\t<td style=\"width: 70px;\">07.30</td>\r\n\t\t\t<td style=\"width: 79px;\">22.00</td>\r\n\t\t\t<td style=\"width: 96px;\">50</td>\r\n\t\t\t<td style=\"width: 122px;\">50</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>When the number of orders reserved against Store A reaches 50, the store capacity utilization percentage reaches 100% and the store is marked as capacity full.</li>\r\n\t<li>The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours.</li>\r\n\t<li>The location utilization percentage is calculated as a percentage of the current backlog to the max backlog of the location. This percentage helps promising engine balance workload across locations.&nbsp;</li>\r\n</ul>\r\n\r\n<p><strong>Unavailable/No Capacity for Day of Week or Specific Date</strong>:&nbsp;If the location is not available for promising on a day of the week/shift, the capacity should not be defined. For example, if a location is not available for reservations on Sundays, no capacity record should exist for that day.</p>\r\n\r\n<p class=\"info\"><strong>Note</strong>: If no capacity definition or overrides exist for a location on any day/date, the location is considered to have unlimited capacity. However, if at least one capacity definition or capacity override record exists, the location is considered to have zero capacity on any days where a record is not defined. &nbsp;For more information, see the always unlimited capacity section.&nbsp;<br />\r\nHowever, if the capacity is not available at a location on a specific date that typically has capacity, the capacity for that date should be overridden with zero. For example, if a store is not available for order fulfillment on Sunday, 12/24/2020 but normally has capacity on a Sunday, the capacity for the date should be overridden with zero.&nbsp;</p>\r\n\r\n<p>&nbsp;<strong>Example</strong>:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 604px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 90px;\">Location Id</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 58px;\">Date&nbsp; &nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 72px;\">Start Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 81px;\">End Time</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 98px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 124px;\">Max Capacity</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 88px;\">Store A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 56px;\">12/24/2020</td>\r\n\t\t\t<td style=\"width: 70px;\">07.30</td>\r\n\t\t\t<td style=\"width: 79px;\">14.00</td>\r\n\t\t\t<td style=\"width: 96px;\">0</td>\r\n\t\t\t<td style=\"width: 122px;\">0</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>Using the above example, the location cannot accept any e-commerce orders for this shift. When the shift starts, the location is marked as capacity full and ATC view(s) excludes the location. Even if the view does not exclude the location (i.e., if the view does not subscribe to capacity), the promising process excludes the location as it will not find any available capacity for promising.</p>\r\n\r\n<div class=\"tip\"><strong>Note</strong>: If a location is not available for one or more days, one can also configure exclusion rules to exclude the location from a view.</div>\r\n\r\n<ul>\r\n\t<li>The location does not have any remaining capacity to fulfill e-commerce orders. When current capacity utilization for the location reaches Max capacity then location is marked as Full. If the ATC view is configured to remove location(s) with full capacity, then it will not be considered for Allocation.</li>\r\n</ul>\r\n\r\n<p>Consider an e-commerce ATC view was configured to remove locations when they reached max capacity. Let&#39;s say there were a total of 3 stores, for the sake of an example. Before go-live, the store picture was as follows:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 824px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 105px;\">Current Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 87px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 160px;\">&nbsp;Current Capacity Utilized&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 116px;\">&nbsp;Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 208px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 103px;\">0</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">0</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B</td>\r\n\t\t\t<td style=\"width: 103px;\">0</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">0</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C</td>\r\n\t\t\t<td style=\"width: 103px;\">0</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">0</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When orders began flowing in, the utilized capacity of each store quickly rose until it reached 10:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 824px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 105px;\">Current Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 87px;\">Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 160px;\">&nbsp;Current Capacity Utilized&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 116px;\">&nbsp;Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 208px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 103px;\">10</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">10</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B</td>\r\n\t\t\t<td style=\"width: 103px;\">10</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">10</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C</td>\r\n\t\t\t<td style=\"width: 103px;\">10</td>\r\n\t\t\t<td style=\"width: 85px;\">10</td>\r\n\t\t\t<td style=\"width: 158px;\">10</td>\r\n\t\t\t<td style=\"width: 114px;\">10</td>\r\n\t\t\t<td style=\"width: 206px;\">No</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>At this point, because the max capacity was reached for each store, the store locations were updated to CapacityFull = true in the inventory component. This makes all inventory at stores A, B, and C unavailable. These stores with full capacity can be considered for allocation based on Allocation overrides. Refer to <a href=\"https://omni.helpdocsonline.com/order-promising-process\">Promising Guide </a>for more details.</p>\r\n\r\n<h3><a name=\"capacity-as-optimization-factor\" id=\"capacity-as-optimization-factor\"></a>Capacity as Optimization Factor</h3>\r\n\r\n<p>Capacity also acts as one of the optimization factors to determine the best location for reservation. Based on the current backlog at each location, promising determines the most appropriate location in order to prevent locations from being over or under-utilized. Capacity utilization percentage data is fed to the promising engine which uses that data to balance the workload by giving higher preference to locations with lower utilization. The capacity percentage of a location is computed as the percentage of the current backlog of the maximum backlog defined for the location. Refer to the&nbsp;<a href=\"https://omni.helpdocsonline.com/order-promising-process\">Order Promising guide</a> for additional information.</p>\r\n\r\n<p>Capacity Percentage = Current Backlog / Max Backlog * 100</p>\r\n\r\n<p><strong>Examples</strong><br />\r\nConsider a configuration which uses MaxBacklog = 10 and MaxCapacity = 50. With this configuration, only 10 orders can be allocated to each store at any point in time, however, as the stores ship those units, more orders can be allocated to the store throughout the shift, until the maximum of 50 is reached. If ANF is configured to perform optimization based on capacity only then ANF will try to give preference to other stores where max back log is not reached.</p>\r\n\r\n<ul>\r\n\t<li>When 10 orders are allocated against store A (assuming it is the highest performing store, for example), then the capacity utilization picture is updated as&nbsp;below.</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>At this point, ANF attempts to balance the workload across stores and moves onto allocating to the next-highest performing store: store B.</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>Next 10 orders are allocated to store B, which reaches its max backlog. ANF then begins allocating against the next store which has available backlog: store C.</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">10</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>At this point, all 3 stores have reached their max backlog, but if more orders drop, then they can still allocate against stores A, B, and C if there are no other options, since max backlog is not a hard constraint, but is only used for load balancing. For instance, there could be 8 more units allocated to each of the 3 stores:&nbsp;</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">18</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">18</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">18</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>Next, stores B and C each ship 12 orders, then their current backlog counts are reduced to 6. At this point, when new orders come in, ANF will allocate them against stores B and C, as they are below their max backlog.&nbsp;</li>\r\n</ul>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">18</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">6</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">6</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">18</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>This process repeats until the current capacity utilized reaches the max of 50. If all 3 stores have shipped 50 orders by 3:00 PM but the shift doesn&#39;t end until 7:00 PM, then inventory at stores A, B, and C is removed from the ATC picture at 3:00 PM. Until the next shift starts (the next day, for instance), inventory from these stores is not considered available for sale.</li>\r\n</ul>\r\n\r\n<p>Once the next shift starts and capacity is available again, this is not considered as an inventory rise for purposes of re-allocation. This means that if orders are currently backordered because the location(s) with inventory have no available capacity, the orders will not automatically re-trigger allocation once capacity is added for the next shift. To accomplish this, an agent should be configured to re-allocate backordered quantity on a regular basis.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 241px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">A</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">50</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">B</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">50</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">C</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">50</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">No</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;When the next shift starts, then capacity is reset, and inventory is considered available again:</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 241px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">A</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">B</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 24px;\">C</td>\r\n\t\t\t<td style=\"width: 24px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">10</td>\r\n\t\t\t<td style=\"width: 26px;\">0</td>\r\n\t\t\t<td style=\"width: 22px;\">50</td>\r\n\t\t\t<td style=\"width: 30px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>With this configuration, the business is able to manage capacity without losing sales.&nbsp;</p>\r\n\r\n<p><strong>Capacity Reset on Shift Change (scheduler run)</strong><br />\r\nConsider the below details before shift change</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">50</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">50</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">10</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">50</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">No</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>When the next shift starts, then capacity is reset and inventory is considered available again&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 801px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Store&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 102px;\">Current Backlog&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 80px;\">&nbsp;Max Backlog</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 151px;\">Current Capacity Utilized</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 122px;\">Max Capacity</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 204px;\">Store Inventory available in ATC?</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>A&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>B&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>C&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 100px;\">0</td>\r\n\t\t\t<td style=\"width: 78px;\">10</td>\r\n\t\t\t<td style=\"width: 149px;\">0</td>\r\n\t\t\t<td style=\"width: 119px;\">50</td>\r\n\t\t\t<td style=\"width: 201px;\">Yes</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p class=\"info\">Once the next shift starts and capacity is available again, this is not considered as an inventory rise for purposes of re-allocation. This means that if orders are currently backordered because the location(s) with inventory have no available capacity, the orders will not automatically re-trigger allocation once capacity is added for the next shift. To accomplish this, an agent should be configured to re-allocate backordered quantity on a regular basis.&nbsp;</p>\r\n\r\n<p class=\"info\">Consider a multi-tier organization set up: Location and Inventory are maintained at the parent organization level, and orders are at the child level. Capacity is defined at the inventory location level (parent). When orders are allocated, capacity utilization (at the parent org) is updated accordingly. This is implicitly taken care as ownership is shared (property name: IsOwnershipShared) between the organizations for this profile purpose (inv::locationconfiguration).&nbsp;</p>\r\n\r\n<h3><a name=\"implementation-flavors\" id=\"implementation-flavors\"></a>Implementation Flavors</h3>\r\n\r\n<p>NA</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/release-capacity\" hqid=\"2601846\">Releasing Capacity</a></li><li><a href=\"/how-capacity-works\" hqid=\"2601761\">How Capacity Works</a></li><li><a href=\"/managing-high-utilization-locations\" hqid=\"2602498\">Managing High Utilization Locations</a></li><li><a href=\"/rolling-capacity-to-next-day/shift\" hqid=\"2601935\">Rolling Capacity to the Next Day/Shift</a></li><li><a href=\"/caapacity_rest_apis-user-exits\" hqid=\"2602501\">Rest APIs & User Exits</a></li><li><a href=\"/capacity-management-overview\" hqid=\"2601752\">Overview</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 36090,
  "scraped_at": "2025-08-09T21:54:36.624461",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Enterprise Inventory››Capacity Management ››Capacity as a Constraint & Optimization Capacity as a Constraint & Optimization Previous | Next OverviewCapacity as ConstraintsCapacity as Optimization FactorImplementation FlavorsRelated Articles Overview Capacity is used both as a promising constraint and an optimization factor by the optimization engine. Refer to the following key attributes which plays a role in constraint and optimization. Max Capacity - Max capacity is used as a daily max, and no more orders are allowed in the store for that day/shift once it reaches the maximum capacity. The View configuration helps to take the store offline when full. When the View configuration says to keep the store online when full then the stores can go over max cap. For example, MaxBacklog = 10 orders; MaxBacklog is the total orders (or units or lines) that can be allocated to a store at a given point in time. This means that when 10 orders are allocated to the store, the ANF will move on to allocate orders to a different store, in order to load balance across stores. Max Backlog - Max backlog doesn’t stop the orders from releasing to the stores/location. It’s used more for balancing when configured as an optimization factor. Max backlog is defined as the queue depth at a given time for the stores, but it can go past that if there are no other options. For example, MaxCapacity = 10 orders; MaxCapacity is the total orders (or units or lines) that can be allocated to a store for an entire shift. This means that when 10 orders are allocated to the store, then all inventory at the store is considered unavailable in ATC until the next shift begins. Location Capacity Full - If the location capacity (defined at the order, order line or unit level) during the shift reaches the configured maximum capacity, the location is marked as full. The location is excluded from promising as the view does not publish any availability from the location. At no point, neither the max backlog or max capacity stops order directly from allocating or releasing the order to the store, but you can indirectly do that by removing the store from the view when the max capacity is reached. Capacity as Constraints Promising considers three constraints: scheduling, inventory and capacity.  If either of the following are true, the location is excluded from promising due to capacity: Capacity Fulfillment Hours not Matching - The location's capacity is not defined for the time of the day when the allocation is attempted. If the location is not available to fulfill orders at the time when promising is attempted, the location is excluded from promising. For example, if the capacity of a location is defined from 10:00 AM to 8:00 PM for a given day, the location is not considered for an order being allocated at 9:00 PM. Examples: Always Unlimited Capacity: For a location to always have unlimited capacity (i.e, a distribution center), no capacity definition or capacity override record should exist for the location for any day of the week or for any specific date. For such locations: Capacity is never considered as a constraint by the promising engine. Promising always assumes the capacity utilization percentage as zero. Unlimited Capacity only for a Day of the Week or Specific Date : On certain occasions (i.e., peak periods), a retailer may wish to grant unlimited capacity to a location that normally has a capacity constraint definition. For example, a business may normally define a max capacity for a DC, but as an exception wishes to exclude capacity constraints for a specific date. In such cases, an unlimited capacity override can be defined for the date. Example:  Unlimited capacity override for a specific date Location Id Date Start Time End Time Max Backlog Max Capacity DC 1 12/21/2020 07.30 22.00 - - Similarly, if a location has unlimited capacity on a particular day of the week, the retailer can define unlimited capacity for the day. Example: Unlimited capacity for a day of the week: Location Id Day Start Time End Time Max Backlog Max Capacity DC 1 Monday 10.00 20.00 - - In both cases: The location has unlimited capacity for consuming e-commerce orders since max Capacity is not defined. The capacity fulfillment hours defined for the location still act as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours. Promising always assumes the capacity utilization percentage for the location to be zero. Unlimited Capacity with Backlog: Even if the location has unlimited capacity, the retailer may still choose to maintain a backlog for fulfilling e-commerce orders. This allows promising to continue to allocate to high-throughput stores, regardless of how many orders the store has already processed during the shift. Example: Location Id Day Start Time End Time Max Backlog Max Capacity DC 1 Monday 07.30 22.00 50 - Locations have unlimited capacity since max Capacity is not specified. The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours. The location utilization percentage is calculated as a percentage of the current backlog to the max backlog of the location. This percentage helps the promising engine balance workload across locations. Capacity Constraint with no Backlog: Retailers can choose to only define the maximum capacity of a location if they wish to cap locations at a certain number of orders but are not concerned with backlog metrics. In such cases, the max backlog of the location is not defined. For example, a retailer can define the maximum number of orders the store is willing to accept in a shift, but not be concerned with the number of unfulfilled orders as long as it does not exceed the maximum capacity defined. Example: Location Id Day Start Time End Time Max Backlog Max Capacity DC 1 Monday 07.30 22.00 - 50 The location has a maximum capacity defined for accepting orders during the shift. The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours. Since the max backlog is not defined, the location utilization percentage is considered as zero. Capacity Constraint Equal to Backlog: Retailers can set the max backlog to be the same as the max capacity when they wish to define capacity utilization percentages based on the max capacity. Example: Location Id Day Start Time End Time Max Backlog Max Capacity Store A Monday 07.30 22.00 50 50 When the number of orders reserved against Store A reaches 50, the store capacity utilization percentage reaches 100% and the store is marked as capacity full. The capacity fulfillment hours defined for the location acts as a constraint for promising. The location is not considered for reservation for any order outside of the defined hours. The location utilization percentage is calculated as a percentage of the current backlog to the max backlog of the location. This percentage helps promising engine balance workload across locations. Unavailable/No Capacity for Day of Week or Specific Date: If the location is not available for promising on a day of the week/shift, the capacity should not be defined. For example, if a location is not available for reservations on Sundays, no capacity record should exist for that day. Note: If no capacity definition or overrides exist for a location on any day/date, the location is considered to have unlimited capacity. However, if at least one capacity definition or capacity override record exists, the location is considered to have zero capacity on any days where a record is not defined.  For more information, see the always unlimited capacity section. However, if the capacity is not available at a location on a specific date that typically has capacity, the capacity for that date should be overridden with zero. For example, if a store is not available for order fulfillment on Sunday, 12/24/2020 but normally has capacity on a Sunday, the capacity for the date should be overridden with zero. Example: Location Id Date Start Time End Time Max Backlog Max Capacity Store A 12/24/2020 07.30 14.00 0 0 Using the above example, the location cannot accept any e-commerce orders for this shift. When the shift starts, the location is marked as capacity full and ATC view(s) excludes the location. Even if the view does not exclude the location (i.e., if the view does not subscribe to capacity), the promising process excludes the location as it will not find any available capacity for promising. Note: If a location is not available for one or more days, one can also configure exclusion rules to exclude the location from a view. The location does not have any remaining capacity to fulfill e-commerce orders. When current capacity utilization for the location reaches Max capacity then location is marked as Full. If the ATC view is configured to remove location(s) with full capacity, then it will not be considered for Allocation. Consider an e-commerce ATC view was configured to remove locations when they reached max capacity. Let's say there were a total of 3 stores, for the sake of an example. Before go-live, the store picture was as follows: Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 0 10 0 10 Yes B 0 10 0 10 Yes C 0 10 0 10 Yes When orders began flowing in, the utilized capacity of each store quickly rose until it reached 10: Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 10 10 10 10 No B 10 10 10 10 No C 10 10 10 10 No At this point, because the max capacity was reached for each store, the store locations were updated to CapacityFull = true in the inventory component. This makes all inventory at stores A, B, and C unavailable. These stores with full capacity can be considered for allocation based on Allocation overrides. Refer to Promising Guide for more details. Capacity as Optimization Factor Capacity also acts as one of the optimization factors to determine the best location for reservation. Based on the current backlog at each location, promising determines the most appropriate location in order to prevent locations from being over or under-utilized. Capacity utilization percentage data is fed to the promising engine which uses that data to balance the workload by giving higher preference to locations with lower utilization. The capacity percentage of a location is computed as the percentage of the current backlog of the maximum backlog defined for the location. Refer to the Order Promising guide for additional information. Capacity Percentage = Current Backlog / Max Backlog * 100 Examples Consider a configuration which uses MaxBacklog = 10 and MaxCapacity = 50. With this configuration, only 10 orders can be allocated to each store at any point in time, however, as the stores ship those units, more orders can be allocated to the store throughout the shift, until the maximum of 50 is reached. If ANF is configured to perform optimization based on capacity only then ANF will try to give preference to other stores where max back log is not reached. When 10 orders are allocated against store A (assuming it is the highest performing store, for example), then the capacity utilization picture is updated as below. Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 10 10 10 50 Yes B 0 10 0 50 Yes C 0 10 0 50 Yes At this point, ANF attempts to balance the workload across stores and moves onto allocating to the next-highest performing store: store B. Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 10 10 10 50 Yes B 10 10 10 50 Yes C 0 10 0 50 Yes Next 10 orders are allocated to store B, which reaches its max backlog. ANF then begins allocating against the next store which has available backlog: store C. Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 10 10 10 50 Yes B 10 10 10 50 Yes C 10 10 10 50 Yes At this point, all 3 stores have reached their max backlog, but if more orders drop, then they can still allocate against stores A, B, and C if there are no other options, since max backlog is not a hard constraint, but is only used for load balancing. For instance, there could be 8 more units allocated to each of the 3 stores: Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 18 10 18 50 Yes B 18 10 18 50 Yes C 18 10 18 50 Yes Next, stores B and C each ship 12 orders, then their current backlog counts are reduced to 6. At this point, when new orders come in, ANF will allocate them against stores B and C, as they are below their max backlog. Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 18 10 18 50 Yes B 6 10 18 50 Yes C 6 10 18 50 Yes This process repeats until the current capacity utilized reaches the max of 50. If all 3 stores have shipped 50 orders by 3:00 PM but the shift doesn't end until 7:00 PM, then inventory at stores A, B, and C is removed from the ATC picture at 3:00 PM. Until the next shift starts (the next day, for instance), inventory from these stores is not considered available for sale. Once the next shift starts and capacity is available again, this is not considered as an inventory rise for purposes of re-allocation. This means that if orders are currently backordered because the location(s) with inventory have no available capacity, the orders will not automatically re-trigger allocation once capacity is added for the next shift. To accomplish this, an agent should be configured to re-allocate backordered quantity on a regular basis. A 0 10 50 50 No B 0 10 50 50 No C 0 10 50 50 No When the next shift starts, then capacity is reset, and inventory is considered available again: A 0 10 0 50 Yes B 0 10 0 50 Yes C 0 10 0 50 Yes With this configuration, the business is able to manage capacity without losing sales. Capacity Reset on Shift Change (scheduler run) Consider the below details before shift change Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 10 10 50 50 No B 10 10 50 50 No C 10 10 50 50 No When the next shift starts, then capacity is reset and inventory is considered available again Store Current Backlog Max Backlog Current Capacity Utilized Max Capacity Store Inventory available in ATC? A 0 10 0 50 Yes B 0 10 0 50 Yes C 0 10 0 50 Yes Once the next shift starts and capacity is available again, this is not considered as an inventory rise for purposes of re-allocation. This means that if orders are currently backordered because the location(s) with inventory have no available capacity, the orders will not automatically re-trigger allocation once capacity is added for the next shift. To accomplish this, an agent should be configured to re-allocate backordered quantity on a regular basis. Consider a multi-tier organization set up: Location and Inventory are maintained at the parent organization level, and orders are at the child level. Capacity is defined at the inventory location level (parent). When orders are allocated, capacity utilization (at the parent org) is updated accordingly. This is implicitly taken care as ownership is shared (property name: IsOwnershipShared) between the organizations for this profile purpose (inv::locationconfiguration). Implementation Flavors NA Related Articles Releasing CapacityHow Capacity WorksManaging High Utilization LocationsRolling Capacity to the Next Day/ShiftRest APIs & User ExitsOverview"
}