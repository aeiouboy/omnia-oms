{
  "id": "2607998",
  "permalink": "transactional-texts",
  "title": "Transactional Texts",
  "type": "topic",
  "level": 4,
  "path": "Manhattan Active® Omni/Order Management/Process & Configuration Guides/Customer Service/Transactional Texts",
  "raw_item": {
    "id": "2607998",
    "text": "Transactional Texts",
    "title": "Transactional Texts",
    "permalink": "transactional-texts",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "129583",
    "parent": "f;129583",
    "created_date": "1596023359",
    "modified_date": "1749102343",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "6"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158393\" href=\"/order-management\" class=\"breadcrumb-links\">Order Management</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158394\" href=\"/process-configuration-guides\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158820\" href=\"/customer-service\" class=\"breadcrumb-links\">Customer Service</a></li><li> <span>››</span>Transactional Texts</li></ul>  \t\r\n\t\t<h2>Transactional Texts</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/transactional-texts$overview\">Overview</a></li><li><a href=\"/transactional-texts$supported-text-messages-licensing-requirements\">Supported Text Messages & Licensing Requirements</a></li><li><a href=\"/transactional-texts$how-are-texts-nbsp-generated\">How are Texts&nbsp;Generated</a></li><li><a href=\"/transactional-texts$how-to-enable-texts\">How to Enable Texts</a><ul><li><a href=\"/transactional-texts$enable-the-text-message-for-your-use-case\">Enable the Text Message for Your Use Case</a></li></ul></li><li><a href=\"/transactional-texts$third-party-text-message-service-provider-account-configurations\">Third Party Text Message Service Provider Account Configurations</a><ul><li><a href=\"/transactional-texts$short-code-for-transactional-text\">Short Code for Transactional Text</a></li><li><a href=\"/transactional-texts$configure-the-third-party-url-shortening-nbsp-account\">Configure the Third Party URL Shortening&nbsp;Account</a></li><li><a href=\"/transactional-texts$configure-alternative-selling-channels\">Configure Alternative Selling Channels</a></li><li><a href=\"/transactional-texts$text-profile-purposes\">Text Profile Purposes</a></li></ul></li><li><a href=\"/transactional-texts$mapping-requirements\">Mapping Requirements</a><ul><li><a href=\"/transactional-texts$customer-opt-in-status\">Customer Opt-In Status</a></li></ul></li><li><a href=\"/transactional-texts$active®-omni-text-templates\">Active® Omni Text Templates</a><ul><li><a href=\"/transactional-texts$order-confirmation\">Order Confirmation</a></li><li><a href=\"/transactional-texts$ready-for-pickup\">Ready for Pickup</a></li><li><a href=\"/transactional-texts$pickup-reminder\">Pickup Reminder</a></li><li><a href=\"/transactional-texts$final-pickup-reminder\">Final Pickup Reminder</a></li><li><a href=\"/transactional-texts$shipment-confirmation\">Shipment Confirmation</a></li><li><a href=\"/transactional-texts$pickup-nbsp-confirmation\">Pickup&nbsp;Confirmation</a></li><li><a href=\"/transactional-texts$delivery-confirmation\">Delivery Confirmation</a></li><li><a href=\"/transactional-texts$delivery-delay\">Delivery Delay</a></li><li><a href=\"/transactional-texts$out-for-delivery-confirmation\">Out for Delivery Confirmation</a></li><li><a href=\"/transactional-texts$delivery-attempts\">Delivery Attempts</a></li><li><a href=\"/transactional-texts$ship-it-instead-confirmation\">Ship it Instead Confirmation</a></li><li><a href=\"/transactional-texts$ship-it-instead-due-to-store-shorts\">Ship It instead Due to Store Shorts</a></li><li><a href=\"/transactional-texts$order-cancellation\">Order Cancellation</a></li><li><a href=\"/transactional-texts$return-received\">Return Received</a></li><li><a href=\"/transactional-texts$return-confirmation\">Return Confirmation</a></li><li><a href=\"/transactional-texts$pay-by-link-nbsp-text-and-nbsp-reminder-sample-nbsp\">Pay by Link&nbsp;Text and&nbsp;Reminder Sample&nbsp;</a></li><li><a href=\"/transactional-texts$refund-by-link-nbsp-text-sample-nbsp\">Refund by Link&nbsp;Text Sample&nbsp;</a></li><li><a href=\"/transactional-texts$prevent-shipments-on-payment-failure-sample\">Prevent Shipments on Payment Failure Sample</a></li></ul></li><li><a href=\"/transactional-texts$customizing-text-messages\">Customizing Text Messages</a><ul><li><a href=\"/transactional-texts$text-user-exits\">Text User Exits</a></li><li><a href=\"/transactional-texts$how-to-add-a-custom-text-message\">How to add a Custom Text Message</a></li><li><a href=\"/transactional-texts$how-to-customize-text-templates\">How to Customize Text Templates</a></li><li><a href=\"/transactional-texts$how-to-modify-text-message-templates\">How to Modify Text Message Templates</a></li></ul></li><li><a href=\"/transactional-texts$feature-scope\">Feature Scope</a></li><li><a href=\"/transactional-texts$message-types-and-queues\">Message Types and Queues</a></li><li><a href=\"/transactional-texts$implementation-flavor\">Implementation Flavor</a><ul><li><a href=\"/transactional-texts$how-to-integrate-manhattan-nbsp-active-nbsp-omni-with-a-twilio-account-to-send-digital-self-service-links-without-using-a-bitly-account\">How to integrate Manhattan&nbsp;Active&nbsp;Omni with a Twilio account to send Digital Self-Service links without using a Bitly account</a></li></ul></li><li><a href=\"/transactional-texts$troubleshooting\">Troubleshooting</a><ul><li><a href=\"/transactional-texts$text-messages-are-not-delivered-nbsp\">Text messages are not delivered&nbsp;</a></li><li><a href=\"/transactional-texts$one-of-the-order-process-order-event-is-failing\">One of the Order Process/Order Event is failing</a></li><li><a href=\"/transactional-texts$order-confirmation-text-messages-are-not-getting-delivered\">Order confirmation text messages are not getting delivered</a></li><li><a href=\"/transactional-texts$text-message-outbounds-are-not-getting-published-from-order-nbsp-nbsp-nbsp\">Text Message outbounds are not getting published from order&nbsp;&nbsp; &nbsp;</a></li><li><a href=\"/transactional-texts$text-message-outbounds-are-getting-published-from-order-but-don-t-see-any-entries-for-the-same-in-text-component-logs-nbsp\">Text Message outbounds are getting published from order but don't see any entries for the same in Text Component Logs&nbsp;</a></li><li><a href=\"/transactional-texts$i-don-t-see-short-urls-in-the-text-message-nbsp\">I don't see short URLs in the text message&nbsp;</a></li><li><a href=\"/transactional-texts$short-urls-in-the-text-message-are-not-functional-nbsp-nbsp\">Short URLs in the Text Message are not functional&nbsp;&nbsp;</a></li><li><a href=\"/transactional-texts$pickup-reminder-texts-are-not-getting-generated\">Pickup Reminder Texts are not getting generated</a></li><li><a href=\"/transactional-texts$invalid-data-for-the-field-businesschannelid\">Invalid data for the field BusinessChannelId</a></li><li><a href=\"/transactional-texts$how-to-test-delivery-tracking-notifications-without-real-tracking-numbers\">How to test Delivery Tracking Notifications without real tracking numbers</a></li><li><a href=\"/transactional-texts$optin-value-is-not-copied-from-the-customer-order-to-return-order-there-by-preventing-text-communication-for-return-order-configured-notifications\">OptIn value is not copied from the customer order to return order there by preventing text communication for return order configured notifications</a></li></ul></li><li><a href=\"/transactional-texts$related-articles\">Related Articles</a></li></ul></div>\r\n\r\n<h3><a name=\"overview\" id=\"overview\"></a>Overview</h3>\r\n\r\n<p>Throughout the order life cycle, customers need the latest information about their orders. One way of providing these real-time updates is via transactional text messages which are triggered on key milestones such as order confirmation, shipment or when items are ready for pickup.</p>\r\n\r\n<p>As the central repository for orders, Manhattan Active® Omni provides capabilities to trigger transactional texts at such key milestones. When an event such as a shipment occurs, Active&nbsp;Omni publishes an outbound message which can be consumed and used to generate a&nbsp;text. There are a few options for generating texts:</p>\r\n\r\n<ul>\r\n\t<li>Active&nbsp;Omni publishes an outbound message including the formatted text body (JSON) and includes any relevant short URLs linking to Digital Self-Service (e.g. the shipment tracking URL). A third party SMS service provider delivers the text to the customer and owns the infrastructure side - delivery tracking, retries, read receipts, error handling, and analytics.</li>\r\n\t<li>Active&nbsp;Omni publishes an outbound order message (JSON) which does not include the text body, and a third party SMS service provider takes this input message, constructs and formats the text, and delivers to the customer. The SMS service provider owns the infrastructure side - delivery tracking, retries, read receipts, error handling, and analytics.</li>\r\n</ul>\r\n\r\n<h3><a name=\"supported-text-messages-licensing-requirements\" id=\"supported-text-messages-licensing-requirements\"></a>Supported Text Messages & Licensing Requirements</h3>\r\n\r\n<p>The following table lists the text messages provided out of the box and indicates which capabilities require an Enterprise Order Management (EOM) subscription. In general, the licensing requirements follow the pattern of the underlying entities that need to be in place to enable these capabilities.</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-1\" class=\"toggle-content\"><span class=\"toggle-title\">Text Messages and Licensing Requirements</span></a></p><div id=\"tg-1\"><table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Use Case&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Requires EOM License</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Order Confirmation&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Shipment Confirmation</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Delivery Confirmation</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Ready for Pickup (BOPIS)</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Pickup Reminder (BOPIS)</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Final Pickup Reminder (BOPIS)</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Out for Delivery Confirmation</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Ship To Instead</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Delivery Delay</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Delivery Attempt</td>\r\n\t\t\t<td>No</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n</div></div></p>\r\n\r\n<h3><a name=\"how-are-texts-nbsp-generated\" id=\"how-are-texts-nbsp-generated\"></a>How are Texts&nbsp;Generated</h3>\r\n\r\n<p>When key order events occur, the order component publishes two types of messages: Publish Order and Text Messages. The outbound Text Message is specially catered to outbound texts, as opposed to the Publish Order message, which includes all details of an order and can be more challenging for text systems to parse. For instance, the Text Message contains only the information needed to include in the text (e.g. total shipped quantity), while the Publish Order message contains the entire order.</p>\r\n\r\n<p>When the Publish Order or Text Message is published from the order component, a queue in the text component takes the input JSON, selects a matching Text Template, and forms a&nbsp;Text Message. This Text Message is then interfaced to a third party SMS service provider which delivers the actual text to the customer. Or, a custom queue takes the input JSON from either the order or text component and processes it further, depending on which implementation option is used.</p>\r\n\r\n<p>The below diagrams illustrate how&nbsp;texts are generated:</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-2\" class=\"toggle-content\"><span class=\"toggle-title\">Order Confirmation Text Message</span></a></p><div id=\"tg-2\"><p><img class=\"ckimgrsz\" height=\"855\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/8550/ckfinder/images/image(22).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzg1NTAvY2tmaW5kZXIvaW1hZ2VzL2ltYWdlKDIyKS5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE1OTF9fX1dfQ__&Signature=BzPLUctmzE~XO8rEJ1bkIWbLZ9wgEADaPu8z7YG7~NZtKHwFJL0gTJ04hKo2x7BEMJX8DGFwyML4IJNKPp0UyHnkwIrG8J-8OVMM3F0QCi0~-vUJCAzlICSqyxCEHJwV2EZnPDdfHeIrUukVQeCCpJpOLsq-Y~G-NaR-XZn6xRHFho5Due88HSAcdEG0VJeWWb-2Np-GRDJevRxHi3MME5pe1b0zF-bygZ7cCw-B3hd3rEWUn8xpH9mns3qjd2prK-xcj5A-Ho9jaDVNsIBkm1CAGX-8vVc0S3Au9~UsW5D1yiOnE6xwAwn3WxtrhVZX-c4tgZzQZIQuf6fWA8EL~Q__&Key-Pair-Id=K2TK3EG287XSFC\" width=\"871\" /></p>\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-3\" class=\"toggle-content\"><span class=\"toggle-title\">Ready For Pickup Text Message</span></a></p><div id=\"tg-3\"><p><img height=\"1279\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/8550/ckfinder/images/image(23).png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzg1NTAvY2tmaW5kZXIvaW1hZ2VzL2ltYWdlKDIzKS5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE1OTF9fX1dfQ__&Signature=aY-dugPsy~n6DG-9wtBMBXAK2eKL2aLaX47liVauWQ-yepGxCvkcPuzNV4trXisScTrafl76k34iJfLZ~639zaKcaNKz~omwcNvzexWs7FZHpserc1jWeQIfE-cRM8rf4FedNQbtZPEcMJbU1gpK7Kz0WkVmpt~d5RrSbif4lIEQqO2BjW6oO~shLK2yNsk-1fUfpx5K-FXwHhKUFCRzPJ4q9vINnIH80AF2GlHGPomltBVX1QEVB8dNn-k1ycmAt6tGQXuTKF7V58lIqINi2IaHRLmM3kDSwWcmJtumswrkSUoX4JDpR7VSPuNof2bXSGGQLybthYBUToJS46c85g__&Key-Pair-Id=K2TK3EG287XSFC\" width=\"872\" /></p>\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-4\" class=\"toggle-content\"><span class=\"toggle-title\">Shipment Confirmation Text Message</span></a></p><div id=\"tg-4\"><p><img align=\"left\" alt=\"\" border=\"2\" class=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/3999/ShipmentConfirmationTextFlow.jpg?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1LzM5OTkvU2hpcG1lbnRDb25maXJtYXRpb25UZXh0Rmxvdy5qcGciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE1OTF9fX1dfQ__&Signature=gmu7bsAQNErO-6lYDWbAWDl4IX6IfavVQ0Kn0zWyOCG54vInt49QFX8UOYHsHswsnM4utKataZu3bZ74EXB~pEVa~82JjiSpzQkqfGlgbPwB-z~vu9Z3SZMMsck1ACoHOaOlECHOZKzrFN9Fq1HG7V9Zr8C-YPAcWpBiIlnBJwjSLLXpNEUacZqr46ZCHr-Ckvqe5d4ry1c8uCLuO1oYBlqcP2SVIXIrYS7-RuT5pD19HaJHrIKQQztcfpMARmzDjFao~XJ6asWjfUe10ndxPaZm0PDtGOrAC3hqL~QMrqlEskITwO-wRm1a0B6dLzWthRFqrJvtlHy~uRyHI5zlrA__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"margin-right:5px;padding:5px;\" /></p>\r\n\r\n\r\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-5\" class=\"toggle-content\"><span class=\"toggle-title\">Delivery Confirmation Text Process</span></a></p><div id=\"tg-5\"><p><img align=\"left\" alt=\"\" border=\"2\" class=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/9623/ShipmentConfirmationTextFlow%20(1).jpg?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1Lzk2MjMvU2hpcG1lbnRDb25maXJtYXRpb25UZXh0RmxvdyUyMCgxKS5qcGciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE1OTF9fX1dfQ__&Signature=mY30QFj4aRRuSDDYNE-RvJCAvIFR4LCCBTefh~KEtDFclO2A0uJGaO4lrnFmgccPkySmPTSVsDQZAKvPgYbTuQ3JKgu1zDY2Or5jO0jPhbZHMFBColejZdYV1~NzPMxk6HaHKQb9lynNK1-mI3Ka1EMLUWjX3CeatjZfRf5JXaP8ZG7b~9YenLrD4IWP6WO1cTXMTQ3T46qt3qM9aMINuzbSuC6ZK1Wij8H6vxNwU1IrfjX6OvQ3n9wCg0zFzZKOUp9FnsLE9gmvXQcRbIKvZ8ZO7Zsc9puqtBN9ipTcVNHK29k9MOt~Ow0WISiciaKv0NZuQEVeBSkgGEBLg0qrJw__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"margin-right:5px;padding:5px;\" /></p>\r\n\r\n\r\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-6\" class=\"toggle-content\"><span class=\"toggle-title\">Out for Delivery Text Process</span></a></p><div id=\"tg-6\"><p><img align=\"left\" alt=\"\" border=\"2\" class=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/7119/OFD_Texts.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1LzcxMTkvT0ZEX1RleHRzLnBuZyIsIkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTc1NDc1MTU5MX19fV19&Signature=XXm68m4PBGDjhr8UVmWqn16yzHqnpHb2KxvH91t-C-PXKYC2WNtoAVew~RZcI-1xNNxQfPpkFFYVrxuNER40xcGU54NwhdRMH~UMHLRhvZT~DSgXCN8eV1kKLvx3O41fa4HHh65VLOzuwNkAalwL7D0rvALTPcY2P4T~X8BNWnCJy-yTBUWDpe8CneO2lHNmN9sg6mVaT23kT3nAaVaDrD4zAQigzC9awTUt~RaBrbb3zROGIn7-OKQYIHEpRECqwmbCRLs7J3fyynV1JFuWb~hKsKFMBtUaqMRtE4K9GrKmkci02ogUKZ~WPguImbil2iteuILez1amgEJzhLZHpg__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"margin-right:5px;padding:5px;\" /></p>\r\n\r\n\r\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-7\" class=\"toggle-content\"><span class=\"toggle-title\">Pickup Reminder Process Flow</span></a></p><div id=\"tg-7\"><p><img align=\"left\" alt=\"\" border=\"2\" class=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/qu/1302/PickupReminder-ProcessFlow.jpg?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL3F1LzEzMDIvUGlja3VwUmVtaW5kZXItUHJvY2Vzc0Zsb3cuanBnIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzUxNTkxfX19XX0_&Signature=huWMg1d64dVgi3yKrkskLmQEZjhP6PNtiIGlZf3lwwHQ~KfHG~67zCXSk6M~NJTrjTpDGpYmtQ96bWUfjf7NnROxSIsdUj803fGbQtZYCpwgQIGRl4pjfFT9dAErxu-0qxPeSy6f6OFAMj7WIjZy08ECtTIzZ2C1EWM~akbK5d0pMa5uhQql2SqOBb193c~J0Wrenj6o0XDqYLRGgt81DRXZucW3rDfB9t~aTSSPjPfyYjdMLE8LcEp1UdaV9v4jeZaMdc5EaJvTh5qonE1kkrVrrMwkHqFuPZ~MzLqTSaTGvVfq6MaIxZHBODwPEb4bPMwPxPxXsD~ve1VXcC3dIw__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"margin-right:5px;padding:5px;\" /></p>\r\n\r\n\r\n</div></div></p>\r\n\r\n<h3><a name=\"how-to-enable-texts\" id=\"how-to-enable-texts\"></a>How to Enable Texts</h3>\r\n\r\n<p>1: Login with system admin</p>\r\n\r\n<p>2: Add an outbound message type in the order component</p>\r\n\r\n<p><code>POST /order/api/ServiceDefinition/outBoundMessageType/save<br>\r\n{<br>\r\n&nbsp; &nbsp; \"MessageType\": \"TextMessageServiceMSGType\",<br>\r\n&nbsp; &nbsp; \"Transactional\": true,<br>\r\n&nbsp; &nbsp; \"PersistMessageToMsgStore\": false,<br>\r\n&nbsp; &nbsp; \"OutBoundQueues\": {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; \"QueueName\": \"queue.sendText\"<br>\r\n&nbsp; &nbsp; }<br>\r\n}</code></p>\r\n\r\n<p data-renderer-start-pos=\"216\">3. Create Inbound Message to receive the outbound message created in step 1.</p>\r\n\r\n<p data-renderer-start-pos=\"979\">POST: {{url}}/text/api/ServiceDefinition/inBoundMessageType/save</p>\r\n\r\n<div class=\"computer_code\"><code>{<br>\r\n&nbsp;\"MessageType\":\"TextMessageServiceMSGType\",<br>\r\n&nbsp;\"NoOfConsumer\":10,<br>\r\n&nbsp;\"Idempotent\":true,<br>\r\n&nbsp;\"MinNoOfConsumer\":1,<br>\r\n&nbsp;\"MaxNoOfConsumer\":6,<br>\r\n&nbsp;\"MaxDesiredInstances\":6,<br>\r\n&nbsp;\"ScaleUpTimeWindow\":10,<br>\r\n&nbsp;\"ScaleDownTimeWindow\":20,<br>\r\n&nbsp;\"Description\":\"Listener associated with this messageType will send the text to end-user.\",<br>\r\n&nbsp;\"ServiceId\":\"TextService\",<br>\r\n&nbsp;\"InBoundQueues\":{<br>\r\n&nbsp;\"QueueName\":\"queue.SendTextEvent\"<br>\r\n&nbsp;}<br>\r\n}</code></div>\r\n\r\n<p>Step 4: Add an extension point to message type mapping in the order component</p>\r\n\r\n<p><code>POST /order/api/ServiceDefinition/extPointToMessageType/save<br>\r\n{<br>\r\n&nbsp; &nbsp; \"ExtensionPointId\": \"Order:Order:Event:PublishText\",<br>\r\n&nbsp; &nbsp; \"MessageType\": \"TextMessageServiceMSGType\"<br>\r\n}</code></p>\r\n\r\n<p>Step 5: Clear the extension point cache</p>\r\n\r\n<p><code>DELETE /order/api/framework/cache/clearCache/ExtensionPoint::DomainEntity::system</code></p>\r\n\r\n<p>Step 6: Enable the 'Text Message' service, so that outbound messages are triggered on the relevant events. Refer&nbsp;<a hqid=\"2607998\" href=\"/transactional-texts$TextConfigWizard\">Enable the Text Message for Your Use Case</a> for more details.</p>\r\n\r\n<div class=\"info\"><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-8\" class=\"toggle-content\"><span class=\"toggle-title\">Helpful tools for Text configuration via API:</span></a></p><div id=\"tg-8\"><p>POST&nbsp;{{url}}/order/api/order/orderConfig/save</p>\n\n<p>&nbsp;</p>\n\n<p>How to enable order confirmation text&nbsp;message in order config via API</p>\n\n<p>{<br />\n&nbsp; &quot;ModTypeConfig&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;ModType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;ModTypeId&quot;: &quot;Order::Confirmed&quot;<br />\n&nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &quot;Status&quot;: &quot;1000&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;ConfigTextMessage&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: &quot;OrderConfirmation&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; ]<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;OrderConfigId&quot;: &quot;EcommConfig&quot;<br />\n}</p>\n\n<p>&nbsp;</p>\n\n<p>How to enable ready for pickup text&nbsp;message in order config via API</p>\n\n<p>{<br />\n&nbsp; &quot;ModTypeConfig&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;ModType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;ModTypeId&quot;: &quot;QuantityDetail::QuantityStatus::Increase&quot;<br />\n&nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &quot;Status&quot;: &quot;3600&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;ConfigTextMessage&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: &quot;ReadyForPickup&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; ]<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;OrderConfigId&quot;: &quot;EcommConfig&quot;<br />\n}</p>\n\n<p>&nbsp;</p>\n\n<p>How to enable shipment confirmation&nbsp;text&nbsp;message in order config via API</p>\n\n<p>{<br />\n&nbsp; &quot;ModTypeConfig&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;ModType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;ModTypeId&quot;: &quot;QuantityDetail::QuantityStatus::Increase&quot;<br />\n&nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &quot;Status&quot;: &quot;7000&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;ConfigTextMessage&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageId&quot;: &quot;ShipmentConfirmation&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; ]<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;OrderConfigId&quot;: &quot;EcommConfig&quot;<br />\n}</p>\n</div></div></div>\r\n\r\n<p>Step 7: If you're using a third party SMS Service Provider to take the input Text Message or Publish Order message and form text messages, then configure the required text message formation in the third party system and skip to step 8.&nbsp;</p>\r\n\r\n<p>Step 8: If using the component message to form text message, then ensure the below profile purposes are synced to the appropriate organizations. For example, if text templates will vary by country, then each country-level organization (e.g. Sophias-US and Sophias-MX) should have the profiles synced at this level.</p>\r\n\r\n<ul>\r\n\t<li>txt::processDefinition</li>\r\n\t<li>txt::messaging</li>\r\n\t<li>txt::txtConfig</li>\r\n</ul>\r\n\r\n<p>We have text templates available out of the box already with sample Text Message Body including links to the Self-Service UIs in form of Short URLs.</p>\r\n\r\n<p><strong>Note</strong>: Be sure to login as system admin, if your text profiles are owned by system. Otherwise, log in at the level where your text templates are managed.</p>\r\n\r\n<ul>\r\n\t<li>First, get the existing template to have as a starting point\r\n\t<ul>\r\n\t\t<li>GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='&lt;TemplateMsg&gt;'\"</li>\r\n\t\t<li>Example: GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='CurbsidePickup'\"</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>Get the contents of the \"MessageBody\" tag and copy to your clipboard</li>\r\n\t<li>Modify the contents of \"MessageBody\" tag as required&nbsp;</li>\r\n\t<li>Save the Template with modified \"MessageBody\" with the updated json in the body for the below mentioned API\r\n\t<ul>\r\n\t\t<li>POST {{url}}/text/api/text/textMsgTemplate/save</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>Step 9: Now you're ready to test!</p>\r\n\r\n<ul>\r\n\t<li>Confirm and then ship an order, and you should get two text messages, one for order confirmation and another for order shipment confirmation.</li>\r\n\t<li>To test the ready for pickup text, confirm and pick and order, and you should receive a&nbsp;text.</li>\r\n\t<li>If you're not seeing any texts, verify if you have performed above steps properly and try again.</li>\r\n</ul>\r\n\r\n<h4><a name=\"enable-the-text-message-for-your-use-case\" id=\"enable-the-text-message-for-your-use-case\"></a><a id=\"TextConfigWizard\" name=\"TextConfigWizard\"></a>Enable the Text Message for Your Use Case</h4>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:800px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\"><strong>Text Message</strong></th>\r\n\t\t\t<th scope=\"col\"><strong>How to Configure</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Order Confirmation</th>\r\n\t\t\t<td>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Order radio button &gt; Enable 'Publish Text' for the 'Confirm Order' row</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Shipment Confirmation</th>\r\n\t\t\t<td>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Quantity radio button &gt; In the Publish Text column for Fulfilled status, select Text Message 'ShipmentConfirmation'</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Pickup Confirmation</th>\r\n\t\t\t<td>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Quantity radio button &gt; In the Publish Text column for Fulfilled status, select Text Message 'PickupConfirmation'</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Out for Delivery</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Order radio button &gt; Enable \"Publish Text\" for the \"Out for Delivery\" row &gt; In the Publish Text column select \"Out for Delivery Notification\" option.&nbsp;<strong>Note</strong>:&nbsp;Order Config has to be synced to view the \"Out for Delivery\" row.</p>\r\n\r\n\t\t\t<p>Refer <a href=\"https://omni.helpdocsonline.com/deliverytracking$process-tracking-response-carrier\">here</a> for more details on how the carrier response is processed for Delivered.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Delivery Delay</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Order radio button in Modification rules and enable Publish Text for \"Delivery Delay\" row.</p>\r\n\r\n\t\t\t<p>Note : Order Config has to be synced in order to view the \"Delivery Delay\" row in UI.</p>\r\n\r\n\t\t\t<p>Refer <a href=\"https://omni.helpdocsonline.com/deliverytracking$process-tracking-response-carrier\">here</a> for more details on how the carrier response is processed for Delivered.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Delivery Attempts</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Order radio button in Modification rules and enable Publish Text for \"Delivery Attempts\" row.</p>\r\n\r\n\t\t\t<p>Note : Order Config has to be synced in order to view the \"Delivery Attempts\" row in UI.</p>\r\n\r\n\t\t\t<p>Refer <a href=\"https://omni.helpdocsonline.com/deliverytracking$process-tracking-response-carrier\">here</a> for more details on how the carrier response is processed for Delivered.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Ready for Pickup</th>\r\n\t\t\t<td>Navigate to Order Configuration UI &gt; Modification Rules &gt; Select the Quantity radio button &gt; Enable 'Text Message 'ReadyForPickup' for Picked status&nbsp;</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Pickup Reminder/Final Pickup Reminder</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Enable \"Ready for Pickup\" message, then add Order Line Milestone Monitoring Rules for&nbsp;Milestone Definition Id:\"OrderLine::Milestone::ReadyForPickup\",&nbsp;Description\": \"Order line is Ready For PickUp\" for the Event.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Order Cancellation</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules&nbsp;</p>\r\n\r\n\t\t\t<p>Select the Order radio button &gt; Enable \"Publish Text\" for the \"Cancellation confirmation for Item(s) cancelled\" row &gt; In the Publish Text column select \"Cancel Order\" option.&nbsp;</p>\r\n\r\n\t\t\t<p>Select the Order line radio button &gt; Enable \"Publish Text\" for the Customer Initiated Cancel Line\", \"System Initiated Cancel Line' and System Initiated Decrease Quantity row &gt; In the Publish Text column select \"Cancellation confirmation for Item(s) cancelled\".</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Carrier Scanned</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules&nbsp;</p>\r\n\r\n\t\t\t<p>Select the Quantity radio button and select Text Message 'Return Carrier Scanned' for Carrier Scanned Quantity changes.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"row\">Charge Back</th>\r\n\t\t\t<td>\r\n\t\t\t<p>Navigate to Order Configuration UI &gt; Modification Rules&nbsp;</p>\r\n\r\n\t\t\t<p>Select the Order radio button and select Text Message 'Return Charge Back Invoice\" for the&nbsp;Add Chargeback row.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>This configuration triggers the 'Text Message' JSONs to be published outbound from the order component when relevant events occur.&nbsp;If any of the above text messages are&nbsp;selected for any other mod type or status other than the respective mod type mentioned above, the text&nbsp;will not work (but no error will be thrown).</p>\r\n\r\n<p>If using a third party text provider to take the input Text Message or Publish Order message and form text messages, configure the required text message formation in the third party system.</p>\r\n\r\n<h3><a name=\"third-party-text-message-service-provider-account-configurations\" id=\"third-party-text-message-service-provider-account-configurations\"></a>Third Party Text Message Service Provider Account Configurations</h3>\r\n\r\n<p>Manhattan's Active Omni's transactional text messages requires integration with a third party text message service provider to send SMS text messages generated for various transactional &nbsp;text message service configured in the application.</p>\r\n\r\n<p>Out of the box Manhattan's Active Omni supports integration with Twilio as certified text message service provider.&nbsp;</p>\r\n\r\n<p>Refer to&nbsp;<a href=\"https://omni.helpdocsonline.com/storecustomerengagement-configuration$text-message-configuration\">store customer engagement configuration - text-message-configuration</a>&nbsp;instructions for configuring third party text message service providers.</p>\r\n\r\n<p>In addition to the above configuration - the below mentioned property has to be configured with a common phone number for sending order confirmation text messages.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 900px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\"><strong>Property Name&nbsp;&nbsp;</strong> &nbsp;</th>\r\n\t\t\t<th scope=\"col\"><strong>Example</strong>&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 453px;\"><strong>Description&nbsp;&nbsp; &nbsp;</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 47px;\"><strong>Mandatory</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 57px;\"><strong>Component</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 186px;\"><strong>Path</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>order.sms.from.phone&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td>14092481501&nbsp;</td>\r\n\t\t\t<td style=\"width: 451px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li style=\"text-align: justify;\">Phone number provided by the third party text message provider for sending Order Confirmation text messages.&nbsp;</li>\r\n\t\t\t\t<li style=\"text-align: justify;\">If&nbsp;each organization has a different phone number, configure this parameter with organization Id.&nbsp;For example:&nbsp; order.sms.from.phone.<em><strong>sophias-us. </strong></em>The general parameter (without organization)&nbsp;is not required if phone numbers are configured for each organization.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 44px;\">Yes</td>\r\n\t\t\t<td style=\"width: 54px;\">Order</td>\r\n\t\t\t<td style=\"width: 183px;\">\r\n\t\t\t<p>CONFIG/COM-MANH-CP-ORDER/</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p style=\"text-align: justify;\">preferOrgOverLocation</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"text-align: justify;\">\r\n\t\t\t<p>True / False</p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 451px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li style=\"text-align: justify;\">For text messages other than order confirmation, the From Phone Number has to be configured at every Location -&gt; Detail -&gt; Phone.&nbsp;</li>\r\n\t\t\t\t<li style=\"text-align: justify;\">If you want to use the phone number configured in the above property for all the transactional text messages, rather than configuring them on each of the Locations - set this property -&nbsp;&nbsp;preferOrgOverLocation to true in KV Store. By default, it will be considered as false.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 44px;\">No</td>\r\n\t\t\t<td style=\"width: 54px;\">Order</td>\r\n\t\t\t<td style=\"width: 183px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4 data-test-id=\"title-text\" data-testid=\"title-text\" id=\"title-text\"><a name=\"short-code-for-transactional-text\" id=\"short-code-for-transactional-text\"></a>Short Code for Transactional Text</h4>\r\n\r\n<p style=\"text-align: justify;\">Most of the SMS providers have started providing Short Code's (also called short numbers, Common Short Code, or CSC) messaging commonly used to send business text messages and marketing campaigns to a user's mobile device. A short code is a specialized five to six-digit phone number used in one-way SMS and MMS messaging. Currently, order text messages do not support using Short Code’s for sending transactional text messages. This change will support using Short Code’s for From Phone Number instead of using the standard 10 digit long phone numbers for sending order transactional text messages.</p>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"770\">Only one Short Code can be configured for all the transactional text messages generated from order and retailer will not be able to configure and use separate / different short codes for each location.</div>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"975\">By nature, short codes can be used only for one-way text messaging and cannot be used for interactive text messaging.</div>\r\n\r\n<p data-renderer-start-pos=\"1116\">Configure the below-mentioned KV store property for configuring Short Code for all the transactional text messages</p>\r\n\r\n<table data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t</colgroup>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1222\"><strong data-renderer-mark=\"true\">Property Name&nbsp;&nbsp;</strong> &nbsp;</p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1243\"><strong data-renderer-mark=\"true\">Example</strong>&nbsp;&nbsp; &nbsp;</p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1258\"><strong data-renderer-mark=\"true\">Description&nbsp;&nbsp; &nbsp;</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1277\"><strong data-renderer-mark=\"true\">Mandatory</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1290\"><strong data-renderer-mark=\"true\">Component</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1303\"><strong data-renderer-mark=\"true\">Path</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1313\">order.sms.from.shortCode&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1351\">140921&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<ul data-indent-level=\"1\">\r\n\t\t\t\t<li>\r\n\t\t\t\t<p data-renderer-start-pos=\"1364\">The short Code&nbsp;as provided by the third party text message provider for sending text messages.&nbsp;</p>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t<p data-renderer-start-pos=\"1456\">If&nbsp;each organization has a different short code, configure this parameter with organization Id.&nbsp;For example:&nbsp; order.sms.from.phone.<em data-renderer-mark=\"true\"><strong data-renderer-mark=\"true\">sophias-us. </strong></em>The general parameter (without organization)&nbsp;is not required if sort codes are configured for each organization.</p>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1717\">Yes</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1724\">Order</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"113.33\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"1733\">CONFIG/COM-MANH-CP-ORDER/</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"1765\">If order.sms.from.shortCode&nbsp; is populated, the system will consider that this configuration will override all other configurations and use the SHort Code populated in this property as From Phone Number for all the transactional text messages generated irrespective of any other configurations like preferOrgOverLocation or phone number configured for the locations/stored at Location -&gt; Detail -&gt; Phone</div>\r\n\r\n<div class=\"warning\" data-renderer-start-pos=\"2170\">While publishing the text message outbound from order populate - isFromPhoneShortCode = true</div>\r\n\r\n<p>Given below are some examples of how&nbsp;order.sms.from.phone is derived by the system depending on various configurations.</p>\r\n\r\n<table data-number-column=\"false\">\r\n\t<colgroup>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t\t<col>\r\n\t</colgroup>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2269\"><strong data-renderer-mark=\"true\">Type</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2277\"><strong data-renderer-mark=\"true\">Location Phone</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2295\"><strong data-renderer-mark=\"true\">order.sms.from.phone</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2319\"><strong data-renderer-mark=\"true\">order.sms.from.phone.&lt;profileId&gt;</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2355\"><strong data-renderer-mark=\"true\">order.from.phone.preferOrgOverLocation</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2397\"><strong data-renderer-mark=\"true\">order.sms.from.shortCode</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2425\"><strong data-renderer-mark=\"true\">order.sms.from.shortCode.&lt;profileId&gt;</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t\t<th aria-sort=\"descending\" colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2465\"><strong data-renderer-mark=\"true\">FromPhone derived</strong></p>\r\n\r\n\t\t\t<figure aria-hidden=\"true\">\r\n\t\t\t<figure>&nbsp;</figure>\r\n\t\t\t</figure>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2488\">Order Confirmation</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2510\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2524\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2538\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2542\">false</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2551\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2555\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2559\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2575\">All except Order Confirm</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2603\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2617\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2631\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2635\">false</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2644\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2648\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2652\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2668\">Any</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2675\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2689\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2703\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2707\">false</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2716\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2720\">12345</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2729\">12345</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2740\">Any</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2747\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2761\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2765\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2779\">true</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2787\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2791\">12345</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2800\">12345</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2811\">Any</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2818\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2832\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2846\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2860\">true</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2868\">12345</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2877\">67891</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2886\">67891</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2897\">Any</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2904\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2918\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2932\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2946\">true</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2954\">12345</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2963\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2967\">12345</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2978\">Any</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2985\">8888888888</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"2999\">9999999999</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3013\">9111111111</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3027\">true</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3035\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3039\">&nbsp;</p>\r\n\t\t\t</td>\r\n\t\t\t<td colorname=\"\" colspan=\"1\" data-colwidth=\"85\" rowspan=\"1\">\r\n\t\t\t<p data-renderer-start-pos=\"3043\">9111111111</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h4><a name=\"configure-the-third-party-url-shortening-nbsp-account\" id=\"configure-the-third-party-url-shortening-nbsp-account\"></a>Configure the Third Party URL Shortening&nbsp;Account</h4>\r\n\r\n<p>Manhattan&nbsp;Active® Omni's transactional text messages include links to Digital Self-Service pages. These URLs are shortened for text messages via integration with a third party URL shortening service.&nbsp;Out of the box, Manhattan's Active® Omni supports integration with Bitly as certified Custom URL Shortener.&nbsp;.</p>\r\n\r\n<ol>\r\n\t<li>Enable the <strong>Shorten Self-Service URL</strong>&nbsp;check box on the <strong>Order Configuration UI </strong>&gt;&nbsp;<strong>General</strong> tab. This can be enabled only if Publish Order, Publish Order Line, or Publish Text is enabled in the modification rules.</li>\r\n\t<li>Configure the URLs that are required to be shortened for each text message type by navigating to the Text Message Shortening Configuration UI.&nbsp;If a text message ID and URL combination does not exist in the menu, it can be added through the configuration. Text message IDs can be found using the API GET {url}/order/api/order/textMessage and text message URLs can be found using the API GET {url}/order/api/order/textMessageUrl.</li>\r\n\t<li>Once an account is procured with Bitly or any other&nbsp;third party URL shortener, the following configurations have to be enabled in the application.</li>\r\n\t<li>Create the below mentioned Key Value Properties in KV Store and enter the account details obtained from Bitly or other third party shortening service provider.</li>\r\n</ol>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 958px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 145px;\"><strong>Key Value Property Name&nbsp;&nbsp; </strong>&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 129px;\"><strong>Example&nbsp;&nbsp; &nbsp;</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 163px;\"><strong>Description</strong>&nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 15px;\"><strong>Mandatory</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 33px;\"><strong>Component</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 173px;\"><strong>Path</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 142px;\">order.shortening.service&nbsp;&nbsp; &nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 127px;\">bitly&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 161px;\">Name of the third party provider&nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 13px;\">No</td>\r\n\t\t\t<td style=\"width: 30px;\">Order</td>\r\n\t\t\t<td style=\"width: 171px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 142px;\">order.shortening.url&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 127px;\">https://api-ssl.bitly.com/v4/shorten&nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 161px;\">URL of the third party provider</td>\r\n\t\t\t<td style=\"width: 13px;\">Yes</td>\r\n\t\t\t<td style=\"width: 30px;\">Order</td>\r\n\t\t\t<td style=\"width: 171px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 142px;\">order.shortening.access.token&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 127px;\">691e17348ae1b49386ade32411583a9cd2633382</td>\r\n\t\t\t<td style=\"width: 161px;\">Access token for the third party provider</td>\r\n\t\t\t<td style=\"width: 13px;\">Yes</td>\r\n\t\t\t<td style=\"width: 30px;\">Order</td>\r\n\t\t\t<td style=\"width: 171px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 142px;\">order.shortening.domain&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 127px;\">&nbsp;http://sophias&nbsp;</td>\r\n\t\t\t<td style=\"width: 161px;\">Domain name used in short URLs as registered with the third party provider</td>\r\n\t\t\t<td style=\"width: 13px;\">No</td>\r\n\t\t\t<td style=\"width: 30px;\">Order</td>\r\n\t\t\t<td style=\"width: 171px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 142px;\">order.selfServiceHostName</td>\r\n\t\t\t<td style=\"width: 127px;\">https://omni-sophias.omni.manh.com</td>\r\n\t\t\t<td style=\"width: 161px;\">Host name&nbsp;</td>\r\n\t\t\t<td style=\"width: 13px;\">Yes</td>\r\n\t\t\t<td style=\"width: 30px;\">Order</td>\r\n\t\t\t<td style=\"width: 171px;\">CONFIG/COM-MANH-CP-ORDER/</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>All the above mentioned properties are profile based and if required they can be configured differently for each profile in the application as illustrated below. Profile based properties will take precedence over the application level properties. Profile based properties can be defined for all the above mentioned properties or a subset of them. In case profile based properties are not defined, application will look for application level properties. For example, if you have different domain names for each country, the domain property can be configured as mentioned below and rest of the other properties are configured as mentioned above at the application level.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\"><strong>Key Value Property Name&nbsp;&nbsp; &nbsp;</strong></th>\r\n\t\t\t<th scope=\"col\"><strong>Example</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>order.shortening.domain.ecomorg-us&nbsp;&nbsp;</td>\r\n\t\t\t<td>http://sophias.us</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>order.shortening.domain.ecomorg-uk&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td>http://sophias.uk</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>order.shortening.domain.ecomorg-fr&nbsp;&nbsp;</td>\r\n\t\t\t<td>http://sophias<a href=\"http://sophias.fr/\">.</a>fr</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>If this configuration is not enabled any outbound messages configured for publishing Self-Service URL will not include short URLs.</p>\r\n\r\n<p>If this configuration is enabled, any errors encountered while calling the third party URL shortening service will result in the failure of respective Order Event or process. To call the third party URL shortening service requisite environment properties domainName, accesstoken & service-url must be configured.</p>\r\n\r\n<div class=\"tip\"><strong>Note: </strong>The Shorten Self-Service URL parameter is validated first in the URL shortening process. If the parameter is not enabled, the Text Message Shortening Configuration is not evaluated, and URLs are not shorted, even if the configuration exists in the Text Message Shortening Configuration UI.&nbsp;</div>\r\n\r\n<div class=\"tip\"><strong>Note</strong>:&nbsp;If we are using a base template,&nbsp;then the Order Configuration Shorten Selfservice URL should be enabled. Otherwise, modify the template with {Order.DSSLongUrl} instead of {Order.DSSUrl}.</div>\r\n\r\n<h4><a name=\"configure-alternative-selling-channels\" id=\"configure-alternative-selling-channels\"></a>Configure Alternative Selling Channels</h4>\r\n\r\n<p>It is possible to configure different selling channels for text messages. However, different selling channels beyond the provided seed data that implement texts&nbsp;also need to configure&nbsp;Business Channels in the text component.</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-9\" class=\"toggle-content\"><span class=\"toggle-title\">Business Channel Configuration</span></a></p><div id=\"tg-9\"><pre class=\"computer_code\">\nPOST {{url}}/text/api/text/businessChannel/save\n\n{\n    &quot;BusinessChannelId&quot;: &quot;WEB-OUTLET&quot;,\n    &quot;Description&quot;: &quot;Outlet Microsite orders&quot;\n}</pre>\n</div></div></p>\r\n\r\n<h4><a name=\"text-profile-purposes\" id=\"text-profile-purposes\"></a>Text Profile Purposes</h4>\r\n\r\n<p>If using Active Omni to form the text message, then ensure the below profile purposes are synced to the appropriate organizations. For example, if text templates vary by country, then each country-level organization (e.g. Sophias-US and Sophias-MX) should have the profiles synced at this level.&nbsp;Be sure to login as system admin, if your text profiles are owned by system. Otherwise, log in at the level where your text templates are managed.</p>\r\n\r\n<ul>\r\n\t<li>txt::processDefinition</li>\r\n\t<li>txt::messaging</li>\r\n\t<li>txt::txtConfig</li>\r\n</ul>\r\n\r\n<h3><a name=\"mapping-requirements\" id=\"mapping-requirements\"></a>Mapping Requirements</h3>\r\n\r\n<h4><a name=\"customer-opt-in-status\" id=\"customer-opt-in-status\"></a>Customer Opt-In Status</h4>\r\n\r\n<p>Text Messages can be sent to customers only if they have opted in to receive Text Messages for various transactions. Usually, the SMS Service Provider verifies if the To Phone number to which the Text Message is being delivered is registered with them for receiving text messages or not. If the customer has opted out from receiving Text messages for a particular Phone Number, SMS Text messages are not delivered to that phone number.</p>\r\n\r\n<p>Manhattans Active Omni tracks the OptIn Status for a particular Interaction Type (TextMessage in this case) for a particular Phone Number (Customer Phone Number in the Order in this case). OptIn status and customer phone number should be populated on the order for text messages to generate. The Text Message outbound application verifies&nbsp;\"OptIn\" status for the customer phone number -- in&nbsp;country code -- before publishing the message. If \"OptIn\" status is not populated or is \"OptOut\",&nbsp;the&nbsp;message outbound will not be generated.</p>\r\n\r\n<p>Opt In&nbsp;Status must be populated on the order. If the customer&nbsp;OptIn Status is not populated on Customer or Return order create, the order component retrieves it from the customer component in the customer's comm preference where&nbsp;customer component for Interaction Type Id is \"TextMessage\" for the CustomerId on the order. If the CustomerId on the order is not found in customer master then it is recommended to update the OptIn value&nbsp;through other process for both Customer and Return Order in order to recieve notifications. Refer <a href=\"/transactional-texts$troubleshooting\">here</a> on how to customize to achieve this. If&nbsp;the customer's opt-in status is updated on the customer record after it's already been populated on an order, there is no update automatically made to the order. Existing orders must be updated to reflect changes in the customer's preferences. New orders, however, will use the updated customer opt-in status.</p>\r\n\r\n<p>Any phone number formatting is removed before&nbsp;publishing outbound Text Message.</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-10\" class=\"toggle-content\"><span class=\"toggle-title\">Sample API's to save OptIn Status for a order:</span></a></p><div id=\"tg-10\"><p style=\"text-align: justify;\">POST&nbsp;{{url}}/order/api/order/order/save</p>\n\n<p style=\"text-align: justify;\">{<br />\n&nbsp; &nbsp;&quot;CustomerCommPref&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InteractionType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InteractionTypeId&quot;: &quot;TextMessage&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;OptInStatus&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;OptInStatusId&quot;: &quot;OptIn&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;PreferenceType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;PreferenceTypeId&quot;: &quot;All&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CountryCode&quot;: &quot;+1&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ],<br />\n&nbsp;&nbsp;&nbsp; &quot;OrderId&quot;: &quot;ECOM120059&quot;,<br />\n}</p>\n\n<p style=\"text-align: justify;\">&nbsp;</p>\n\n<p style=\"text-align: justify;\">&nbsp;</p>\n\n<p style=\"text-align: justify;\">POST&nbsp;{{url}}/order/api/order/order/save</p>\n\n<p style=\"text-align: justify;\">{<br />\n&nbsp; &nbsp;&quot;CustomerCommPref&quot;: [<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InteractionType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;InteractionTypeId&quot;: &quot;TextMessage&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;OptInStatus&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;OptInStatusId&quot;: &quot;OptOut&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;PreferenceType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;PreferenceTypeId&quot;: &quot;All&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;CountryCode&quot;: &quot;+1&quot;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; ],<br />\n&nbsp;&nbsp;&nbsp; &quot;OrderId&quot;: &quot;ECOM120059&quot;,<br />\n}</p>\n</div></div></p>\r\n\r\n<h3><a name=\"active®-omni-text-templates\" id=\"active®-omni-text-templates\"></a><a id=\"Sample Text Templates\" name=\"Sample Text Templates\"></a>Active® Omni Text Templates</h3>\r\n\r\n<p>If using Active® Omni to generate the Text body, then a&nbsp;Text template is used to define key attributes such as from phone number, to phone number, and the Text body.</p>\r\n\r\n<p>If using Active&nbsp;Omni to generate the Text message body, a&nbsp;Text template is used to define key attributes such as from phone number, to phone number, and the Text body. Sample starter text templates are provided for the below use cases.</p>\r\n\r\n<h4><a name=\"order-confirmation\" id=\"order-confirmation\"></a>Order Confirmation</h4>\r\n\r\n<p>This text template is used when an order is confirmed.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 733px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 139px;\"><strong>Message Used&nbsp;</strong>&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 339px;\"><strong>Rule Condition - When this Text gets generated&nbsp;</strong></th>\r\n\t\t\t<th scope=\"col\" style=\"width: 214px;\"><strong>Self-Service Links Included</strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 137px;\">Text Outbound Message<br>\r\n\t\t\t&nbsp;</td>\r\n\t\t\t<td style=\"width: 337px;\">Order isConfirmed is updated to true<br>\r\n\t\t\tChangeLog.ModTypes.Order contains Order::Confirmed</td>\r\n\t\t\t<td style=\"width: 212px;\">None</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-11\" class=\"toggle-content\"><span class=\"toggle-title\">Order Confirmation Text Template</span></a></p><div id=\"tg-11\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;OrderConfirmation&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;OrderConfirmation&quot;,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform the customer that order is confirmed&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Congratulations, Your order for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been confirmed. Order No.: ${Order.OrderId}&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.IsConfirmed == true&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>}</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"ready-for-pickup\" id=\"ready-for-pickup\"></a>Ready for Pickup</h4>\r\n\r\n<p>This text is generated when a buy online, pick up in store item is ready for pickup. When the store picks items (and they move to 'Picked' status on the order), the items are considered ready for pickup.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 774px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 135px;\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 153px;\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 286px;\">Rule Condition - When this Text gets generated&nbsp;&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 180px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 133px;\">Text Outbound Message</td>\r\n\t\t\t<td style=\"width: 151px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 284px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Quantity detail in picked status has increased</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::3600 & delivery method is pick up in store or ship to store</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 178px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>I'm on my way</li>\r\n\t\t\t\t<li>Pickup Later (extend Pickup Window)</li>\r\n\t\t\t\t<li>Add Pickup Person</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-12\" class=\"toggle-content\"><span class=\"toggle-title\">Curbside Pickup Text Template</span></a></p><div id=\"tg-12\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;CurbsidePickup&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;CurbsidePickup&quot;,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that items are ready for pickup at curbside&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your items are ready for pickup.&lt;#if Order.DeliveryMethodSubType==\\&quot;Curbside\\&quot;&gt; &lt;#if Order.DSSOnMyWayUrl??&gt; Please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}&lt;#else&gt; When you arrive at the store, stay in your vehicle and follow these instructions:&lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;/#if&gt;&lt;/#if&gt;&lt;#else&gt;\\&quot;Come down to the store and pickup your order\\&quot;&lt;/#if&gt;&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.DeliveryMethod contains \\&quot;PickUpAtStore\\&quot;&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>}</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"pickup-reminder\" id=\"pickup-reminder\"></a>Pickup Reminder</h4>\r\n\r\n<p>This text message&nbsp;is generated when a customer has already received a 'ready for pickup' text, but their items are not yet picked up.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Text Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this text gets generated</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Pickup Reminder</td>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\"IsFinalPickupReminder\": false</li>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Pick Up Notification Text is configured.</li>\r\n\t\t\t\t<li>Order Line&nbsp;Delivery Method is PickUp At Store&nbsp; OR Ship To Store.</li>\r\n\t\t\t\t<li>Min Fulfillment Status Id &gt;= 3600&nbsp;AND &lt; 7000.</li>\r\n\t\t\t\t<li>Appropriate Order Line Milestone Monitoring Rules are configured for&nbsp;Milestone Definition Id: \"OrderLine::Milestone::ReadyForPickup\"&nbsp; &nbsp; &nbsp; Description\": \"Order line is Ready For PickUp\" for the Event.</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>I'm on my way (for Curbside Pickup)&nbsp;</li>\r\n\t\t\t\t<li>Pickup Later (extend Pickup Window)</li>\r\n\t\t\t\t<li>Ship It Instead (convert BOPIS order to Ship To Address order - included if the fulfillment is eligible for conversion)</li>\r\n\t\t\t\t<li>Add Pickup Person</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>Only lines using the following delivery methods can use this text template:\r\n\t<ul>\r\n\t\t<li>Pickup At Store</li>\r\n\t\t<li>Ship To Store</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>The reminder text is generated based on the Order Line Milestone Time Rules and Monitoring Rules configured.</li>\r\n\t<li>The Text Message Outbound cannot be customized to include any other Order or order line attributes.</li>\r\n\t<li>Requires Pick Up Notification Text enabled to reference.</li>\r\n\t<li>Does not support a consolidated order event for status update (pickup) simultaneously for more than one store.</li>\r\n</ul>\r\n\r\n<p>Pickup Reminder Messages are not generated:</p>\r\n\r\n<ul>\r\n\t<li>For units that were reallocated after a short.</li>\r\n\t<li>If order line status moves to Picked-Up (7000) at any given point of time</li>\r\n\t<li>If Pickup Reminder messages are configured to be generated with reference to the Pickup Expiry Date, they will be reevaluated and retriggered&nbsp;if required if the Pickup Expiry Date is updated.</li>\r\n</ul>\r\n\r\n<p>To configure Pickup Reminder Texts:</p>\r\n\r\n<ol>\r\n\t<li><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-13\" class=\"toggle-content\"><span class=\"toggle-title\">Configuring Pickup Reminders</span></a></p><div id=\"tg-13\"><ul>\n\t<li>Order Line Milestone Rules have to be configured for generating Pickup Reminder Email Messages.&nbsp;Order Line Milestone Rules can be configured by UI or backed API&#39;s. For details on backed API&#39;s please refer Swagger documentation.&nbsp;</li>\n\t<li>Order Line Milestone Rules UI can be accessd from the Omnifacade Menu:&nbsp;{{url}}/omnifacade/#/OrderLineMilestoneRule</li>\n</ul>\n\n<ul>\n\t<li>Time Rules and Monitoring Rules have to be configured depending on the requirement for&nbsp;generating Pickup Reminder Email Messages for each pair of Delivery Method and Order Type.&nbsp;</li>\n\t<li>If the Order Line is a Gift (IsGift = ture) - different&nbsp;Order Line Milestone Rules can be configured for Gift order lines.&nbsp;</li>\n\t<li>Two separate Events are available for configuring Pickup Reminder and Final Pickup Reminder email messages as listed below.\n\t<ul>\n\t\t<li>OrderLine:OrderLine:Event:ReadyForPickupReminder</li>\n\t\t<li>OrderLine:OrderLine:Event:FinalPickupReminder</li>\n\t\t<li>Custom events can be created and added to the entity&nbsp;orderLineEventDefinition&nbsp;using the below mentioned API so that they are available to be configured in the Order Line Milestone Monitoring Rules. However existing Events cannot be deleted or modified.\n\t\t<ul>\n\t\t\t<li>POST&nbsp;{{url}}/order/api/order/orderLineEventDefinition</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p style=\"margin-left: 80px;\">Request Body:</p>\n\n<p style=\"margin-left: 80px;\">{<br />\n&nbsp; &quot;Description&quot;: &quot;Custom Publish pickup reminder&quot;,<br />\n&nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:CustomReadyForPickupReminder&quot;<br />\n}</p>\n\n<ul>\n\t<li>Some sample Order Line Milestone Rules are given below for configuring Pickup Reminders for different use cases.</li>\n</ul>\n\n<p><strong>&nbsp;Use Case #1:</strong></p>\n\n<p>After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 7 days to come and pick-up the items from the store. On the 8<sup>th</sup> day if there is a no show the customer the retailer will move the items back to shelf.</p>\n\n<p>The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below.</p>\n\n<ul>\n\t<li>Pickup Reminder &ndash; 1: 1 day after the store associate picks the items</li>\n\t<li>Pickup Reminder &ndash; 2: 2 days after the store associate picks the items</li>\n\t<li>Final Pickup Reminder: 1 day before the back to shelf date (that is 6<sup>th</sup> day from the date/time items were picked by store associate)</li>\n</ul>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\" width=\"1082\"><strong>Order Line Milestone - Monitoring Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>EventName</td>\n\t\t\t<td colspan=\"2\">RaiseAlways</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 1</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 2</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">172800</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Final Pickup Reminder</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:FinalPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\"><strong>Order Line Milestone - Time Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>DependentMilestoneId</td>\n\t\t\t<td>DependentStatusId</td>\n\t\t\t<td>TimeProperty</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Picked-up Expected Time</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>AFTER_MILESTONE</td>\n\t\t\t<td align=\"right\">604800</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>&nbsp;</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p>Sample json for configuring the&nbsp;Order Line Milestone - Monitoring Rules for this use case is given below</p>\n\n<p>API:&nbsp;POST {{url}}/order/api/order/orderLineMilestoneRule/save</p>\n\n<p>{<br />\n&nbsp; &quot;RuleId&quot;: &quot;ShipToStore-PickupReminders&quot;,<br />\n&nbsp; &quot;IsGift&quot;: false,<br />\n&nbsp; &quot;DeliveryMethodId&quot;: &quot;ShipToStore&quot;,<br />\n&nbsp; &quot;OrderTypeId&quot;: &quot;CallCenter Order&quot;,<br />\n&nbsp; &quot;OrderLineMonitoringRule&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Pickup Reminder - 1&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::ReadyForPickup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: 86400,<br />\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:ReadyForPickupReminder&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;ACTUAL_TIME&quot;<br />\n&nbsp; &nbsp; },<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Pickup Reminder - 2&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::ReadyForPickup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: 172800,<br />\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:ReadyForPickupReminder&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;ACTUAL_TIME&quot;<br />\n&nbsp; &nbsp; },<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Final Pickup Reminder&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: -86400,<br />\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:FinalPickupReminder&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,<br />\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;EXPECTED_TIME&quot;<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;OrderLineExpectedTimeRule&quot;: [<br />\n&nbsp; &nbsp; {<br />\n&nbsp; &nbsp; &nbsp; &quot;DependentMilestoneId&quot;: &quot;OrderLine::Milestone::ReadyForPickup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;TimeProperty&quot;: null,<br />\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Picked-up Expected Time&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: 604800,<br />\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;AFTER_MILESTONE&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;DependentStatusId&quot;: null<br />\n&nbsp; &nbsp; }<br />\n&nbsp; ],<br />\n&nbsp; &quot;OrderLineMilestoneRuleShippingMethod&quot;: []<br />\n}</p>\n\n<p><strong>Use Case #2:</strong></p>\n\n<p>After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 4 days to come and pick-up the items from the store. On the 5<sup>th</sup> day if there is a no show the customer the retailer will move the items back to shelf.</p>\n\n<p>The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below.</p>\n\n<ul>\n\t<li>Pickup Reminder &ndash; 1: 1 day after the store associate picks the items</li>\n\t<li>Pickup Reminder &ndash; 2: 2 days after the store associate picks the items</li>\n\t<li>Final Pickup Reminder: 3 days after the store associate picks the items</li>\n</ul>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\" width=\"1082\"><strong>Order Line Milestone - Monitoring Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>EventName</td>\n\t\t\t<td colspan=\"2\">RaiseAlways</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 1</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 2</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">172800</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Final Pickup Reminder</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">259200</td>\n\t\t\t<td>OrderLine:OrderLine:Event:FinalPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p><strong>Use Case #3:</strong></p>\n\n<p>After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 7 days to come and pick-up the items from the store. On the 8<sup>th</sup> day if there is a no show the customer the retailer will move the items back to shelf.</p>\n\n<p>The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below.</p>\n\n<ul>\n\t<li>Pickup Reminder &ndash; 1: 3 days before the back to shelf date (that is 4<sup>th</sup> day from the date/time items were picked by store associate)</li>\n\t<li>Pickup Reminder &ndash; 2: 2 days before the back to shelf date (that is 5<sup>th</sup> day from the date/time items were picked by store associate)</li>\n\t<li>Final Pickup Reminder: 1 day before the back to shelf date (that is 6<sup>th</sup> day from the date/time items were picked by store associate)</li>\n</ul>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\" width=\"1082\"><strong>Order Line Milestone - Monitoring Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>EventName</td>\n\t\t\t<td colspan=\"2\">RaiseAlways</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 1</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:FinalPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 2</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-172800</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Final Pickup Reminder</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-259200</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\"><strong>Order Line Milestone - Time Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td style=\"width: 253px;\">MilestoneDefinitionId</td>\n\t\t\t<td style=\"width: 122px;\">Type</td>\n\t\t\t<td style=\"width: 56px;\">Duration</td>\n\t\t\t<td style=\"width: 216px;\">DependentMilestoneId</td>\n\t\t\t<td>DependentStatusId</td>\n\t\t\t<td>TimeProperty</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Picked-up Expected Time</td>\n\t\t\t<td style=\"width: 253px;\">OrderLine::Milestone::PickedUp</td>\n\t\t\t<td style=\"width: 122px;\">AFTER_MILESTONE</td>\n\t\t\t<td align=\"right\" style=\"width: 56px;\">604800</td>\n\t\t\t<td style=\"width: 216px;\">OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>&nbsp;</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p><strong>Use Case #4:</strong></p>\n\n<p>While creating the order customer informs the retailer about the date on which he expects to pickup the order and this date is captured in Order Line Requested Delivery Date. After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is expected to pickup the order by the date mentioned in the order line requested delivery date. One day after the requested delivery date if there is a no show&nbsp;by the customer to pickup the order the retailer will move the items back to shelf.</p>\n\n<p>The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below.</p>\n\n<ul>\n\t<li>Pickup Reminder &ndash; 1: 1 day after the store associate picks the items</li>\n\t<li>Pickup Reminder &ndash; 2: 2 days after the store associate picks the items</li>\n\t<li>Final Pickup Reminder: 1 day before the back to shelf date (that is requested delivery date + 1 day)</li>\n</ul>\n\n<ul>\n</ul>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\" width=\"1082\"><strong>Order Line Milestone - Monitoring Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>EventName</td>\n\t\t\t<td colspan=\"2\">RaiseAlways</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 1</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 2</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>ACTUAL_TIME</td>\n\t\t\t<td align=\"right\">172800</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Final Pickup Reminder</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:FinalPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\"><strong>Order Line Milestone - Time Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>DependentMilestoneId</td>\n\t\t\t<td>DependentStatusId</td>\n\t\t\t<td>TimeProperty</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Picked-up Expected Time</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>TIME_PROPERTY</td>\n\t\t\t<td align=\"right\">&nbsp;</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>RequestedDeliveryDate</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p><strong>Use Case #5: Driving Pickup Reminders with reference to Fulfillment Pickup Expiry Date or Return To Shelf Date :</strong></p>\n\n<p>When the pickup at store or ship to store order is released to the store and store associates picks the items to keep them ready for the&nbsp;customer to come and pickup a Pickup Expiry Date is assigned to the Fulfillment by which date the retailer expects the customer to come and pickup the items from the Store. This is the last date by which the customer can pickup the items, else the retailer is free to return the items back to shelf and cancel the pickup. The customer can&nbsp; request the retailer to extend the pickup window by calling up the store or using a self service portal, in which case the Pickup Expiry Date is updated to a future date requested. Retailer can use this Pickup Expiry Date to drive the Pickup Reminder communications to the customer.&nbsp;</p>\n\n<div class=\"info\">Note: Pickup Expiry Date can be interfaced to Order Line Additional through Status Update order event for Picked Status (3600) from Fulfillment and any updates to Pickup Expiry Date in Fulfillment can be relayed back to order using Fulfillment Update order event. Please refer to&nbsp;<a hqid=\"2618990\" href=\"/types-of-order-event\">Types of Order Events</a>&nbsp;for details (<a hqid=\"2619339\" href=\"/how-does-status-update-event-work\">Status Update Events</a>&nbsp;and&nbsp;<a href=\"https://omni.helpdocsonline.com/types-of-order-event$fulfillment-update\">Fulfillment&nbsp;Update Event</a>)</div>\n\n<p>The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below.</p>\n\n<ul>\n\t<li>Pickup Reminder &ndash; 1: 3 day&#39;s before the Pickup Expiry Date</li>\n\t<li>Pickup Reminder &ndash; 2: 2 day&#39;s before the Pickup Expiry Date</li>\n\t<li>Final Pickup Reminder: 1 day&nbsp;before the Pickup Expiry Date</li>\n</ul>\n\n<ul>\n</ul>\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1082\">\n\t<tbody>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\" width=\"1082\"><strong>Order Line Milestone - Monitoring Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>EventName</td>\n\t\t\t<td colspan=\"2\">RaiseAlways</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 1</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-259200</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Pickup Reminder - 2</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-172800</td>\n\t\t\t<td>OrderLine:OrderLine:Event:ReadyForPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Final Pickup Reminder</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>EXPECTED_TIME</td>\n\t\t\t<td align=\"right\">-86400</td>\n\t\t\t<td>OrderLine:OrderLine:Event:FinalPickupReminder</td>\n\t\t\t<td align=\"center\" colspan=\"2\">FALSE</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td colspan=\"7\" height=\"19\"><strong>Order Line Milestone - Time Rules</strong></td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">RuleId</td>\n\t\t\t<td>MilestoneDefinitionId</td>\n\t\t\t<td>Type</td>\n\t\t\t<td>Duration</td>\n\t\t\t<td>DependentMilestoneId</td>\n\t\t\t<td>DependentStatusId</td>\n\t\t\t<td>TimeProperty</td>\n\t\t</tr>\n\t\t<tr height=\"19\">\n\t\t\t<td height=\"19\">Picked-up Expected Time</td>\n\t\t\t<td>OrderLine::Milestone::PickedUp</td>\n\t\t\t<td>TIME_PROPERTY</td>\n\t\t\t<td align=\"right\">&nbsp;</td>\n\t\t\t<td>OrderLine::Milestone::ReadyForPickup</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>PickupExpiryDate</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p>Sample Order Line Milestone configuration API:&nbsp;</p>\n\n<pre>\n<code>{\n&nbsp; &quot;OrderLineMonitoringRule&quot;: [\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Pickup Reminder - 1&quot;,\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: -259200,\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:ReadyForPickupReminder&quot;,\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;EXPECTED_TIME&quot;\n&nbsp; &nbsp; },\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Pickup Reminder - 2&quot;,\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: -172800,\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:ReadyForPickupReminder&quot;,\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;EXPECTED_TIME&quot;\n&nbsp; &nbsp; },\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Final Pickup Reminder&quot;,\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: -86400,\n&nbsp; &nbsp; &nbsp; &quot;EventName&quot;: &quot;OrderLine:OrderLine:Event:FinalPickupReminder&quot;,\n&nbsp; &nbsp; &nbsp; &quot;RaiseAlways&quot;: false,\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;EXPECTED_TIME&quot;\n&nbsp; &nbsp; }\n&nbsp; ],\n&nbsp; &quot;DeliveryMethodId&quot;: &quot;PickUpAtStore&quot;,\n&nbsp; &quot;RuleId&quot;: &quot;PickUpAtStore-PickupReminders&quot;,\n&nbsp; &quot;OrderLineExpectedTimeRule&quot;: [\n&nbsp; &nbsp; {\n&nbsp; &nbsp; &nbsp; &quot;DependentMilestoneId&quot;: &quot;OrderLine::Milestone::ReadyForPickup&quot;,\n&nbsp; &nbsp; &nbsp; &quot;TimeProperty&quot;: &quot;PickupExpiryDate&quot;,\n&nbsp; &nbsp; &nbsp; &quot;RuleId&quot;: &quot;Picked-Up Expected Time&quot;,\n&nbsp; &nbsp; &nbsp; &quot;MilestoneDefinitionId&quot;: &quot;OrderLine::Milestone::PickedUp&quot;,\n&nbsp; &nbsp; &nbsp; &quot;Duration&quot;: null,\n&nbsp; &nbsp; &nbsp; &quot;Type&quot;: &quot;TIME_PROPERTY&quot;,\n&nbsp; &nbsp; &nbsp; &quot;DependentStatusId&quot;: null\n&nbsp; &nbsp; }\n&nbsp; ],\n&nbsp; &quot;IsGift&quot;: false,\n&nbsp; &quot;OrderTypeId&quot;: &quot;CallCenter Order&quot;,\n&nbsp; &quot;OrderLineMilestoneRuleShippingMethod&quot;: []\n}</code></pre>\n\n<p><u><strong>Note:&nbsp;</strong></u></p>\n\n<ul>\n\t<li>Create different set of Order Line Milestone Rules for PickUp AT Store and Ship To Store Delivery Methods for each order type</li>\n\t<li>For&nbsp;Ship To Store Delivery Method - Pickup Reminder will be generated&nbsp;only for the Pickup Leg and not for the Merge Leg</li>\n\t<li>These configurations do not verify if a Pickup Notification email messages was already published for the order line; they are entirely&nbsp;dependent on the Order Line Milestone Rules configurations</li>\n\t<li>Pickup Reminder messages will be generated only if the Events specified&nbsp; for Pickup Reminder and Final Pickup Reminder are configured in the&nbsp;Order Line Milestone Rules</li>\n\t<li>Pickup Reminder messages will be&nbsp;consolidated for all the order lines for which the units were moved to Picked status for an order for Pick Up At Store delivery method, assuming all the order lines / releases are moved together to Picked status</li>\n\t<li>\n\t<p>For&nbsp;Ship To Store Delivery Method &ndash; One set of Pickup Reminder messages will be generated&nbsp;for every transaction that moves the units to Picked Status and are not consolidated in to one set of Pickup Reminder messages per order like Pickup At Store lines</p>\n\t</li>\n\t<li>Pickup Reminder messages will generated only if the Events specified&nbsp; for Pickup Reminder and Final Pickup Reminder are configured in the&nbsp;Order Line Milestone Rules</li>\n</ul>\n\n<div class=\"info\">Scheduler is not required for processing order line milestones as it is taken care through delayed messages process.</div>\n</div></div></li>\r\n\t<li>Configure the Text Message Template below</li>\r\n</ol>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-14\" class=\"toggle-content\"><span class=\"toggle-title\">Pick Up Reminder Text Template</span></a></p><div id=\"tg-14\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to remind the customer to pickup the order&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;PickupReminder&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.IsFinalPickupReminder == false&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;Name&quot;: &quot;PickupReminder&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;SequenceNumber&quot;: null,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;&quot;,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Another gentle reminder that your items are ready for pickup&lt;#if Order.LocationName??&gt; at the &#39;${Order.LocationName}&#39;&lt;/#if&gt;.&lt;#if Order.DSSOnMyWayUrl??&gt; If you are doing curbside pickup, please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}&lt;#else&gt; If you are doing a curbside pickup please follow these instructions ${(Order.DSSUrl)!\\&quot;&#39;Come down to the store and pickup your order&#39;\\&quot;}.&lt;/#if&gt;&lt;#if Order.DSSExtendPickupWindowURL??&gt; If you want to extend your pickup window please click on ${(Order.DSSExtendPickupWindowURL)!}&lt;/#if&gt;&quot;</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"final-pickup-reminder\" id=\"final-pickup-reminder\"></a><a id=\"final-pickup-remainder-message\" name=\"final-pickup-remainder-message\"></a>Final Pickup Reminder</h4>\r\n\r\n<p>This text message&nbsp;is generated when the final pickup reminder occurs in scenarios when&nbsp;customers&nbsp;have&nbsp;received a 'ready for pickup' text, but their items are not yet picked up.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Text Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this text gets generated</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Final Pickup Reminder</td>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\"IsFinalPickupReminder\":true</li>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Ready for Pickup text is configured.</li>\r\n\t\t\t\t<li>Order Line&nbsp;Delivery Method&nbsp;is PickUp At Store&nbsp;OR Ship To Store.</li>\r\n\t\t\t\t<li>Min Fulfillment Status Id &gt;= 3600&nbsp;AND &lt; 7000.</li>\r\n\t\t\t\t<li>Appropriate Order Line Milestone Time&nbsp;Rule&nbsp;are configured for&nbsp;Milestone Definition Id: \"OrderLine::Milestone::PickedUp\"&nbsp;&nbsp;Description\": \"Order line is PickedUp\".</li>\r\n\t\t\t\t<li>Appropriate Order Line Milestone Monitoring Rules are configured for&nbsp;Milestone Definition Id: \"OrderLine::Milestone::PickedUp\"&nbsp; Description\": \"Order line is PickedUp\".</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>I'm on my way&nbsp;(for Curbside Pickup)</li>\r\n\t\t\t\t<li>Pickup Later (extend Pickup Window)</li>\r\n\t\t\t\t<li>Ship It Instead (convert BOPIS order to Ship To Address order - included if the fulfillment is eligible for conversion)</li>\r\n\t\t\t\t<li>Add Pickup Person</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<ul>\r\n\t<li>Only lines using the following delivery methods can use this text template:\r\n\t<ul>\r\n\t\t<li>Pickup At Store</li>\r\n\t\t<li>Ship To Store</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>The reminder text is generated based on the Order Line Milestone Time Rules and Monitoring Rules configured.</li>\r\n\t<li>The Text Message Outbound cannot be customized to include any other Order or order line attributes.</li>\r\n\t<li>Requires Pick Up Notification Text enabled to reference.</li>\r\n\t<li>Does not support a consolidated order event for status update (pickup) simultaneously for more than one store.</li>\r\n</ul>\r\n\r\n<p>Final Pickup Reminder Messages are not generated:</p>\r\n\r\n<ul>\r\n\t<li>For units that were reallocated after a short.</li>\r\n\t<li>If order line status moves to Picked-Up (7000) at any given point of time</li>\r\n\t<li>If messages are configured to be generated with reference to the Pickup Expiry Date, they will be reevaluated and retriggered&nbsp;if required if the Pickup Expiry Date is updated.</li>\r\n</ul>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-15\" class=\"toggle-content\"><span class=\"toggle-title\">Final Pick Up Reminder</span></a></p><div id=\"tg-15\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that this is the final Pickup Reminder&quot;,</p>\n\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;FinalPickupReminder&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.IsFinalPickupReminder == true&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;Name&quot;: &quot;FinalPickupReminder&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;SequenceNumber&quot;: null,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>},</p>\n\n<p>&quot;Unique_Identifier&quot;: &quot;&quot;,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Today&#39;s the last day to pick up your order&lt;#if Order.LocationName??&gt; at the &#39;${Order.LocationName}&#39;&lt;/#if&gt;.&lt;#if Order.DSSOnMyWayUrl??&gt; If you are doing curbside pickup, please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}&lt;#else&gt; If you are doing a curbside pickup please follow these instructions ${(Order.DSSUrl)!\\&quot;&#39;Come down to the store and pickup your order&#39;\\&quot;}.&lt;/#if&gt;&lt;#if Order.DSSExtendPickupWindowURL??&gt; If you want to extend your pickup window please click on ${(Order.DSSExtendPickupWindowURL)!}&lt;/#if&gt;.&lt;#if Order.DSSPickupConversionURL??&gt; If you want us to ship it instead please click on ${(Order.DSSPickupConversionURL)!}&lt;/#if&gt;&quot;</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"shipment-confirmation\" id=\"shipment-confirmation\"></a>Shipment Confirmation</h4>\r\n\r\n<p>This Text template is used when lines with ship to address delivery method are shipped. One Text is generated each time a unit ships, so if an order ships in three shipments, then three Texts are generated.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 794px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 107px;\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 194px;\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 269px;\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 170px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 105px;\">Text Outbound Message</td>\r\n\t\t\t<td style=\"width: 191px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Tracking detail section</li>\r\n\t\t\t\t<li>On the Way Items section (details of items being shipped in current shipment, grouped by unique PackageId)</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 267px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Quantity detail in fulfilled status has increased</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7000</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 167px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t\t<li>Return Items</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-16\" class=\"toggle-content\"><span class=\"toggle-title\">Shipment Confirmation Text Template</span></a></p><div id=\"tg-16\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;ShipmentConfirmation&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;ShipmentConfirmation&quot;,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that items are shipped&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Shipped: Hi ${Order.CustomerFirstName}, &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; has been shipped. Track at &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;. If you want to return your item(s) then click here: &lt;#if Order.DSSReturnUrl??&gt;${Order.DSSReturnUrl}&lt;#else&gt;&lt;/#if&gt;&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;7000\\&quot;&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>}</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"pickup-nbsp-confirmation\" id=\"pickup-nbsp-confirmation\"></a>Pickup&nbsp;Confirmation</h4>\r\n\r\n<p>This text is generated when a buy online, pick up in store item is picked up. When the customer picks up the items from the pickup store, the system will send a pickup confirmation text.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 829px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 326px;\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 206px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Items Picked</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 312px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Quantity detail in fulfilled status has increased</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7000</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 192px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t\t<li>Return Items</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-17\" class=\"toggle-content\"><span class=\"toggle-title\">Pickup Confirmation Text Template</span></a></p><div id=\"tg-17\"><pre class=\"computer_code\">\n{\n    &quot;TemplateMsgId&quot;: &quot;PickupConfirmation&quot;,\n    &quot;Name&quot;: &quot;PickupConfirmation&quot;,\n    &quot;Description&quot;: &quot;Text message to inform customer that items are picked up&quot;,\n    &quot;MessagePrefix&quot;: null,\n    &quot;MessageSuffix&quot;: null,\n    &quot;MessageBody&quot;: &quot;PickedUp: Hi ${Order.CustomerFirstName}, &lt;#if (Order.Items?size &gt; 0) && (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; has been picked up.&quot;,\n    &quot;ConditionalExpression&quot;: &quot;Order.TextMessageType contains \\&quot;PickupConfirmationProcessing\\&quot;&quot;,\n    &quot;MessagePrefixInterval&quot;: 0,\n    &quot;MessageSuffixInterval&quot;: 0,\n    &quot;TextMessageType&quot;: {\n        &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;\n    }\n}</pre>\n</div></div></p>\r\n\r\n<h4><a name=\"delivery-confirmation\" id=\"delivery-confirmation\"></a><a id=\"DeliveryConfirmation\" name=\"DeliveryConfirmation\"></a>Delivery Confirmation</h4>\r\n\r\n<p>This text template is used when lines with ship to address delivery method are delivered to the customer. One Text is generated each time a package is delivered.&nbsp;For example, if an order is shipped in three shipments and delivered one after another, then three Texts are generated</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 794px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 107px;\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 194px;\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 269px;\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 170px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 105px;\">Text Outbound Message</td>\r\n\t\t\t<td style=\"width: 191px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Tracking detail section</li>\r\n\t\t\t\t<li>Delivered Items section (details of items included in package&nbsp;delivered most recently)</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 267px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Quantity detail in delivered status has increased</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7500</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 167px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t\t<li>Return Items</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-18\" class=\"toggle-content\"><span class=\"toggle-title\">Delivery Confirmation Text Template</span></a></p><div id=\"tg-18\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;DeliveryConfirmation&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;DeliveryConfirmation&quot;,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that items are delivered&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Delivered: Hi ${Order.CustomerFirstName}, &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; has been delivered. Track at &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;. If you want to return your item(s) then click here: &lt;#if Order.DSSReturnUrl??&gt;${Order.DSSReturnUrl}&lt;#else&gt;&lt;/#if&gt;&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;7500\\&quot;&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>}</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"delivery-delay\" id=\"delivery-delay\"></a><a id=\"DeliveryDelay\" name=\"DeliveryDelay\"></a>Delivery Delay</h4>\r\n\r\n<p>This text template is used when lines with ship to address delivery method are delayed. One Text is generated each time a package is delayed. For example, if an order is shipped in three shipments and delayed&nbsp;one after another, then three Texts are generated.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Mesage Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Tracking detail section</li>\r\n\t\t\t\t<li>Delivery Delayed Items section (details of items included in package&nbsp;delivered most recently)</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Order.TrackingInfo.Tracking detail&nbsp;statusSubType in DeliveryDelay</p>\r\n\r\n\t\t\t<p>Order.TrackingInfo.EstimatedDeliveryDate is updated to future date</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-19\" class=\"toggle-content\"><span class=\"toggle-title\">Delivery Delay Text Message</span></a></p><div id=\"tg-19\"><pre class=\"computer_code\">\r\n{\r\n&quot;TemplateMsgId&quot;: &quot;DeliveryDelayedTemplate&quot;,\r\n&quot;Name&quot;: &quot;DeliveryDelay&quot;,\r\n&quot;Description&quot;: &quot;Text message to inform customer that delivery is delayed.&quot;,\r\n&quot;MessagePrefix&quot;: null,\r\n&quot;MessageSuffix&quot;: null,\r\n&quot;MessageBody&quot;: &quot;Delivery Delayed: Hi ${Order.CustomerFirstName}, your shipment of &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; is delayed. Estimated delivery is ${Order.EstimatedDeliveryDate}. Track at &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;&quot;,\r\n&quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;DeliveryDelay\\&quot;&quot;,\r\n&quot;MessagePrefixInterval&quot;: 0,\r\n&quot;MessageSuffixInterval&quot;: 0,\r\n&quot;TextMessageType&quot;: {\r\n&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;\r\n}</pre>\r\n</div></div></p>\r\n\r\n<h4><a name=\"out-for-delivery-confirmation\" id=\"out-for-delivery-confirmation\"></a><a id=\"OutforDelivery\" name=\"OutforDelivery\"></a>Out for Delivery Confirmation</h4>\r\n\r\n<p>This text template is used when lines with ship to address delivery method are out for delivery to the customer. One Text is generated each time a package is out for delivery. For example, if an order is shipped in three shipments and out for delivery one after another, then three Texts are generated.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 794px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 107px;\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 194px;\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 283px;\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 156px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 105px;\">Text Outbound Message</td>\r\n\t\t\t<td style=\"width: 191px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Tracking detail section</li>\r\n\t\t\t\t<li>Out for Delivery Items section (details of items included in package delivered most recently)</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 280px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order.TrackingInfo.Tracking detail statusSubType in OutForDelivery</li>\r\n\t\t\t\t<li>Order Mod Type Config: Out for Delivery : Publish Text \"Out for Delivery Notification\"</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 154px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t\t<li>Return Items</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-20\" class=\"toggle-content\"><span class=\"toggle-title\">Out For Delivery Text Template</span></a></p><div id=\"tg-20\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;OutForDeliveryTemplate&quot;,</p>\n\n<p>&quot;Name&quot;: &quot;OutForDelivery&quot;,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that items are out for Delivery.&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;MessageBody&quot;: &quot;Out for Delivery: Hi ${Order.CustomerFirstName}, &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; is out for delivery. Track at &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;. If you want to return your item(s) then click here: &lt;#if Order.DSSReturnUrl??&gt;${Order.DSSReturnUrl}&lt;#else&gt;&lt;/#if&gt;&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;OutForDelivery\\&quot;&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>}</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"delivery-attempts\" id=\"delivery-attempts\"></a><a id=\"DeliveryAttempt\" name=\"DeliveryAttempt\"></a>Delivery Attempts</h4>\r\n\r\n<p>This text template is used when lines with ship to address delivery method are delayed. One Text is generated each time a package is delayed. For example, if an order is shipped in three shipments and delayed&nbsp;one after another, then three Texts are generated.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Mesage Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Tracking detail section</li>\r\n\t\t\t\t<li>Delivery Attempt Items section (details of items included in package&nbsp;delivered most recently)</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Order.TrackingInfo.Tracking detail&nbsp;statusSubType in DeliveryAttempt</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Track Package</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-21\" class=\"toggle-content\"><span class=\"toggle-title\">Delivery Attempt Text Message</span></a></p><div id=\"tg-21\"><pre class=\"computer_code\">\r\n{\r\n&quot;TemplateMsgId&quot;: &quot;DeliveryAttemptedTemplate&quot;,\r\n&quot;Name&quot;: &quot;DeliveryAttempt&quot;,\r\n&quot;Description&quot;: &quot;Text message to inform customer that delivery is attempted.&quot;,\r\n&quot;MessagePrefix&quot;: null,\r\n&quot;MessageSuffix&quot;: null,\r\n&quot;MessageBody&quot;: &quot;Delivery Attempted: Hi ${Order.CustomerFirstName}, we attempted to deliver your package of &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt;${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; but unfortunately, we couldn&rsquo;t. Track at &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;&quot;,\r\n&quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;DeliveryAttempt\\&quot;&quot;,\r\n&quot;MessagePrefixInterval&quot;: 0,\r\n&quot;MessageSuffixInterval&quot;: 0,\r\n&quot;TextMessageType&quot;: {\r\n&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;\r\n}\r\n}</pre>\r\n</div></div></p>\r\n\r\n<h4><a name=\"ship-it-instead-confirmation\" id=\"ship-it-instead-confirmation\"></a>Ship it Instead Confirmation</h4>\r\n\r\n<p>This text message&nbsp;is generated when&nbsp;BOPIS items are&nbsp;successfully converted to a ship to address delivery method.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Text Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this text gets generated</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Ship It Instead Confirmation</td>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order line&nbsp;delivery method is Ship To Address and the prior&nbsp;delivery method was&nbsp;Pickup At Store</li>\r\n\t\t\t\t<li>Min Fulfillment Status Id = 3600</li>\r\n\t\t\t\t<li>Max Fulfillment Status Id = 3600</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-22\" class=\"toggle-content\"><span class=\"toggle-title\">Ship It Instead Confirmation Text Template</span></a></p><div id=\"tg-22\"><div class=\"computer_code\">\n<p>{</p>\n\n<p>&quot;MessageSuffix&quot;: null,</p>\n\n<p>&quot;Description&quot;: &quot;Text message to inform customer that delivery method conversion is successful&quot;,</p>\n\n<p>&quot;TemplateMsgId&quot;: &quot;DMConversionConfirmation&quot;,</p>\n\n<p>&quot;ConditionalExpression&quot;: &quot;Order.PriorDeliveryMethod contains \\&quot;PickUpAtStore\\&quot;&quot;,</p>\n\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\n\n<p>&quot;Name&quot;: &quot;DMConversionConfirmation&quot;,</p>\n\n<p>&quot;MessagePrefix&quot;: null,</p>\n\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\n\n<p>&quot;SequenceNumber&quot;: null,</p>\n\n<p>&quot;TextMessageType&quot;: {</p>\n\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\n\n<p>},</p>\n\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}, this is a confirmation that we would be shipping your items to your address you have chosen.&quot;</p>\n\n<p>}</p>\n\n<p>]</p>\n\n<p>}</p>\n</div>\n</div></div></p>\r\n\r\n<h4><a name=\"ship-it-instead-due-to-store-shorts\" id=\"ship-it-instead-due-to-store-shorts\"></a>Ship It instead Due to Store Shorts</h4>\r\n\r\n<p>This text message is generated when the shorted BOPIS order line is eligible for conversion to ship to address and needs customer consent for the conversion of delivery method.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Text Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this text gets generated</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Customer Consent for Ship It Instead due to store shorts</td>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>OrderLine.RequestStatus = Open ; and</li>\r\n\t\t\t\t<li>OrderLine.CustomerRequestType =&nbsp;StoreShortConversion</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-23\" class=\"toggle-content\"><span class=\"toggle-title\">Ship It Instead due to store shorts Text Template</span></a></p><div id=\"tg-23\"><pre>\n {\n      &quot;TemplateMsgId&quot;: &quot;StoreShortShipItInstead&quot;,\n      &quot;Name&quot;: &quot;StoreShortShipItInstead&quot;,\n      &quot;Description&quot;: &quot;Text message to customer providing them a link to convert their shorted BOPIS order to STA&quot;,\n      &quot;MessagePrefix&quot;: null,\n      &quot;MessageSuffix&quot;: null,\n      &quot;ConditionalExpression&quot;: &quot;Order.RequestStatus contains \\&quot;Open\\&quot; &amp;&amp; Order.CustomerRequestType contains \\&quot;StoreShortConversion\\&quot;&quot;,\n      &quot;MessagePrefixInterval&quot;: 0,\n      &quot;MessageSuffixInterval&quot;: 0,\n      &quot;TextMessageType&quot;: {\n        &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;\n      },\n      &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! We&rsquo;re sorry - Your &lt;#if (Order.Items?size &gt; 0) &amp;&amp; (Order.Items?size == 1) &gt; ${Order.Items[0]} item&lt;#else&gt;${Order.Items[0]} +${Order.Items?size-1} more item(s)&lt;/#if&gt; are not available for in-store pickup at the ${Order.LocationName} store.&lt;#if Order.DSSPickupConversionURL??&gt;If you want us to ship them to you instead, click here: ${(Order.DSSPickupConversionURL)!} Otherwise, we&rsquo;ll cancel these items and you will not be charged.&lt;/#if&gt;&quot;\n    }\n  ]\n}\n</pre>\n</div></div></p>\r\n\r\n<h4><a name=\"order-cancellation\" id=\"order-cancellation\"></a><a id=\"OutforDelivery\" name=\"OutforDelivery\"></a>Order Cancellation</h4>\r\n\r\n<p>This text template is used when lines are cancelled on a customer order, either customer initiated or system initiated. One text is generated each time units are&nbsp;cancelled. &nbsp;For example, if an order with three lines, each line is cancelled separately,&nbsp;then three texts are generated.&nbsp;</p>\r\n\r\n<p>In case of customer cancellation, the system determines a cancellation is customer-initiated if Cancellation Initiated By is 'Customer' for the cancel reason used on the order line. This text message is generated only if the cancel reason is configured as customer-initiated.</p>\r\n\r\n<p>In case of system cancellation, this text is generated when an order line&nbsp;is cancelled by the system due to unavailability of item(s) during allocation or due to short message received from fulfillment or&nbsp;cancellation&nbsp;scheduled for milestone&nbsp; \"AllocationDue\" or \"ReleaseDue\".&nbsp;This text message is generated only if the cancel reason is configured as system-initiated.&nbsp;The system determines a cancellation is system-initiated if the Cancellation Initiated By is 'System' for the cancel reason used on the order line. MAO stamps below default cancel reasons in different scenarios.&nbsp;For a successful email generation in such case, the reasons should be defined and the Cancellation&nbsp;Initiated By should be&nbsp;'System'.</p>\r\n\r\n<ul>\r\n\t<li>CancelUnallocatedUnits(\"CancelUnallocatedUnits\")</li>\r\n\t<li>AllocationDue (\"AllocationDue\")</li>\r\n\t<li>ReleaseDue(\"ReleaseDue\")</li>\r\n</ul>\r\n\r\n<div class=\"tip\">Note: Customer Initiated partial qty cancellation notification is currently not supported.</div>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 794px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 107px;\">Message Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 194px;\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 283px;\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 156px;\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 105px;\">Text Outbound Message</td>\r\n\t\t\t<td style=\"width: 191px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 280px;\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order isCancelled is updated to true</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.Order contains OrderLine::Cancelled::Customer</li>\r\n\t\t\t\t<li>ChangeLog.ModTypes.Order contains OrderLine::Cancelled::System</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t<p>ChangeLog.ModTypes.Order contains OrderLine::Quantity::Decrease::System</p>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 154px;\">N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-24\" class=\"toggle-content\"><span class=\"toggle-title\">Order Cancellation Text Template</span></a></p><div id=\"tg-24\"><div class=\"computer_code\">{<br />\r\n&nbsp; &nbsp; &quot;Messages&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;ProfileId&quot;: &quot;ecomorg&quot;,<br />\r\n&nbsp; &nbsp; &quot;MessageSuffix&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;MessagePrefixInterval&quot;: 0,<br />\r\n&nbsp; &nbsp; &quot;MessagePrefix&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;MessageSuffixInterval&quot;: 0,<br />\r\n&nbsp; &nbsp; &quot;Description&quot;: &quot;Text message to inform the customer that order is cancelled&quot;,<br />\r\n&nbsp; &nbsp; &quot;TemplateMsgId&quot;: &quot;OrderCancellation&quot;,<br />\r\n&nbsp; &nbsp; &quot;ConditionalExpression&quot;: &quot;Order.IsCancelled == true&quot;,<br />\r\n&nbsp; &nbsp; &quot;Name&quot;: &quot;OrderCancellation&quot;,<br />\r\n&nbsp; &nbsp; &quot;TextMessageType&quot;: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your order for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been cancelled. Order No.: ${Order.OrderId}&quot;<br />\r\n}</div>\r\n</div></div></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"return-received\" id=\"return-received\"></a><a id=\"DeliveryAttempt\" name=\"DeliveryAttempt\"></a>Return Received</h4>\r\n\r\n<p>This text template is used when return order lines have been received.&nbsp;One text is generated each time a receipt message is consumed.&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Mesage Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>All the lines in the return that are received are Return Lines with Receipt Expected =&nbsp;true</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"1287\">ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::18000</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"1379\">Delivery Method = Ship to Return Center</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div class=\"warning\">Text message will NOT be triggered for store return delivery method.</div>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li data-renderer-start-pos=\"1420\">\r\n\t\t\t\t<p>Return order lines are not on hold</p>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-25\" class=\"toggle-content\"><span class=\"toggle-title\">Return Receipt Text Template</span></a></p><div id=\"tg-25\"><div class=\"computer_code\">{<br />\r\n&nbsp; &nbsp; &quot;Messages&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;ProfileId&quot;: &quot;ecomorg&quot;,<br />\r\n&nbsp; &nbsp; &quot;MessageSuffix&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;MessagePrefixInterval&quot;: 0,<br />\r\n&nbsp; &nbsp; &quot;MessagePrefix&quot;: null,<br />\r\n&nbsp; &nbsp; &quot;MessageSuffixInterval&quot;: 0,<br />\r\n&nbsp; &nbsp; &quot;Description&quot;: &quot;Text message to inform the customer that return items have been received&quot;,<br />\r\n&nbsp; &nbsp; &quot;TemplateMsgId&quot;: &quot;ReturnReceived&quot;,<br />\r\n&nbsp; &nbsp; &quot;ConditionalExpression&quot;: &quot;Order.Status contains \\&quot;18000\\&quot;&quot;,<br />\r\n&nbsp; &nbsp; &quot;Name&quot;: &quot;ReturnReceived&quot;,<br />\r\n&nbsp; &nbsp; &quot;TextMessageType&quot;: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your return for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been received. Return No.: ${Order.OrderId}&quot;<br />\r\n}</div>\r\n</div></div></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"return-confirmation\" id=\"return-confirmation\"></a><a id=\"DeliveryAttempt\" name=\"DeliveryAttempt\"></a>Return Confirmation</h4>\r\n\r\n<p>This text template is used when a return order has&nbsp;been confirmed.&nbsp;One text is generated each time a return is confirmed. This text message is limited to return orders and is not sent for exchange orders.&nbsp;&nbsp;</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Mesage Used&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</th>\r\n\t\t\t<th scope=\"col\">Sections in Text Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this Text gets generated&nbsp;</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included (short URL)</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Text Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order isConfirmed is updated to true</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"160\">ChangeLog.ModTypes.Order contains Order::Confirmed</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"249\">Order is type Return</li>\r\n\t\t\t\t<li data-renderer-start-pos=\"249\">\r\n\t\t\t\t<p>MaxReturnStatus of the&nbsp;return&nbsp;order Awaiting&nbsp;Return&nbsp;(11000.000)&nbsp;&nbsp; &nbsp;&nbsp;</p>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>N/A</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-26\" class=\"toggle-content\"><span class=\"toggle-title\">Return Confirmation Text Template</span></a></p><div id=\"tg-26\"><div class=\"computer_code\">{<br />\r\n&nbsp; &quot;Name&quot;: &quot;ReturnConfirmation&quot;,<br />\r\n&nbsp; &quot;MessageSuffix&quot;: null,<br />\r\n&nbsp; &quot;Description&quot;: &quot;Text message to inform the customer that return order is confirmed&quot;,<br />\r\n&nbsp; &quot;TemplateMsgId&quot;: &quot;ReturnConfirmation&quot;,<br />\r\n&nbsp; &quot;ConditionalExpression&quot;: &quot;Order.IsReturnConfirmed == true&quot;,<br />\r\n&nbsp; &quot;MessagePrefixInterval&quot;: 0,<br />\r\n&nbsp; &quot;Process&quot;: null,<br />\r\n&nbsp; &quot;MessagePrefix&quot;: null,<br />\r\n&nbsp; &quot;MessageSuffixInterval&quot;: 0,<br />\r\n&nbsp; &quot;SequenceNumber&quot;: null,<br />\r\n&nbsp; &quot;TextMessageType&quot;: {<br />\r\n&nbsp; &nbsp; &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;<br />\r\n&nbsp; },<br />\r\n&nbsp; &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your &lt;#if (Order.NumberOfReturnItems &gt; 0) &amp;&amp; (Order.NumberOfExchangeItems == 0)&gt;return ${Order.OrderId} for ${Order.NumberOfReturnItems} item(s) for ${Order.ReturnQuantity} qty &lt;#elseif (Order.NumberOfReturnItems == 0) &amp;&amp; (Order.NumberOfExchangeItems &gt; 0)&gt; exchange ${Order.OrderId} for ${Order.NumberOfExchangeItems} item(s) for ${Order.ExchangeQuantity} qty&lt;#else&gt;return ${Order.OrderId} for ${Order.NumberOfReturnItems} item(s) for ${Order.ReturnQuantity} qty and exchange for ${Order.NumberOfExchangeItems} item(s) for ${Order.ExchangeQuantity} qty&lt;/#if&gt; has been confirmed.&lt;#if Order.DSSReturnTrackUrl??&gt; Track it here. ${Order.DSSReturnTrackUrl}&lt;/#if&gt;&quot;<br />\r\n}</div>\r\n</div></div></p>\r\n\r\n<h4><a name=\"pay-by-link-nbsp-text-and-nbsp-reminder-sample-nbsp\" id=\"pay-by-link-nbsp-text-and-nbsp-reminder-sample-nbsp\"></a>Pay by Link&nbsp;Text and&nbsp;Reminder Sample&nbsp;</h4>\r\n\r\n<p>Pay by Link text is generated when the contact center agent clicks the 'Send Text' button in the Pay by Link section, and a reminder text will be sent if the system has not received payment from the customer within the configured number of hours.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Email Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Email Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this email gets generated</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>&nbsp; &nbsp; &nbsp;PayByLink</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Text Outbound Message</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>IsPayByLinkReminder: false</li>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">\r\n\t\t\t<p>When the CSR clicks 'Send Text', the customer receives&nbsp;a text with the link to add payment in Digital Self-Service.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">Digital Self-Service Pay By Link URL</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>PayByLink&nbsp; &nbsp; Reminder</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Text Outbound Message</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">If payment is not received within X hours (PayByLink reminder threshold), the customer will receive a reminder text to make payment for orders.</td>\r\n\t\t\t<td colspan=\"1\">Digital Self-Service Pay By Link URL</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-27\" class=\"toggle-content\"><span class=\"toggle-title\">Pay by Link Text Template</span></a></p><div id=\"tg-27\"><div class=\"computer_code\">\r\n<p>{</p>\r\n\r\n<p>&quot;Messages&quot;: null,</p>\r\n\r\n<p>&quot;ProfileId&quot;: &quot;ecomorg&quot;,</p>\r\n\r\n<p>&quot;MessageSuffix&quot;: null,</p>\r\n\r\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-05-24T05:05:04.977&quot;,</p>\r\n\r\n<p>&quot;Description&quot;: &quot;Text message to send the Pay By Link to the customer.&quot;,</p>\r\n\r\n<p>&quot;CreatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\r\n\r\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-05-24T05:05:04.977&quot;,</p>\r\n\r\n<p>&quot;TemplateMsgId&quot;: &quot;PayByLink&quot;,</p>\r\n\r\n<p>&quot;ConditionalExpression&quot;: &quot;Order.TextMessageType contains \\&quot;PayByLink\\&quot;&quot;,</p>\r\n\r\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\r\n\r\n<p>&quot;Process&quot;: &quot;/fwcore/seeddata/import&quot;,</p>\r\n\r\n<p>&quot;Name&quot;: &quot;PayByLink&quot;,</p>\r\n\r\n<p>&quot;UpdatedBy&quot;: &quot;admin@ecomorg.com&quot;,</p>\r\n\r\n<p>&quot;MessagePrefix&quot;: null,</p>\r\n\r\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\r\n\r\n<p>&quot;SequenceNumber&quot;: null,</p>\r\n\r\n<p>&quot;ContextId&quot;: &quot;220a08cb-d801-4bbf-b566-d1b08733a252&quot;,</p>\r\n\r\n<p>&quot;PK&quot;: &quot;6849047049779742581&quot;,</p>\r\n\r\n<p>&quot;TextMessageType&quot;: {</p>\r\n\r\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\r\n\r\n<p>},</p>\r\n\r\n<p>&quot;Unique_Identifier&quot;: &quot;6849047049779742581__PayByLink&quot;,</p>\r\n\r\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your order is almost complete. Please click the link to add payment: ${Order.DSSUrl}&quot;</p>\r\n\r\n<p>}</p>\r\n</div>\r\n</div></div></p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-28\" class=\"toggle-content\"><span class=\"toggle-title\">Pay by Link Reminder Text Template</span></a></p><div id=\"tg-28\"><div class=\"computer_code\">\r\n<p>{</p>\r\n\r\n<p>&quot;Messages&quot;: null,</p>\r\n\r\n<p>&quot;ProfileId&quot;: &quot;base&quot;,</p>\r\n\r\n<p>&quot;MessageSuffix&quot;: null,</p>\r\n\r\n<p>&quot;UpdatedTimestamp&quot;: &quot;2023-06-08T05:49:15.985&quot;,</p>\r\n\r\n<p>&quot;Description&quot;: &quot;Text message to send the Pay By Link reminder to the customer.&quot;,</p>\r\n\r\n<p>&quot;CreatedBy&quot;: &quot;seeddata-importer&quot;,</p>\r\n\r\n<p>&quot;CreatedTimestamp&quot;: &quot;2023-06-08T05:49:15.985&quot;,</p>\r\n\r\n<p>&quot;TemplateMsgId&quot;: &quot;PayByLinkReminder&quot;,</p>\r\n\r\n<p>&quot;ConditionalExpression&quot;: &quot;Order.TextMessageType contains \\&quot;ReminderForPBL\\&quot;&quot;,</p>\r\n\r\n<p>&quot;MessagePrefixInterval&quot;: 0,</p>\r\n\r\n<p>&quot;Process&quot;: null,</p>\r\n\r\n<p>&quot;Name&quot;: &quot;PayByLinkReminder&quot;,</p>\r\n\r\n<p>&quot;UpdatedBy&quot;: &quot;seeddata-importer&quot;,</p>\r\n\r\n<p>&quot;MessagePrefix&quot;: null,</p>\r\n\r\n<p>&quot;MessageSuffixInterval&quot;: 0,</p>\r\n\r\n<p>&quot;SequenceNumber&quot;: null,</p>\r\n\r\n<p>&quot;ContextId&quot;: &quot;f2626752-a8f4-44e4-968b-ecb2ab88c60a&quot;,</p>\r\n\r\n<p>&quot;PK&quot;: &quot;6862033559765805169&quot;,</p>\r\n\r\n<p>&quot;TextMessageType&quot;: {</p>\r\n\r\n<p>&quot;TextMessageTypeId&quot;: &quot;Transactional&quot;</p>\r\n\r\n<p>},</p>\r\n\r\n<p>&quot;Unique_Identifier&quot;: &quot;6862033559765805169__PayByLinkReminder&quot;,</p>\r\n\r\n<p>&quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! We have not received payment for your order yet. Please click the link to add payment: ${Order.DSSUrl}&quot;</p>\r\n\r\n<p>}</p>\r\n</div>\r\n</div></div></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"refund-by-link-nbsp-text-sample-nbsp\" id=\"refund-by-link-nbsp-text-sample-nbsp\"></a>Refund by Link&nbsp;Text Sample&nbsp;</h4>\r\n\r\n<p>Refund by Link text is generated when the contact center agent clicks the 'Send Text' button in the Refund by Link section.</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Email Message Type</th>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Email Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this email gets generated</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p>&nbsp; &nbsp; &nbsp;RefundByLinkForRefundProcessing</p>\r\n\r\n\t\t\t<pre>\r\n&nbsp;</pre>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Text Outbound Message</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">\r\n\t\t\t<p>When the CSR clicks 'Send Text', the customer receives&nbsp;a text with the link to add new payment method for refund processing in Digital Self-Service.</p>\r\n\t\t\t</td>\r\n\t\t\t<td colspan=\"1\">Digital Self-Service Refund By Link URL</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-29\" class=\"toggle-content\"><span class=\"toggle-title\">Refund by Link Text Template</span></a></p><div id=\"tg-29\"><pre class=\"computer_code\">\n{\n      &quot;Description&quot;: &quot;Text message to send the Refund By Link to the customer.&quot;,\n      &quot;TemplateMsgId&quot;: &quot;RefundByLinkForRefundProcessing&quot;,\n      &quot;ConditionalExpression&quot;: &quot;Order.TextMessageType contains \\&quot;RefundByLinkForRefundProcessing\\&quot;&quot;,\n      &quot;MessagePrefixInterval&quot;: 0,\n      &quot;Name&quot;: &quot;RefundByLink&quot;,\n      &quot;MessagePrefix&quot;: null,\n      &quot;MessageSuffixInterval&quot;: 0,\n      &quot;SequenceNumber&quot;: null,\n      &quot;TextMessageType&quot;: {\n        &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;\n      },\n      &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Please input a new payment method to receive your refund for Order No.: ${Order.OrderId} by clicking on the link: ${Order.DSSUrl}&quot;\n    }</pre>\n</div></div></p>\r\n\r\n<h4><a name=\"prevent-shipments-on-payment-failure-sample\" id=\"prevent-shipments-on-payment-failure-sample\"></a>Prevent Shipments on Payment Failure Sample</h4>\r\n\r\n<p>A text&nbsp;is generated&nbsp;when a release is cancelled due to payment failure.&nbsp;</p>\r\n\r\n<table border=\"1\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\">Message Used</th>\r\n\t\t\t<th scope=\"col\">Sections in Email Message</th>\r\n\t\t\t<th scope=\"col\">Rule Condition - When this email gets generated</th>\r\n\t\t\t<th scope=\"col\">Self-Service Links Included</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>\r\n\t\t\t<p><code>PaymentFailedOrder</code></p>\r\n\t\t\tText Outbound Message</td>\r\n\t\t\t<td>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Order information</li>\r\n\t\t\t\t<li>Customer information</li>\r\n\t\t\t\t<li>Items</li>\r\n\t\t\t\t<li>Order Summary</li>\r\n\t\t\t</ul>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>cancellationTrackerLineStatus / orderLineId / orderId</p>\r\n\r\n\t\t\t<p>status: Success</p>\r\n\r\n\t\t\t<p>cancelReasonId &gt; Cancel Release on Payment Failure</p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>SelfServiceOrderHistoryUrl</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<p>##toggle-PaymentFailedOrderTextSample##38##</p>\r\n\r\n<h3><a name=\"customizing-text-messages\" id=\"customizing-text-messages\"></a>Customizing Text Messages</h3>\r\n\r\n<p>The diagram below illustrates how the text message flow can be customized at various stages.</p>\r\n\r\n<p><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-30\" class=\"toggle-content\"><span class=\"toggle-title\">Customizing Text messages</span></a></p><div id=\"tg-30\"><p><img alt=\"\" src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/Text%20Message%20Customization(1).jpg?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL1RleHQlMjBNZXNzYWdlJTIwQ3VzdG9taXphdGlvbigxKS5qcGciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE3NTQ3NTE1OTF9fX1dfQ__&Signature=Ps0ZqPHdmeXlaoDwh1LN1bbtgbfkWfMjBPb6dhIkKGRuqIwd3BvVRNBfMWgekBHTUccjDwRsGBOunE81O1tZ2QvXQLNkGVeCVEVTzclmEfI-ny0LxzTekm8z8N5K~1mj0TNLX-G6eQaEYza4i2IQzsFhRjwMyXD6~KS1xp3BcKwgp3Gx-uPIz~KYMu-zSTO9LrAfWt~YQv2pE7-WKVEF5HeDMlo9G0yPIy9RQZRBm0-j9jCXGwEKgv0iHenMhBoWFT3fGrPtZbQSKgKLKj28aJ-ixF8BYsfYPe44NB496ywWwq9CvKXf0kPqgi6grKp8~KIwS47mvJZMESA84-IEfg__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"width: 1011px; height: 997px; border-style: solid;\" /></p>\n</div></div></p>\r\n\r\n<h4><a name=\"text-user-exits\" id=\"text-user-exits\"></a>Text User Exits</h4>\r\n\r\n<p>User exits can be implemented to customize the text process. For example, to add/remove attributes required by the URL shortening provider to&nbsp;the Text Message published outbound from the order component, implement the<strong>&nbsp;Order:Order:UserExit:PrePublishTextMessage</strong> extension point. Unlike transactional emails, the outbound text payload from the order component cannot be <a href=\"https://omni.helpdocsonline.com/transactional-emails$how-to-include-additional-attributes-in-emails\">customized via response template</a> and requires a user exit implementation if additional&nbsp;attributes are required.</p>\r\n\r\n<h4><a name=\"how-to-add-a-custom-text-message\" id=\"how-to-add-a-custom-text-message\"></a>How to add a Custom Text Message</h4>\r\n\r\n<p>If a new Text Message outbound is required in addition to the out of the box texts, then custom code must be implemented. Text Messages cannot be added via configuration, because these messages require logic to form a curated outbound message. To add a custom text message:</p>\r\n\r\n<ol>\r\n\t<li>Create a Text Message Outbound object</li>\r\n\t<li>Create a service with the required mod type and conditions to publish the Text Message (Note: Once one custom service/API is implemented, it can be used for multiple custom Text Message Types. In this service, use TextMessageId from the input to select a different method by Text message type.)</li>\r\n\t<li>Create a matching Text Template to generate the text.</li>\r\n</ol>\r\n\r\n<h4><a name=\"how-to-customize-text-templates\" id=\"how-to-customize-text-templates\"></a>How to Customize Text Templates</h4>\r\n\r\n<p>Sample text templates are available out of the box. These templates receive incoming order data and generate the final outbound text message. To view and modify these templates:</p>\r\n\r\n<ol>\r\n\t<li>Navigate to the Text Message Template Configuration UI</li>\r\n\t<li>Modify the text configuration</li>\r\n</ol>\r\n\r\n<p>The following can be configured in text templates:</p>\r\n\r\n<ul>\r\n\t<li><strong>Conditional Expression</strong>: These filter conditions&nbsp;are evaluated against the incoming payload to select a template and generate the SMS text. For example, if a condition includes DeliveryMethod = ShipToAddress, then the outbound Text Message payload from the order component must include an order line with DeliveryMethod = ShipToAddress to select this template.</li>\r\n\t<li><strong>Message Body</strong>: SMS body text</li>\r\n\t<li><strong>Text Body HTML</strong>: defines the text body; can be customized per business requirements or for new themes. This uses a Freemarker template.</li>\r\n\t<li><strong>Message Suffix</strong>, <strong>Message Suffix Interval</strong>, <strong>Message Prefix</strong> and&nbsp;<strong>Message Prefix Interval</strong></li>\r\n\t<li><strong>Description</strong>: description of the template configuration. Used for configuration management.</li>\r\n</ul>\r\n\r\n<p>To customize a&nbsp;Text template or add a new one, use a sample template and modify the desired attributes.</p>\r\n\r\n<div class=\"tip\"><div class=\"toggle_outerdiv\"><p class=\"toggle_div\"><a href=\"#tg-31\" class=\"toggle-content\"><span class=\"toggle-title\">Sample Text Message Template</span></a></p><div id=\"tg-31\"><p>{<br />\n&nbsp; &nbsp; &nbsp; &quot;MessageSuffix&quot;: null,<br />\n&nbsp; &nbsp; &nbsp; &quot;Description&quot;: &quot;Text message to inform customer that items are ready for pickup at curbside&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;TemplateMsgId&quot;: &quot;CurbsidePickup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;ConditionalExpression&quot;: &quot;Order.DeliveryMethod contains \\&quot;PickUpAtStore\\&quot;&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MessagePrefixInterval&quot;: 0,<br />\n&nbsp; &nbsp; &nbsp; &quot;Name&quot;: &quot;CurbsidePickup&quot;,<br />\n&nbsp; &nbsp; &nbsp; &quot;MessagePrefix&quot;: null,<br />\n&nbsp; &nbsp; &nbsp; &quot;MessageSuffixInterval&quot;: 0,<br />\n&nbsp; &nbsp; &nbsp; &quot;TextMessageType&quot;: {<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;TextMessageTypeId&quot;: &quot;Transactional&quot;<br />\n&nbsp; &nbsp; &nbsp; },<br />\n&nbsp; &nbsp; &nbsp; &quot;MessageBody&quot;: &quot;Hi ${Order.CustomerFirstName}! Your items are ready for pickup. When you arrive at the store, stay in your vehicle and follow these instructions: &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;&quot;<br />\n&nbsp; &nbsp; }</p>\n</div></div></div>\r\n\r\n<h4><a name=\"how-to-modify-text-message-templates\" id=\"how-to-modify-text-message-templates\"></a>How to Modify Text Message Templates</h4>\r\n\r\n<p>In the illustration below Ready For Pickup Text Message Template is modified to conditionally change the message body depending on the Delivery Method Sub type for the order line.</p>\r\n\r\n<p>Step#1: From Postman - GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='CurbsidePickup'\"<br>\r\nStep#2: Copy Message Body from the Response json to Notepad</p>\r\n\r\n<p>\"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup. When you arrive at the store, stay in your vehicle and follow these instructions: &lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;\"</p>\r\n\r\n<p>Step#3: Change it to include conditions to display the Message Body depending on whether it is Curbside Pickup or InStore Pickup:</p>\r\n\r\n<p>\"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup. &lt;#if Order.DeliveryMethodSubType=\\\"Curbside\\\"&gt; When you arrive at the store, stay in your vehicle and follow these instructions:&lt;#if Order.DSSUrl??&gt;${Order.DSSUrl}&lt;#else&gt;&lt;/#if&gt;&lt;#else&gt;\\\"Come down to the store and pickup your order\\\"&lt;/#if&gt;\"</p>\r\n\r\n<p>Step#4: Replace it with the message body in the textMsgTemplate that you got in Step#1 above</p>\r\n\r\n<p>Step#5: From Postman - POST {{url}}/text/api/text/textMsgTemplate/save - paste json modified in Step#4 in the Body</p>\r\n\r\n<h3><a name=\"feature-scope\" id=\"feature-scope\"></a>Feature Scope</h3>\r\n\r\n<p>Restricting the hours text messages are sent to customers is not supported in Active Omni; this should be controlled via the third party text provider. For example, if a retailer wants to deliver text messages between 9 AM and 9 PM, this must be done by the text provider.</p>\r\n\r\n<h5>Ship Confirmation Message</h5>\r\n\r\n<ul>\r\n\t<li>Only lines using ship to address delivery method can use this text template</li>\r\n\t<li>Ship To Store, Pickup At Store, Store Sales, and Text delivery methods are not supported</li>\r\n\t<li>Backordered and canceled quantities are not published in ship confirmation text message</li>\r\n</ul>\r\n\r\n<h5>Ready for Pickup Message</h5>\r\n\r\n<ul>\r\n\t<li>Only lines using Pickup At Store or Ship To Store delivery method can use this text template</li>\r\n\t<li>The Text outbound message does not support consolidated order event for status update (pickup) simultaneously for more than one store</li>\r\n</ul>\r\n\r\n<h5>Ship It Instead Confirmation Message</h5>\r\n\r\n<ul>\r\n\t<li>Only when an \"PickupAtStore\" order (BOPIS) is successfully converted to \"ShipToAddress\" (Ship To Home) order and mod type&nbsp;OrderLine::UpdateBOPISToShipToAddress is triggered&nbsp;this text template can be used.</li>\r\n</ul>\r\n\r\n<h3><a name=\"message-types-and-queues\" id=\"message-types-and-queues\"></a>Message Types and Queues</h3>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 800px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"width: 78px;\">Producer Component</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 167px;\">Message Type</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 56px;\">Type</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 117px;\">Queue</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 169px;\">Business Significance</th>\r\n\t\t\t<th scope=\"col\" style=\"width: 128px;\">Consuming Component</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 76px;\">Order</td>\r\n\t\t\t<td style=\"width: 164px;\">TextMessageServiceMSGType</td>\r\n\t\t\t<td style=\"width: 54px;\">Outbound&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 115px;\">queue.sendTextEvent</td>\r\n\t\t\t<td style=\"width: 166px;\">Text will not be generated if messages are not published or consumed from this queue&nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 126px;\">component.message</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 76px;\">Text</td>\r\n\t\t\t<td style=\"width: 164px;\">SendTextEventMSGType</td>\r\n\t\t\t<td style=\"width: 54px;\">Inbound&nbsp; &nbsp;&nbsp;</td>\r\n\t\t\t<td style=\"width: 115px;\">queue.sendTextEvent</td>\r\n\t\t\t<td style=\"width: 166px;\">Text will not be generated if messages are not published to this queue&nbsp;&nbsp; &nbsp;</td>\r\n\t\t\t<td style=\"width: 126px;\">Third party SMS Service provider</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h3><a name=\"implementation-flavor\" id=\"implementation-flavor\"></a>Implementation Flavor</h3>\r\n\r\n<h4><a name=\"how-to-integrate-manhattan-nbsp-active-nbsp-omni-with-a-twilio-account-to-send-digital-self-service-links-without-using-a-bitly-account\" id=\"how-to-integrate-manhattan-nbsp-active-nbsp-omni-with-a-twilio-account-to-send-digital-self-service-links-without-using-a-bitly-account\"></a>How to integrate Manhattan&nbsp;Active&nbsp;Omni with a Twilio account to send Digital Self-Service links without using a Bitly account</h4>\r\n\r\n<p>To send Digital Self-Service links without relying on a Bitly account, configure your Twilio account to act as the short URL service provider. You can use any supported URL shortening service by working with the services team to populate the following KV store key-value properties:</p>\r\n\r\n<ul>\r\n\t<li>order.shortening.service</li>\r\n\t<li>order.shortening.url</li>\r\n\t<li>order.shortening.access.token</li>\r\n\t<li>order.shortening.domain</li>\r\n\t<li>Order.selfServiceHostName</li>\r\n</ul>\r\n\r\n<h3><a name=\"troubleshooting\" id=\"troubleshooting\"></a><a id=\"troubleshooting\" name=\"troubleshooting\"></a>Troubleshooting</h3>\r\n\r\n<h4><a name=\"text-messages-are-not-delivered-nbsp\" id=\"text-messages-are-not-delivered-nbsp\"></a>Text messages are not delivered&nbsp;</h4>\r\n\r\n<ul>\r\n\t<li>Verify the status of the text messages sent to Twilio / third party text message providers in the logs in text component and see if any error code is populated. If so, try to rectify it.</li>\r\n\t<li>{{url}}/text/api/text/textMessage</li>\r\n\t<li>Text Component Log</li>\r\n\t<li>Check if the environment URL is configured in KV for below property</li>\r\n</ul>\r\n\r\n<p>text.server.base.url</p>\r\n\r\n<ul>\r\n\t<li>Ensure the below Message Type and Extension Point To Message Type exist. If they do not, create them:\r\n\t<ul>\r\n\t\t<li><span style=\"font-family: inherit;\">GET /order/api/ServiceDefinition/outBoundMessageType - look for&nbsp;</span><code>MessageType\": \"TextMessageServiceMSGType\"</code></li>\r\n\t\t<li><code>GET /order/api/ServiceDefinition/extPointToMessageType - look for \"ExtensionPointId\": \"Order:Order:Event:PublishText\"</code></li>\r\n\t\t<li><span style=\"font-family: inherit;\">If they do not exist, create them:</span></li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p><span style=\"font-family: inherit;\">Login with system admin</span></p>\r\n\r\n<p><span style=\"font-family: inherit;\">POST /order/api/ServiceDefinition/outBoundMessageType/save</span></p>\r\n\r\n<p><code>{<br>\r\n&nbsp; &nbsp; \"MessageType\": \"TextMessageServiceMSGType\",<br>\r\n&nbsp; &nbsp; \"Transactional\": true,<br>\r\n&nbsp; &nbsp; \"PersistMessageToMsgStore\": false,<br>\r\n&nbsp; &nbsp; \"OutBoundQueues\": {<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; \"QueueName\": \"queue.sendText\"<br>\r\n&nbsp; &nbsp; }<br>\r\n}</code></p>\r\n\r\n<p>Add an extension point to message type mapping in the order component</p>\r\n\r\n<p><code>POST /order/api/ServiceDefinition/extPointToMessageType/save<br>\r\n{&nbsp;\"ExtensionPointId\": \"Order:Order:Event:PublishText\",<br>\r\n&nbsp; &nbsp; \"MessageType\": \"TextMessageServiceMSGType\"<br>\r\n}</code></p>\r\n\r\n<ul>\r\n\t<li>If there are no errors found, ask services to help troubleshoot</li>\r\n</ul>\r\n\r\n<h4><a name=\"one-of-the-order-process-order-event-is-failing\" id=\"one-of-the-order-process-order-event-is-failing\"></a>One of the Order Process/Order Event is failing</h4>\r\n\r\n<p>Check if the Publish Text Message Service associated with a ModType has errors OR if Shorten URL is enabled, check if there are errors in the third party URL Shortener calls. If errors exist, you either need to rectify the errors or uncheck the URL Shortener from the respective Order Configuration temporarily until the exceptions with third party URL Shortener service provider calls are resolved.</p>\r\n\r\n<h4><a name=\"order-confirmation-text-messages-are-not-getting-delivered\" id=\"order-confirmation-text-messages-are-not-getting-delivered\"></a>Order confirmation text messages are not getting delivered</h4>\r\n\r\n<p>Check if you have configured appropriate From Phone Number in order.sms.from.phone KV property&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<h4><a name=\"text-message-outbounds-are-not-getting-published-from-order-nbsp-nbsp-nbsp\" id=\"text-message-outbounds-are-not-getting-published-from-order-nbsp-nbsp-nbsp\"></a>Text Message outbounds are not getting published from order&nbsp;&nbsp; &nbsp;</h4>\r\n\r\n<p>Check if all outbound message types and extension points are configured properly as described above. &nbsp;</p>\r\n\r\n<h4><a name=\"text-message-outbounds-are-getting-published-from-order-but-don-t-see-any-entries-for-the-same-in-text-component-logs-nbsp\" id=\"text-message-outbounds-are-getting-published-from-order-but-don-t-see-any-entries-for-the-same-in-text-component-logs-nbsp\"></a>Text Message outbounds are getting published from order but don't see any entries for the same in Text Component Logs&nbsp;</h4>\r\n\r\n<ul>\r\n\t<li>Check if queue.publishText has consumers to consume the messages in Text Component</li>\r\n\t<li>Check if queue.sendText exists and if messages are getting queued up there. If yes,&nbsp;contact a third party text message provider and resolve the issue.</li>\r\n</ul>\r\n\r\n<h4><a name=\"i-don-t-see-short-urls-in-the-text-message-nbsp\" id=\"i-don-t-see-short-urls-in-the-text-message-nbsp\"></a>I don't see short URLs in the text message&nbsp;</h4>\r\n\r\n<ul>\r\n\t<li>Check if you have configured for shortening URLs in Order Config</li>\r\n\t<li>Check if you have properly configured requisite KV Store Properties for third party URL shortening provider/Bitly</li>\r\n</ul>\r\n\r\n<h4><a name=\"short-urls-in-the-text-message-are-not-functional-nbsp-nbsp\" id=\"short-urls-in-the-text-message-are-not-functional-nbsp-nbsp\"></a>Short URLs in the Text Message are not functional&nbsp;&nbsp;</h4>\r\n\r\n<ul>\r\n\t<li>Check if Long URL attribute populated in the text outbound message works</li>\r\n\t<li>Verify if you have configured KV Store property - order.selfServiceHostName - with the Host Name</li>\r\n</ul>\r\n\r\n<h4><a name=\"pickup-reminder-texts-are-not-getting-generated\" id=\"pickup-reminder-texts-are-not-getting-generated\"></a>Pickup Reminder Texts are not getting generated</h4>\r\n\r\n<ul>\r\n\t<li>Verify if Order Line Monitoring Rules are configured for the Delivery Method and Order Type&nbsp;</li>\r\n\t<li>Verify if appropriate&nbsp;Order Line Monitoring Rules are configured for the appropriate Miles Stone Id and Event</li>\r\n\t<li>Verify if the Order Line Milestones and Order Line Milestone Events are populated as per the configurations and Next Event Time is also populated accordingly.</li>\r\n</ul>\r\n\r\n<h4><a name=\"invalid-data-for-the-field-businesschannelid\" id=\"invalid-data-for-the-field-businesschannelid\"></a>Invalid data for the field BusinessChannelId</h4>\r\n\r\n<ul>\r\n\t<li>If your client uses any different selling channels beyond the provided seed data and is implementing texting, be sure to also configure these as <strong>Business Channels</strong> in the text component.</li>\r\n\t<li>Text messages for our custom selling channel will fail&nbsp;due to \"Invalid data for the field BusinessChannelId\" despite having configured the Selling Channel Id.</li>\r\n\t<li>\r\n\t<div class=\"computer_code\">POST {{url}}/text/api/text/businessChannel/save</div>\r\n\r\n\t<div class=\"computer_code\">{<br>\r\n\t&nbsp;&nbsp;&nbsp; \"BusinessChannelId\": \"WEB-OUTLET\",<br>\r\n\t&nbsp;&nbsp;&nbsp; \"Description\": \"Outlet Microsite orders\"<br>\r\n\t}</div>\r\n\t</li>\r\n</ul>\r\n\r\n<h4><a name=\"how-to-test-delivery-tracking-notifications-without-real-tracking-numbers\" id=\"how-to-test-delivery-tracking-notifications-without-real-tracking-numbers\"></a>How to test Delivery Tracking Notifications without real tracking numbers</h4>\r\n\r\n<p>After the necessary configurations are done and if you wish to see if notifications are generated, you can simulate the carrier response and confirm if the notifications are generated. There is no need for real tracking numbers to test end to end feature. Refer&nbsp;<a href=\"https://omni.helpdocsonline.com/deliverytracking$how-to-test-each-of-the-delivery-notifications-without-sample-tracking-numbers\">here</a>&nbsp;for more details on how to test text notification for delivery tracking w/o sample tracking numbers.</p>\r\n\r\n<h4><a name=\"optin-value-is-not-copied-from-the-customer-order-to-return-order-there-by-preventing-text-communication-for-return-order-configured-notifications\" id=\"optin-value-is-not-copied-from-the-customer-order-to-return-order-there-by-preventing-text-communication-for-return-order-configured-notifications\"></a>OptIn value is not copied from the customer order to return order there by preventing text communication for return order configured notifications</h4>\r\n\r\n<p>If the Customer Master record is not found for a given CustomerId or for any anonymous customer, the OptIn value should be populated by intercepting order save call if the order creation is from the call center or DSS.</p>\r\n\r\n<h3><a name=\"related-articles\" id=\"related-articles\"></a>Related Articles</h3>\r\n\r\n<div class=\"info\"><ul class=\"related-articles\"><li><a href=\"/customer-service-ui-resources\" hqid=\"2604082\">UI Resources</a></li><li><a href=\"/order-status-inquiry\" hqid=\"2781980\">Order Status Inquiry</a></li><li><a href=\"/itemsearch\" hqid=\"2781976\">Item Search</a></li><li><a href=\"/call-centerconfiguration\" hqid=\"1805028\">Call Center Configuration</a></li><li><a href=\"/returns-and-exchanges-in-contact-center\" hqid=\"2781984\">Returns and Exchanges</a></li><li><a href=\"/customer-service-insights-dashboard\" hqid=\"3574352\">Customer Service Insights Dashboard</a></li><li><a href=\"/cs_troubleshooting\" hqid=\"2803411\">Troubleshooting </a></li><li><a href=\"/transactional-emails\" hqid=\"2444800\">Transactional Emails</a></li><li><a href=\"/cross-org-visibility\" hqid=\"2674494\">Cross-Organization Visibility</a></li><li><a href=\"/overview\" hqid=\"2778910\">Overview and Navigation</a></li><li><a href=\"/kits-in-call-center\" hqid=\"3631688\">Kits in Call Center</a></li><li><a href=\"/order-modifications\" hqid=\"2786252\">Order Modifications</a></li></ul></div>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 160284,
  "scraped_at": "2025-08-09T21:54:51.700136",
  "content_clean": "Home ››Manhattan Active® Omni››Order Management››Process & Configuration Guides››Customer Service ››Transactional Texts Transactional Texts OverviewSupported Text Messages & Licensing RequirementsHow are Texts GeneratedHow to Enable TextsEnable the Text Message for Your Use CaseThird Party Text Message Service Provider Account ConfigurationsShort Code for Transactional TextConfigure the Third Party URL Shortening AccountConfigure Alternative Selling ChannelsText Profile PurposesMapping RequirementsCustomer Opt-In StatusActive® Omni Text TemplatesOrder ConfirmationReady for PickupPickup ReminderFinal Pickup ReminderShipment ConfirmationPickup ConfirmationDelivery ConfirmationDelivery DelayOut for Delivery ConfirmationDelivery AttemptsShip it Instead ConfirmationShip It instead Due to Store ShortsOrder CancellationReturn ReceivedReturn ConfirmationPay by Link Text and Reminder Sample Refund by Link Text Sample Prevent Shipments on Payment Failure SampleCustomizing Text MessagesText User ExitsHow to add a Custom Text MessageHow to Customize Text TemplatesHow to Modify Text Message TemplatesFeature ScopeMessage Types and QueuesImplementation FlavorHow to integrate Manhattan Active Omni with a Twilio account to send Digital Self-Service links without using a Bitly accountTroubleshootingText messages are not delivered One of the Order Process/Order Event is failingOrder confirmation text messages are not getting deliveredText Message outbounds are not getting published from order    Text Message outbounds are getting published from order but don't see any entries for the same in Text Component Logs I don't see short URLs in the text message Short URLs in the Text Message are not functional  Pickup Reminder Texts are not getting generatedInvalid data for the field BusinessChannelIdHow to test Delivery Tracking Notifications without real tracking numbersOptIn value is not copied from the customer order to return order there by preventing text communication for return order configured notificationsRelated Articles Overview Throughout the order life cycle, customers need the latest information about their orders. One way of providing these real-time updates is via transactional text messages which are triggered on key milestones such as order confirmation, shipment or when items are ready for pickup. As the central repository for orders, Manhattan Active® Omni provides capabilities to trigger transactional texts at such key milestones. When an event such as a shipment occurs, Active Omni publishes an outbound message which can be consumed and used to generate a text. There are a few options for generating texts: Active Omni publishes an outbound message including the formatted text body (JSON) and includes any relevant short URLs linking to Digital Self-Service (e.g. the shipment tracking URL). A third party SMS service provider delivers the text to the customer and owns the infrastructure side - delivery tracking, retries, read receipts, error handling, and analytics. Active Omni publishes an outbound order message (JSON) which does not include the text body, and a third party SMS service provider takes this input message, constructs and formats the text, and delivers to the customer. The SMS service provider owns the infrastructure side - delivery tracking, retries, read receipts, error handling, and analytics. Supported Text Messages & Licensing Requirements The following table lists the text messages provided out of the box and indicates which capabilities require an Enterprise Order Management (EOM) subscription. In general, the licensing requirements follow the pattern of the underlying entities that need to be in place to enable these capabilities. Text Messages and Licensing Requirements Use Case Requires EOM License Order Confirmation No Shipment Confirmation No Delivery Confirmation No Ready for Pickup (BOPIS) No Pickup Reminder (BOPIS) No Final Pickup Reminder (BOPIS) No Out for Delivery Confirmation No Ship To Instead No Delivery Delay No Delivery Attempt No How are Texts Generated When key order events occur, the order component publishes two types of messages: Publish Order and Text Messages. The outbound Text Message is specially catered to outbound texts, as opposed to the Publish Order message, which includes all details of an order and can be more challenging for text systems to parse. For instance, the Text Message contains only the information needed to include in the text (e.g. total shipped quantity), while the Publish Order message contains the entire order. When the Publish Order or Text Message is published from the order component, a queue in the text component takes the input JSON, selects a matching Text Template, and forms a Text Message. This Text Message is then interfaced to a third party SMS service provider which delivers the actual text to the customer. Or, a custom queue takes the input JSON from either the order or text component and processes it further, depending on which implementation option is used. The below diagrams illustrate how texts are generated: Order Confirmation Text Message Ready For Pickup Text Message Shipment Confirmation Text Message Delivery Confirmation Text Process Out for Delivery Text Process Pickup Reminder Process Flow How to Enable Texts 1: Login with system admin 2: Add an outbound message type in the order component POST /order/api/ServiceDefinition/outBoundMessageType/save { \"MessageType\": \"TextMessageServiceMSGType\", \"Transactional\": true, \"PersistMessageToMsgStore\": false, \"OutBoundQueues\": { \"QueueName\": \"queue.sendText\" } } 3. Create Inbound Message to receive the outbound message created in step 1. POST: {{url}}/text/api/ServiceDefinition/inBoundMessageType/save { \"MessageType\":\"TextMessageServiceMSGType\", \"NoOfConsumer\":10, \"Idempotent\":true, \"MinNoOfConsumer\":1, \"MaxNoOfConsumer\":6, \"MaxDesiredInstances\":6, \"ScaleUpTimeWindow\":10, \"ScaleDownTimeWindow\":20, \"Description\":\"Listener associated with this messageType will send the text to end-user.\", \"ServiceId\":\"TextService\", \"InBoundQueues\":{ \"QueueName\":\"queue.SendTextEvent\" } } Step 4: Add an extension point to message type mapping in the order component POST /order/api/ServiceDefinition/extPointToMessageType/save { \"ExtensionPointId\": \"Order:Order:Event:PublishText\", \"MessageType\": \"TextMessageServiceMSGType\" } Step 5: Clear the extension point cache DELETE /order/api/framework/cache/clearCache/ExtensionPoint::DomainEntity::system Step 6: Enable the 'Text Message' service, so that outbound messages are triggered on the relevant events. Refer Enable the Text Message for Your Use Case for more details. Helpful tools for Text configuration via API:POST {{url}}/order/api/order/orderConfig/save How to enable order confirmation text message in order config via API { \"ModTypeConfig\": [ { \"ModType\": { \"ModTypeId\": \"Order::Confirmed\" }, \"Status\": \"1000\", \"ConfigTextMessage\": [ { \"TextMessageId\": { \"TextMessageId\": \"OrderConfirmation\" } } ] } ], \"OrderConfigId\": \"EcommConfig\" } How to enable ready for pickup text message in order config via API { \"ModTypeConfig\": [ { \"ModType\": { \"ModTypeId\": \"QuantityDetail::QuantityStatus::Increase\" }, \"Status\": \"3600\", \"ConfigTextMessage\": [ { \"TextMessageId\": { \"TextMessageId\": \"ReadyForPickup\" } } ] } ], \"OrderConfigId\": \"EcommConfig\" } How to enable shipment confirmation text message in order config via API { \"ModTypeConfig\": [ { \"ModType\": { \"ModTypeId\": \"QuantityDetail::QuantityStatus::Increase\" }, \"Status\": \"7000\", \"ConfigTextMessage\": [ { \"TextMessageId\": { \"TextMessageId\": \"ShipmentConfirmation\" } } ] } ], \"OrderConfigId\": \"EcommConfig\" } Step 7: If you're using a third party SMS Service Provider to take the input Text Message or Publish Order message and form text messages, then configure the required text message formation in the third party system and skip to step 8. Step 8: If using the component message to form text message, then ensure the below profile purposes are synced to the appropriate organizations. For example, if text templates will vary by country, then each country-level organization (e.g. Sophias-US and Sophias-MX) should have the profiles synced at this level. txt::processDefinition txt::messaging txt::txtConfig We have text templates available out of the box already with sample Text Message Body including links to the Self-Service UIs in form of Short URLs. Note: Be sure to login as system admin, if your text profiles are owned by system. Otherwise, log in at the level where your text templates are managed. First, get the existing template to have as a starting point GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='<TemplateMsg>'\" Example: GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='CurbsidePickup'\" Get the contents of the \"MessageBody\" tag and copy to your clipboard Modify the contents of \"MessageBody\" tag as required Save the Template with modified \"MessageBody\" with the updated json in the body for the below mentioned API POST {{url}}/text/api/text/textMsgTemplate/save Step 9: Now you're ready to test! Confirm and then ship an order, and you should get two text messages, one for order confirmation and another for order shipment confirmation. To test the ready for pickup text, confirm and pick and order, and you should receive a text. If you're not seeing any texts, verify if you have performed above steps properly and try again. Enable the Text Message for Your Use Case Text Message How to Configure Order Confirmation Navigate to Order Configuration UI > Modification Rules > Select the Order radio button > Enable 'Publish Text' for the 'Confirm Order' row Shipment Confirmation Navigate to Order Configuration UI > Modification Rules > Select the Quantity radio button > In the Publish Text column for Fulfilled status, select Text Message 'ShipmentConfirmation' Pickup Confirmation Navigate to Order Configuration UI > Modification Rules > Select the Quantity radio button > In the Publish Text column for Fulfilled status, select Text Message 'PickupConfirmation' Out for Delivery Navigate to Order Configuration UI > Modification Rules > Select the Order radio button > Enable \"Publish Text\" for the \"Out for Delivery\" row > In the Publish Text column select \"Out for Delivery Notification\" option. Note: Order Config has to be synced to view the \"Out for Delivery\" row. Refer here for more details on how the carrier response is processed for Delivered. Delivery Delay Navigate to Order Configuration UI > Modification Rules > Select the Order radio button in Modification rules and enable Publish Text for \"Delivery Delay\" row. Note : Order Config has to be synced in order to view the \"Delivery Delay\" row in UI. Refer here for more details on how the carrier response is processed for Delivered. Delivery Attempts Navigate to Order Configuration UI > Modification Rules > Select the Order radio button in Modification rules and enable Publish Text for \"Delivery Attempts\" row. Note : Order Config has to be synced in order to view the \"Delivery Attempts\" row in UI. Refer here for more details on how the carrier response is processed for Delivered. Ready for Pickup Navigate to Order Configuration UI > Modification Rules > Select the Quantity radio button > Enable 'Text Message 'ReadyForPickup' for Picked status Pickup Reminder/Final Pickup Reminder Enable \"Ready for Pickup\" message, then add Order Line Milestone Monitoring Rules for Milestone Definition Id:\"OrderLine::Milestone::ReadyForPickup\", Description\": \"Order line is Ready For PickUp\" for the Event. Order Cancellation Navigate to Order Configuration UI > Modification Rules Select the Order radio button > Enable \"Publish Text\" for the \"Cancellation confirmation for Item(s) cancelled\" row > In the Publish Text column select \"Cancel Order\" option. Select the Order line radio button > Enable \"Publish Text\" for the Customer Initiated Cancel Line\", \"System Initiated Cancel Line' and System Initiated Decrease Quantity row > In the Publish Text column select \"Cancellation confirmation for Item(s) cancelled\". Carrier Scanned Navigate to Order Configuration UI > Modification Rules Select the Quantity radio button and select Text Message 'Return Carrier Scanned' for Carrier Scanned Quantity changes. Charge Back Navigate to Order Configuration UI > Modification Rules Select the Order radio button and select Text Message 'Return Charge Back Invoice\" for the Add Chargeback row. This configuration triggers the 'Text Message' JSONs to be published outbound from the order component when relevant events occur. If any of the above text messages are selected for any other mod type or status other than the respective mod type mentioned above, the text will not work (but no error will be thrown). If using a third party text provider to take the input Text Message or Publish Order message and form text messages, configure the required text message formation in the third party system. Third Party Text Message Service Provider Account Configurations Manhattan's Active Omni's transactional text messages requires integration with a third party text message service provider to send SMS text messages generated for various transactional  text message service configured in the application. Out of the box Manhattan's Active Omni supports integration with Twilio as certified text message service provider. Refer to store customer engagement configuration - text-message-configuration instructions for configuring third party text message service providers. In addition to the above configuration - the below mentioned property has to be configured with a common phone number for sending order confirmation text messages. Property Name Example Description Mandatory Component Path order.sms.from.phone 14092481501 Phone number provided by the third party text message provider for sending Order Confirmation text messages. If each organization has a different phone number, configure this parameter with organization Id. For example:  order.sms.from.phone.sophias-us. The general parameter (without organization) is not required if phone numbers are configured for each organization. Yes Order CONFIG/COM-MANH-CP-ORDER/ preferOrgOverLocation True / False For text messages other than order confirmation, the From Phone Number has to be configured at every Location -> Detail -> Phone. If you want to use the phone number configured in the above property for all the transactional text messages, rather than configuring them on each of the Locations - set this property -  preferOrgOverLocation to true in KV Store. By default, it will be considered as false. No Order CONFIG/COM-MANH-CP-ORDER/ Short Code for Transactional Text Most of the SMS providers have started providing Short Code's (also called short numbers, Common Short Code, or CSC) messaging commonly used to send business text messages and marketing campaigns to a user's mobile device. A short code is a specialized five to six-digit phone number used in one-way SMS and MMS messaging. Currently, order text messages do not support using Short Code’s for sending transactional text messages. This change will support using Short Code’s for From Phone Number instead of using the standard 10 digit long phone numbers for sending order transactional text messages. Only one Short Code can be configured for all the transactional text messages generated from order and retailer will not be able to configure and use separate / different short codes for each location. By nature, short codes can be used only for one-way text messaging and cannot be used for interactive text messaging. Configure the below-mentioned KV store property for configuring Short Code for all the transactional text messages Property Name Example Description Mandatory Component Path order.sms.from.shortCode 140921 The short Code as provided by the third party text message provider for sending text messages. If each organization has a different short code, configure this parameter with organization Id. For example:  order.sms.from.phone.sophias-us. The general parameter (without organization) is not required if sort codes are configured for each organization. Yes Order CONFIG/COM-MANH-CP-ORDER/ If order.sms.from.shortCode  is populated, the system will consider that this configuration will override all other configurations and use the SHort Code populated in this property as From Phone Number for all the transactional text messages generated irrespective of any other configurations like preferOrgOverLocation or phone number configured for the locations/stored at Location -> Detail -> Phone While publishing the text message outbound from order populate - isFromPhoneShortCode = true Given below are some examples of how order.sms.from.phone is derived by the system depending on various configurations. Type Location Phone order.sms.from.phone order.sms.from.phone.<profileId> order.from.phone.preferOrgOverLocation order.sms.from.shortCode order.sms.from.shortCode.<profileId> FromPhone derived Order Confirmation 8888888888 9999999999 false 9999999999 All except Order Confirm 8888888888 9999999999 false 8888888888 Any 8888888888 9999999999 false 12345 12345 Any 8888888888 9999999999 true 12345 12345 Any 8888888888 9999999999 9999999999 true 12345 67891 67891 Any 8888888888 9999999999 9999999999 true 12345 12345 Any 8888888888 9999999999 9111111111 true 9111111111 Configure the Third Party URL Shortening Account Manhattan Active® Omni's transactional text messages include links to Digital Self-Service pages. These URLs are shortened for text messages via integration with a third party URL shortening service. Out of the box, Manhattan's Active® Omni supports integration with Bitly as certified Custom URL Shortener. . Enable the Shorten Self-Service URL check box on the Order Configuration UI > General tab. This can be enabled only if Publish Order, Publish Order Line, or Publish Text is enabled in the modification rules. Configure the URLs that are required to be shortened for each text message type by navigating to the Text Message Shortening Configuration UI. If a text message ID and URL combination does not exist in the menu, it can be added through the configuration. Text message IDs can be found using the API GET {url}/order/api/order/textMessage and text message URLs can be found using the API GET {url}/order/api/order/textMessageUrl. Once an account is procured with Bitly or any other third party URL shortener, the following configurations have to be enabled in the application. Create the below mentioned Key Value Properties in KV Store and enter the account details obtained from Bitly or other third party shortening service provider. Key Value Property Name Example Description Mandatory Component Path order.shortening.service bitly Name of the third party provider No Order CONFIG/COM-MANH-CP-ORDER/ order.shortening.url https://api-ssl.bitly.com/v4/shorten URL of the third party provider Yes Order CONFIG/COM-MANH-CP-ORDER/ order.shortening.access.token 691e17348ae1b49386ade32411583a9cd2633382 Access token for the third party provider Yes Order CONFIG/COM-MANH-CP-ORDER/ order.shortening.domain http://sophias Domain name used in short URLs as registered with the third party provider No Order CONFIG/COM-MANH-CP-ORDER/ order.selfServiceHostName https://omni-sophias.omni.manh.com Host name Yes Order CONFIG/COM-MANH-CP-ORDER/ All the above mentioned properties are profile based and if required they can be configured differently for each profile in the application as illustrated below. Profile based properties will take precedence over the application level properties. Profile based properties can be defined for all the above mentioned properties or a subset of them. In case profile based properties are not defined, application will look for application level properties. For example, if you have different domain names for each country, the domain property can be configured as mentioned below and rest of the other properties are configured as mentioned above at the application level. Key Value Property Name Example order.shortening.domain.ecomorg-us http://sophias.us order.shortening.domain.ecomorg-uk http://sophias.uk order.shortening.domain.ecomorg-fr http://sophias.fr If this configuration is not enabled any outbound messages configured for publishing Self-Service URL will not include short URLs. If this configuration is enabled, any errors encountered while calling the third party URL shortening service will result in the failure of respective Order Event or process. To call the third party URL shortening service requisite environment properties domainName, accesstoken & service-url must be configured. Note: The Shorten Self-Service URL parameter is validated first in the URL shortening process. If the parameter is not enabled, the Text Message Shortening Configuration is not evaluated, and URLs are not shorted, even if the configuration exists in the Text Message Shortening Configuration UI. Note: If we are using a base template, then the Order Configuration Shorten Selfservice URL should be enabled. Otherwise, modify the template with {Order.DSSLongUrl} instead of {Order.DSSUrl}. Configure Alternative Selling Channels It is possible to configure different selling channels for text messages. However, different selling channels beyond the provided seed data that implement texts also need to configure Business Channels in the text component. Business Channel Configuration POST {{url}}/text/api/text/businessChannel/save { \"BusinessChannelId\": \"WEB-OUTLET\", \"Description\": \"Outlet Microsite orders\" } Text Profile Purposes If using Active Omni to form the text message, then ensure the below profile purposes are synced to the appropriate organizations. For example, if text templates vary by country, then each country-level organization (e.g. Sophias-US and Sophias-MX) should have the profiles synced at this level. Be sure to login as system admin, if your text profiles are owned by system. Otherwise, log in at the level where your text templates are managed. txt::processDefinition txt::messaging txt::txtConfig Mapping Requirements Customer Opt-In Status Text Messages can be sent to customers only if they have opted in to receive Text Messages for various transactions. Usually, the SMS Service Provider verifies if the To Phone number to which the Text Message is being delivered is registered with them for receiving text messages or not. If the customer has opted out from receiving Text messages for a particular Phone Number, SMS Text messages are not delivered to that phone number. Manhattans Active Omni tracks the OptIn Status for a particular Interaction Type (TextMessage in this case) for a particular Phone Number (Customer Phone Number in the Order in this case). OptIn status and customer phone number should be populated on the order for text messages to generate. The Text Message outbound application verifies \"OptIn\" status for the customer phone number -- in country code -- before publishing the message. If \"OptIn\" status is not populated or is \"OptOut\", the message outbound will not be generated. Opt In Status must be populated on the order. If the customer OptIn Status is not populated on Customer or Return order create, the order component retrieves it from the customer component in the customer's comm preference where customer component for Interaction Type Id is \"TextMessage\" for the CustomerId on the order. If the CustomerId on the order is not found in customer master then it is recommended to update the OptIn value through other process for both Customer and Return Order in order to recieve notifications. Refer here on how to customize to achieve this. If the customer's opt-in status is updated on the customer record after it's already been populated on an order, there is no update automatically made to the order. Existing orders must be updated to reflect changes in the customer's preferences. New orders, however, will use the updated customer opt-in status. Any phone number formatting is removed before publishing outbound Text Message. Sample API's to save OptIn Status for a order:POST {{url}}/order/api/order/order/save { \"CustomerCommPref\": [ { \"InteractionType\": { \"InteractionTypeId\": \"TextMessage\" }, \"OptInStatus\": { \"OptInStatusId\": \"OptIn\" }, \"PreferenceType\": { \"PreferenceTypeId\": \"All\" }, \"CountryCode\": \"+1\" } ], \"OrderId\": \"ECOM120059\", } POST {{url}}/order/api/order/order/save { \"CustomerCommPref\": [ { \"InteractionType\": { \"InteractionTypeId\": \"TextMessage\" }, \"OptInStatus\": { \"OptInStatusId\": \"OptOut\" }, \"PreferenceType\": { \"PreferenceTypeId\": \"All\" }, \"CountryCode\": \"+1\" } ], \"OrderId\": \"ECOM120059\", } Active® Omni Text Templates If using Active® Omni to generate the Text body, then a Text template is used to define key attributes such as from phone number, to phone number, and the Text body. If using Active Omni to generate the Text message body, a Text template is used to define key attributes such as from phone number, to phone number, and the Text body. Sample starter text templates are provided for the below use cases. Order Confirmation This text template is used when an order is confirmed. Message Used Rule Condition - When this Text gets generated Self-Service Links Included Text Outbound Message Order isConfirmed is updated to true ChangeLog.ModTypes.Order contains Order::Confirmed None Order Confirmation Text Template { \"TemplateMsgId\": \"OrderConfirmation\", \"Name\": \"OrderConfirmation\", \"Description\": \"Text message to inform the customer that order is confirmed\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Congratulations, Your order for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been confirmed. Order No.: ${Order.OrderId}\", \"ConditionalExpression\": \"Order.IsConfirmed == true\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Ready for Pickup This text is generated when a buy online, pick up in store item is ready for pickup. When the store picks items (and they move to 'Picked' status on the order), the items are considered ready for pickup. Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Quantity detail in picked status has increased ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::3600 & delivery method is pick up in store or ship to store I'm on my way Pickup Later (extend Pickup Window) Add Pickup Person Curbside Pickup Text Template { \"TemplateMsgId\": \"CurbsidePickup\", \"Name\": \"CurbsidePickup\", \"Description\": \"Text message to inform customer that items are ready for pickup at curbside\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup.<#if Order.DeliveryMethodSubType==\\\"Curbside\\\"> <#if Order.DSSOnMyWayUrl??> Please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}<#else> When you arrive at the store, stay in your vehicle and follow these instructions:<#if Order.DSSUrl??>${Order.DSSUrl}</#if></#if><#else>\\\"Come down to the store and pickup your order\\\"</#if>\", \"ConditionalExpression\": \"Order.DeliveryMethod contains \\\"PickUpAtStore\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Pickup Reminder This text message is generated when a customer has already received a 'ready for pickup' text, but their items are not yet picked up. Text Message Type Message Used Sections in Text Message Rule Condition - When this text gets generated Self-Service Links Included Pickup Reminder Text Outbound Message \"IsFinalPickupReminder\": false Order information Customer information Pick Up Notification Text is configured. Order Line Delivery Method is PickUp At Store  OR Ship To Store. Min Fulfillment Status Id >= 3600 AND < 7000. Appropriate Order Line Milestone Monitoring Rules are configured for Milestone Definition Id: \"OrderLine::Milestone::ReadyForPickup\"      Description\": \"Order line is Ready For PickUp\" for the Event. I'm on my way (for Curbside Pickup) Pickup Later (extend Pickup Window) Ship It Instead (convert BOPIS order to Ship To Address order - included if the fulfillment is eligible for conversion) Add Pickup Person Only lines using the following delivery methods can use this text template: Pickup At Store Ship To Store The reminder text is generated based on the Order Line Milestone Time Rules and Monitoring Rules configured. The Text Message Outbound cannot be customized to include any other Order or order line attributes. Requires Pick Up Notification Text enabled to reference. Does not support a consolidated order event for status update (pickup) simultaneously for more than one store. Pickup Reminder Messages are not generated: For units that were reallocated after a short. If order line status moves to Picked-Up (7000) at any given point of time If Pickup Reminder messages are configured to be generated with reference to the Pickup Expiry Date, they will be reevaluated and retriggered if required if the Pickup Expiry Date is updated. To configure Pickup Reminder Texts: Configuring Pickup Reminders Order Line Milestone Rules have to be configured for generating Pickup Reminder Email Messages. Order Line Milestone Rules can be configured by UI or backed API's. For details on backed API's please refer Swagger documentation. Order Line Milestone Rules UI can be accessd from the Omnifacade Menu: {{url}}/omnifacade/#/OrderLineMilestoneRule Time Rules and Monitoring Rules have to be configured depending on the requirement for generating Pickup Reminder Email Messages for each pair of Delivery Method and Order Type. If the Order Line is a Gift (IsGift = ture) - different Order Line Milestone Rules can be configured for Gift order lines. Two separate Events are available for configuring Pickup Reminder and Final Pickup Reminder email messages as listed below. OrderLine:OrderLine:Event:ReadyForPickupReminder OrderLine:OrderLine:Event:FinalPickupReminder Custom events can be created and added to the entity orderLineEventDefinition using the below mentioned API so that they are available to be configured in the Order Line Milestone Monitoring Rules. However existing Events cannot be deleted or modified. POST {{url}}/order/api/order/orderLineEventDefinition Request Body: { \"Description\": \"Custom Publish pickup reminder\", \"EventName\": \"OrderLine:OrderLine:Event:CustomReadyForPickupReminder\" } Some sample Order Line Milestone Rules are given below for configuring Pickup Reminders for different use cases. Use Case #1: After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 7 days to come and pick-up the items from the store. On the 8th day if there is a no show the customer the retailer will move the items back to shelf. The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below. Pickup Reminder – 1: 1 day after the store associate picks the items Pickup Reminder – 2: 2 days after the store associate picks the items Final Pickup Reminder: 1 day before the back to shelf date (that is 6th day from the date/time items were picked by store associate) Order Line Milestone - Monitoring Rules RuleId MilestoneDefinitionId Type Duration EventName RaiseAlways Pickup Reminder - 1 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 86400 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Pickup Reminder - 2 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 172800 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Final Pickup Reminder OrderLine::Milestone::PickedUp EXPECTED_TIME -86400 OrderLine:OrderLine:Event:FinalPickupReminder FALSE Order Line Milestone - Time Rules RuleId MilestoneDefinitionId Type Duration DependentMilestoneId DependentStatusId TimeProperty Picked-up Expected Time OrderLine::Milestone::PickedUp AFTER_MILESTONE 604800 OrderLine::Milestone::ReadyForPickup Sample json for configuring the Order Line Milestone - Monitoring Rules for this use case is given below API: POST {{url}}/order/api/order/orderLineMilestoneRule/save { \"RuleId\": \"ShipToStore-PickupReminders\", \"IsGift\": false, \"DeliveryMethodId\": \"ShipToStore\", \"OrderTypeId\": \"CallCenter Order\", \"OrderLineMonitoringRule\": [ { \"RuleId\": \"Pickup Reminder - 1\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::ReadyForPickup\", \"Duration\": 86400, \"EventName\": \"OrderLine:OrderLine:Event:ReadyForPickupReminder\", \"RaiseAlways\": false, \"Type\": \"ACTUAL_TIME\" }, { \"RuleId\": \"Pickup Reminder - 2\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::ReadyForPickup\", \"Duration\": 172800, \"EventName\": \"OrderLine:OrderLine:Event:ReadyForPickupReminder\", \"RaiseAlways\": false, \"Type\": \"ACTUAL_TIME\" }, { \"RuleId\": \"Final Pickup Reminder\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": -86400, \"EventName\": \"OrderLine:OrderLine:Event:FinalPickupReminder\", \"RaiseAlways\": false, \"Type\": \"EXPECTED_TIME\" } ], \"OrderLineExpectedTimeRule\": [ { \"DependentMilestoneId\": \"OrderLine::Milestone::ReadyForPickup\", \"TimeProperty\": null, \"RuleId\": \"Picked-up Expected Time\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": 604800, \"Type\": \"AFTER_MILESTONE\", \"DependentStatusId\": null } ], \"OrderLineMilestoneRuleShippingMethod\": [] } Use Case #2: After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 4 days to come and pick-up the items from the store. On the 5th day if there is a no show the customer the retailer will move the items back to shelf. The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below. Pickup Reminder – 1: 1 day after the store associate picks the items Pickup Reminder – 2: 2 days after the store associate picks the items Final Pickup Reminder: 3 days after the store associate picks the items Order Line Milestone - Monitoring Rules RuleId MilestoneDefinitionId Type Duration EventName RaiseAlways Pickup Reminder - 1 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 86400 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Pickup Reminder - 2 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 172800 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Final Pickup Reminder OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 259200 OrderLine:OrderLine:Event:FinalPickupReminder FALSE Use Case #3: After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is given a maximum of 7 days to come and pick-up the items from the store. On the 8th day if there is a no show the customer the retailer will move the items back to shelf. The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below. Pickup Reminder – 1: 3 days before the back to shelf date (that is 4th day from the date/time items were picked by store associate) Pickup Reminder – 2: 2 days before the back to shelf date (that is 5th day from the date/time items were picked by store associate) Final Pickup Reminder: 1 day before the back to shelf date (that is 6th day from the date/time items were picked by store associate) Order Line Milestone - Monitoring Rules RuleId MilestoneDefinitionId Type Duration EventName RaiseAlways Pickup Reminder - 1 OrderLine::Milestone::PickedUp EXPECTED_TIME -86400 OrderLine:OrderLine:Event:FinalPickupReminder FALSE Pickup Reminder - 2 OrderLine::Milestone::PickedUp EXPECTED_TIME -172800 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Final Pickup Reminder OrderLine::Milestone::PickedUp EXPECTED_TIME -259200 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Order Line Milestone - Time Rules RuleId MilestoneDefinitionId Type Duration DependentMilestoneId DependentStatusId TimeProperty Picked-up Expected Time OrderLine::Milestone::PickedUp AFTER_MILESTONE 604800 OrderLine::Milestone::ReadyForPickup Use Case #4: While creating the order customer informs the retailer about the date on which he expects to pickup the order and this date is captured in Order Line Requested Delivery Date. After the store associate picks the Items, from the date/time the lines moved to Picked status the customer is expected to pickup the order by the date mentioned in the order line requested delivery date. One day after the requested delivery date if there is a no show by the customer to pickup the order the retailer will move the items back to shelf. The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below. Pickup Reminder – 1: 1 day after the store associate picks the items Pickup Reminder – 2: 2 days after the store associate picks the items Final Pickup Reminder: 1 day before the back to shelf date (that is requested delivery date + 1 day) Order Line Milestone - Monitoring Rules RuleId MilestoneDefinitionId Type Duration EventName RaiseAlways Pickup Reminder - 1 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 86400 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Pickup Reminder - 2 OrderLine::Milestone::ReadyForPickup ACTUAL_TIME 172800 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Final Pickup Reminder OrderLine::Milestone::PickedUp EXPECTED_TIME -86400 OrderLine:OrderLine:Event:FinalPickupReminder FALSE Order Line Milestone - Time Rules RuleId MilestoneDefinitionId Type Duration DependentMilestoneId DependentStatusId TimeProperty Picked-up Expected Time OrderLine::Milestone::PickedUp TIME_PROPERTY OrderLine::Milestone::ReadyForPickup RequestedDeliveryDate Use Case #5: Driving Pickup Reminders with reference to Fulfillment Pickup Expiry Date or Return To Shelf Date : When the pickup at store or ship to store order is released to the store and store associates picks the items to keep them ready for the customer to come and pickup a Pickup Expiry Date is assigned to the Fulfillment by which date the retailer expects the customer to come and pickup the items from the Store. This is the last date by which the customer can pickup the items, else the retailer is free to return the items back to shelf and cancel the pickup. The customer can  request the retailer to extend the pickup window by calling up the store or using a self service portal, in which case the Pickup Expiry Date is updated to a future date requested. Retailer can use this Pickup Expiry Date to drive the Pickup Reminder communications to the customer. Note: Pickup Expiry Date can be interfaced to Order Line Additional through Status Update order event for Picked Status (3600) from Fulfillment and any updates to Pickup Expiry Date in Fulfillment can be relayed back to order using Fulfillment Update order event. Please refer to Types of Order Events for details (Status Update Events and Fulfillment Update Event) The retailer wants to send 2 Pickup Reminders and one final pickup reminder email as mentioned below. Pickup Reminder – 1: 3 day's before the Pickup Expiry Date Pickup Reminder – 2: 2 day's before the Pickup Expiry Date Final Pickup Reminder: 1 day before the Pickup Expiry Date Order Line Milestone - Monitoring Rules RuleId MilestoneDefinitionId Type Duration EventName RaiseAlways Pickup Reminder - 1 OrderLine::Milestone::PickedUp EXPECTED_TIME -259200 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Pickup Reminder - 2 OrderLine::Milestone::PickedUp EXPECTED_TIME -172800 OrderLine:OrderLine:Event:ReadyForPickupReminder FALSE Final Pickup Reminder OrderLine::Milestone::PickedUp EXPECTED_TIME -86400 OrderLine:OrderLine:Event:FinalPickupReminder FALSE Order Line Milestone - Time Rules RuleId MilestoneDefinitionId Type Duration DependentMilestoneId DependentStatusId TimeProperty Picked-up Expected Time OrderLine::Milestone::PickedUp TIME_PROPERTY OrderLine::Milestone::ReadyForPickup PickupExpiryDate Sample Order Line Milestone configuration API: { \"OrderLineMonitoringRule\": [ { \"RuleId\": \"Pickup Reminder - 1\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": -259200, \"EventName\": \"OrderLine:OrderLine:Event:ReadyForPickupReminder\", \"RaiseAlways\": false, \"Type\": \"EXPECTED_TIME\" }, { \"RuleId\": \"Pickup Reminder - 2\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": -172800, \"EventName\": \"OrderLine:OrderLine:Event:ReadyForPickupReminder\", \"RaiseAlways\": false, \"Type\": \"EXPECTED_TIME\" }, { \"RuleId\": \"Final Pickup Reminder\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": -86400, \"EventName\": \"OrderLine:OrderLine:Event:FinalPickupReminder\", \"RaiseAlways\": false, \"Type\": \"EXPECTED_TIME\" } ], \"DeliveryMethodId\": \"PickUpAtStore\", \"RuleId\": \"PickUpAtStore-PickupReminders\", \"OrderLineExpectedTimeRule\": [ { \"DependentMilestoneId\": \"OrderLine::Milestone::ReadyForPickup\", \"TimeProperty\": \"PickupExpiryDate\", \"RuleId\": \"Picked-Up Expected Time\", \"MilestoneDefinitionId\": \"OrderLine::Milestone::PickedUp\", \"Duration\": null, \"Type\": \"TIME_PROPERTY\", \"DependentStatusId\": null } ], \"IsGift\": false, \"OrderTypeId\": \"CallCenter Order\", \"OrderLineMilestoneRuleShippingMethod\": [] } Note: Create different set of Order Line Milestone Rules for PickUp AT Store and Ship To Store Delivery Methods for each order type For Ship To Store Delivery Method - Pickup Reminder will be generated only for the Pickup Leg and not for the Merge Leg These configurations do not verify if a Pickup Notification email messages was already published for the order line; they are entirely dependent on the Order Line Milestone Rules configurations Pickup Reminder messages will be generated only if the Events specified  for Pickup Reminder and Final Pickup Reminder are configured in the Order Line Milestone Rules Pickup Reminder messages will be consolidated for all the order lines for which the units were moved to Picked status for an order for Pick Up At Store delivery method, assuming all the order lines / releases are moved together to Picked status For Ship To Store Delivery Method – One set of Pickup Reminder messages will be generated for every transaction that moves the units to Picked Status and are not consolidated in to one set of Pickup Reminder messages per order like Pickup At Store lines Pickup Reminder messages will generated only if the Events specified  for Pickup Reminder and Final Pickup Reminder are configured in the Order Line Milestone Rules Scheduler is not required for processing order line milestones as it is taken care through delayed messages process. Configure the Text Message Template below Pick Up Reminder Text Template { \"MessageSuffix\": null, \"Description\": \"Text message to remind the customer to pickup the order\", \"CreatedBy\": \"admin@ecomorg.com\", \"TemplateMsgId\": \"PickupReminder\", \"ConditionalExpression\": \"Order.IsFinalPickupReminder == false\", \"MessagePrefixInterval\": 0, \"Name\": \"PickupReminder\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"Unique_Identifier\": \"\", \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Another gentle reminder that your items are ready for pickup<#if Order.LocationName??> at the '${Order.LocationName}'</#if>.<#if Order.DSSOnMyWayUrl??> If you are doing curbside pickup, please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}<#else> If you are doing a curbside pickup please follow these instructions ${(Order.DSSUrl)!\\\"'Come down to the store and pickup your order'\\\"}.</#if><#if Order.DSSExtendPickupWindowURL??> If you want to extend your pickup window please click on ${(Order.DSSExtendPickupWindowURL)!}</#if>\" } Final Pickup Reminder This text message is generated when the final pickup reminder occurs in scenarios when customers have received a 'ready for pickup' text, but their items are not yet picked up. Text Message Type Message Used Sections in Text Message Rule Condition - When this text gets generated Self-Service Links Included Final Pickup Reminder Text Outbound Message \"IsFinalPickupReminder\":true Order information Customer information Ready for Pickup text is configured. Order Line Delivery Method is PickUp At Store OR Ship To Store. Min Fulfillment Status Id >= 3600 AND < 7000. Appropriate Order Line Milestone Time Rule are configured for Milestone Definition Id: \"OrderLine::Milestone::PickedUp\"  Description\": \"Order line is PickedUp\". Appropriate Order Line Milestone Monitoring Rules are configured for Milestone Definition Id: \"OrderLine::Milestone::PickedUp\"  Description\": \"Order line is PickedUp\". I'm on my way (for Curbside Pickup) Pickup Later (extend Pickup Window) Ship It Instead (convert BOPIS order to Ship To Address order - included if the fulfillment is eligible for conversion) Add Pickup Person Only lines using the following delivery methods can use this text template: Pickup At Store Ship To Store The reminder text is generated based on the Order Line Milestone Time Rules and Monitoring Rules configured. The Text Message Outbound cannot be customized to include any other Order or order line attributes. Requires Pick Up Notification Text enabled to reference. Does not support a consolidated order event for status update (pickup) simultaneously for more than one store. Final Pickup Reminder Messages are not generated: For units that were reallocated after a short. If order line status moves to Picked-Up (7000) at any given point of time If messages are configured to be generated with reference to the Pickup Expiry Date, they will be reevaluated and retriggered if required if the Pickup Expiry Date is updated. Final Pick Up Reminder { \"MessageSuffix\": null, \"Description\": \"Text message to inform customer that this is the final Pickup Reminder\", \"CreatedBy\": \"admin@ecomorg.com\", \"TemplateMsgId\": \"FinalPickupReminder\", \"ConditionalExpression\": \"Order.IsFinalPickupReminder == true\", \"MessagePrefixInterval\": 0, \"Name\": \"FinalPickupReminder\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"Unique_Identifier\": \"\", \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Today's the last day to pick up your order<#if Order.LocationName??> at the '${Order.LocationName}'</#if>.<#if Order.DSSOnMyWayUrl??> If you are doing curbside pickup, please let us know when you are on your way and then follow the instructions: ${Order.DSSOnMyWayUrl}<#else> If you are doing a curbside pickup please follow these instructions ${(Order.DSSUrl)!\\\"'Come down to the store and pickup your order'\\\"}.</#if><#if Order.DSSExtendPickupWindowURL??> If you want to extend your pickup window please click on ${(Order.DSSExtendPickupWindowURL)!}</#if>.<#if Order.DSSPickupConversionURL??> If you want us to ship it instead please click on ${(Order.DSSPickupConversionURL)!}</#if>\" } Shipment Confirmation This Text template is used when lines with ship to address delivery method are shipped. One Text is generated each time a unit ships, so if an order ships in three shipments, then three Texts are generated. Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Tracking detail section On the Way Items section (details of items being shipped in current shipment, grouped by unique PackageId) Quantity detail in fulfilled status has increased ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7000 Track Package Return Items Shipment Confirmation Text Template { \"TemplateMsgId\": \"ShipmentConfirmation\", \"Name\": \"ShipmentConfirmation\", \"Description\": \"Text message to inform customer that items are shipped\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Shipped: Hi ${Order.CustomerFirstName}, <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> has been shipped. Track at <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>. If you want to return your item(s) then click here: <#if Order.DSSReturnUrl??>${Order.DSSReturnUrl}<#else></#if>\", \"ConditionalExpression\": \"Order.Status contains \\\"7000\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Pickup Confirmation This text is generated when a buy online, pick up in store item is picked up. When the customer picks up the items from the pickup store, the system will send a pickup confirmation text. Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Items Picked Quantity detail in fulfilled status has increased ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7000 Track Package Return Items Pickup Confirmation Text Template { \"TemplateMsgId\": \"PickupConfirmation\", \"Name\": \"PickupConfirmation\", \"Description\": \"Text message to inform customer that items are picked up\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"PickedUp: Hi ${Order.CustomerFirstName}, <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> has been picked up.\", \"ConditionalExpression\": \"Order.TextMessageType contains \\\"PickupConfirmationProcessing\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Delivery Confirmation This text template is used when lines with ship to address delivery method are delivered to the customer. One Text is generated each time a package is delivered. For example, if an order is shipped in three shipments and delivered one after another, then three Texts are generated Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Tracking detail section Delivered Items section (details of items included in package delivered most recently) Quantity detail in delivered status has increased ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::7500 Track Package Return Items Delivery Confirmation Text Template { \"TemplateMsgId\": \"DeliveryConfirmation\", \"Name\": \"DeliveryConfirmation\", \"Description\": \"Text message to inform customer that items are delivered\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Delivered: Hi ${Order.CustomerFirstName}, <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> has been delivered. Track at <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>. If you want to return your item(s) then click here: <#if Order.DSSReturnUrl??>${Order.DSSReturnUrl}<#else></#if>\", \"ConditionalExpression\": \"Order.Status contains \\\"7500\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Delivery Delay This text template is used when lines with ship to address delivery method are delayed. One Text is generated each time a package is delayed. For example, if an order is shipped in three shipments and delayed one after another, then three Texts are generated. Mesage Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Tracking detail section Delivery Delayed Items section (details of items included in package delivered most recently) Order.TrackingInfo.Tracking detail statusSubType in DeliveryDelay Order.TrackingInfo.EstimatedDeliveryDate is updated to future date Track Package Delivery Delay Text Message { \"TemplateMsgId\": \"DeliveryDelayedTemplate\", \"Name\": \"DeliveryDelay\", \"Description\": \"Text message to inform customer that delivery is delayed.\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Delivery Delayed: Hi ${Order.CustomerFirstName}, your shipment of <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> is delayed. Estimated delivery is ${Order.EstimatedDeliveryDate}. Track at <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>\", \"ConditionalExpression\": \"Order.Status contains \\\"DeliveryDelay\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } Out for Delivery Confirmation This text template is used when lines with ship to address delivery method are out for delivery to the customer. One Text is generated each time a package is out for delivery. For example, if an order is shipped in three shipments and out for delivery one after another, then three Texts are generated. Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Tracking detail section Out for Delivery Items section (details of items included in package delivered most recently) Order.TrackingInfo.Tracking detail statusSubType in OutForDelivery Order Mod Type Config: Out for Delivery : Publish Text \"Out for Delivery Notification\" Track Package Return Items Out For Delivery Text Template { \"TemplateMsgId\": \"OutForDeliveryTemplate\", \"Name\": \"OutForDelivery\", \"Description\": \"Text message to inform customer that items are out for Delivery.\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Out for Delivery: Hi ${Order.CustomerFirstName}, <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> is out for delivery. Track at <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>. If you want to return your item(s) then click here: <#if Order.DSSReturnUrl??>${Order.DSSReturnUrl}<#else></#if>\", \"ConditionalExpression\": \"Order.Status contains \\\"OutForDelivery\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Delivery Attempts This text template is used when lines with ship to address delivery method are delayed. One Text is generated each time a package is delayed. For example, if an order is shipped in three shipments and delayed one after another, then three Texts are generated. Mesage Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Tracking detail section Delivery Attempt Items section (details of items included in package delivered most recently) Order.TrackingInfo.Tracking detail statusSubType in DeliveryAttempt Track Package Delivery Attempt Text Message { \"TemplateMsgId\": \"DeliveryAttemptedTemplate\", \"Name\": \"DeliveryAttempt\", \"Description\": \"Text message to inform customer that delivery is attempted.\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"MessageBody\": \"Delivery Attempted: Hi ${Order.CustomerFirstName}, we attempted to deliver your package of <#if (Order.Items?size > 0) && (Order.Items?size == 1) >${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> but unfortunately, we couldn’t. Track at <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>\", \"ConditionalExpression\": \"Order.Status contains \\\"DeliveryAttempt\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" } } Ship it Instead Confirmation This text message is generated when BOPIS items are successfully converted to a ship to address delivery method. Text Message Type Message Used Sections in Text Message Rule Condition - When this text gets generated Ship It Instead Confirmation Text Outbound Message Order information Customer information Order line delivery method is Ship To Address and the prior delivery method was Pickup At Store Min Fulfillment Status Id = 3600 Max Fulfillment Status Id = 3600 Ship It Instead Confirmation Text Template { \"MessageSuffix\": null, \"Description\": \"Text message to inform customer that delivery method conversion is successful\", \"TemplateMsgId\": \"DMConversionConfirmation\", \"ConditionalExpression\": \"Order.PriorDeliveryMethod contains \\\"PickUpAtStore\\\"\", \"MessagePrefixInterval\": 0, \"Name\": \"DMConversionConfirmation\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}, this is a confirmation that we would be shipping your items to your address you have chosen.\" } ] } Ship It instead Due to Store Shorts This text message is generated when the shorted BOPIS order line is eligible for conversion to ship to address and needs customer consent for the conversion of delivery method. Text Message Type Message Used Sections in Text Message Rule Condition - When this text gets generated Customer Consent for Ship It Instead due to store shorts Text Outbound Message Order information Customer information OrderLine.RequestStatus = Open ; and OrderLine.CustomerRequestType = StoreShortConversion Ship It Instead due to store shorts Text Template { \"TemplateMsgId\": \"StoreShortShipItInstead\", \"Name\": \"StoreShortShipItInstead\", \"Description\": \"Text message to customer providing them a link to convert their shorted BOPIS order to STA\", \"MessagePrefix\": null, \"MessageSuffix\": null, \"ConditionalExpression\": \"Order.RequestStatus contains \\\"Open\\\" && Order.CustomerRequestType contains \\\"StoreShortConversion\\\"\", \"MessagePrefixInterval\": 0, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! We’re sorry - Your <#if (Order.Items?size > 0) && (Order.Items?size == 1) > ${Order.Items[0]} item<#else>${Order.Items[0]} +${Order.Items?size-1} more item(s)</#if> are not available for in-store pickup at the ${Order.LocationName} store.<#if Order.DSSPickupConversionURL??>If you want us to ship them to you instead, click here: ${(Order.DSSPickupConversionURL)!} Otherwise, we’ll cancel these items and you will not be charged.</#if>\" } ] } Order Cancellation This text template is used when lines are cancelled on a customer order, either customer initiated or system initiated. One text is generated each time units are cancelled.  For example, if an order with three lines, each line is cancelled separately, then three texts are generated. In case of customer cancellation, the system determines a cancellation is customer-initiated if Cancellation Initiated By is 'Customer' for the cancel reason used on the order line. This text message is generated only if the cancel reason is configured as customer-initiated. In case of system cancellation, this text is generated when an order line is cancelled by the system due to unavailability of item(s) during allocation or due to short message received from fulfillment or cancellation scheduled for milestone  \"AllocationDue\" or \"ReleaseDue\". This text message is generated only if the cancel reason is configured as system-initiated. The system determines a cancellation is system-initiated if the Cancellation Initiated By is 'System' for the cancel reason used on the order line. MAO stamps below default cancel reasons in different scenarios. For a successful email generation in such case, the reasons should be defined and the Cancellation Initiated By should be 'System'. CancelUnallocatedUnits(\"CancelUnallocatedUnits\") AllocationDue (\"AllocationDue\") ReleaseDue(\"ReleaseDue\") Note: Customer Initiated partial qty cancellation notification is currently not supported. Message Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Order isCancelled is updated to true ChangeLog.ModTypes.Order contains OrderLine::Cancelled::Customer ChangeLog.ModTypes.Order contains OrderLine::Cancelled::System ChangeLog.ModTypes.Order contains OrderLine::Quantity::Decrease::System N/A Order Cancellation Text Template{ \"Messages\": null, \"ProfileId\": \"ecomorg\", \"MessageSuffix\": null, \"MessagePrefixInterval\": 0, \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"Description\": \"Text message to inform the customer that order is cancelled\", \"TemplateMsgId\": \"OrderCancellation\", \"ConditionalExpression\": \"Order.IsCancelled == true\", \"Name\": \"OrderCancellation\", \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your order for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been cancelled. Order No.: ${Order.OrderId}\" } Return Received This text template is used when return order lines have been received. One text is generated each time a receipt message is consumed. Mesage Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information All the lines in the return that are received are Return Lines with Receipt Expected = true ChangeLog.ModTypes.QuantityDetail contains QuantityDetail::QuantityStatus::Increase::18000 Delivery Method = Ship to Return Center Text message will NOT be triggered for store return delivery method. Return order lines are not on hold N/A Return Receipt Text Template{ \"Messages\": null, \"ProfileId\": \"ecomorg\", \"MessageSuffix\": null, \"MessagePrefixInterval\": 0, \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"Description\": \"Text message to inform the customer that return items have been received\", \"TemplateMsgId\": \"ReturnReceived\", \"ConditionalExpression\": \"Order.Status contains \\\"18000\\\"\", \"Name\": \"ReturnReceived\", \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your return for ${Order.NumberOfItems} item(s) for ${Order.Quantity} quantity(s) has been received. Return No.: ${Order.OrderId}\" } Return Confirmation This text template is used when a return order has been confirmed. One text is generated each time a return is confirmed. This text message is limited to return orders and is not sent for exchange orders. Mesage Used Sections in Text Message Rule Condition - When this Text gets generated Self-Service Links Included (short URL) Text Outbound Message Order information Customer information Order isConfirmed is updated to true ChangeLog.ModTypes.Order contains Order::Confirmed Order is type Return MaxReturnStatus of the return order Awaiting Return (11000.000) N/A Return Confirmation Text Template{ \"Name\": \"ReturnConfirmation\", \"MessageSuffix\": null, \"Description\": \"Text message to inform the customer that return order is confirmed\", \"TemplateMsgId\": \"ReturnConfirmation\", \"ConditionalExpression\": \"Order.IsReturnConfirmed == true\", \"MessagePrefixInterval\": 0, \"Process\": null, \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your <#if (Order.NumberOfReturnItems > 0) && (Order.NumberOfExchangeItems == 0)>return ${Order.OrderId} for ${Order.NumberOfReturnItems} item(s) for ${Order.ReturnQuantity} qty <#elseif (Order.NumberOfReturnItems == 0) && (Order.NumberOfExchangeItems > 0)> exchange ${Order.OrderId} for ${Order.NumberOfExchangeItems} item(s) for ${Order.ExchangeQuantity} qty<#else>return ${Order.OrderId} for ${Order.NumberOfReturnItems} item(s) for ${Order.ReturnQuantity} qty and exchange for ${Order.NumberOfExchangeItems} item(s) for ${Order.ExchangeQuantity} qty</#if> has been confirmed.<#if Order.DSSReturnTrackUrl??> Track it here. ${Order.DSSReturnTrackUrl}</#if>\" } Pay by Link Text and Reminder Sample Pay by Link text is generated when the contact center agent clicks the 'Send Text' button in the Pay by Link section, and a reminder text will be sent if the system has not received payment from the customer within the configured number of hours. Email Message Type Message Used Sections in Email Message Rule Condition - When this email gets generated Self-Service Links Included PayByLink Text Outbound Message IsPayByLinkReminder: false Order information When the CSR clicks 'Send Text', the customer receives a text with the link to add payment in Digital Self-Service. Digital Self-Service Pay By Link URL PayByLink    Reminder Text Outbound Message Order information If payment is not received within X hours (PayByLink reminder threshold), the customer will receive a reminder text to make payment for orders. Digital Self-Service Pay By Link URL Pay by Link Text Template { \"Messages\": null, \"ProfileId\": \"ecomorg\", \"MessageSuffix\": null, \"UpdatedTimestamp\": \"2023-05-24T05:05:04.977\", \"Description\": \"Text message to send the Pay By Link to the customer.\", \"CreatedBy\": \"admin@ecomorg.com\", \"CreatedTimestamp\": \"2023-05-24T05:05:04.977\", \"TemplateMsgId\": \"PayByLink\", \"ConditionalExpression\": \"Order.TextMessageType contains \\\"PayByLink\\\"\", \"MessagePrefixInterval\": 0, \"Process\": \"/fwcore/seeddata/import\", \"Name\": \"PayByLink\", \"UpdatedBy\": \"admin@ecomorg.com\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"ContextId\": \"220a08cb-d801-4bbf-b566-d1b08733a252\", \"PK\": \"6849047049779742581\", \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"Unique_Identifier\": \"6849047049779742581__PayByLink\", \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your order is almost complete. Please click the link to add payment: ${Order.DSSUrl}\" } Pay by Link Reminder Text Template { \"Messages\": null, \"ProfileId\": \"base\", \"MessageSuffix\": null, \"UpdatedTimestamp\": \"2023-06-08T05:49:15.985\", \"Description\": \"Text message to send the Pay By Link reminder to the customer.\", \"CreatedBy\": \"seeddata-importer\", \"CreatedTimestamp\": \"2023-06-08T05:49:15.985\", \"TemplateMsgId\": \"PayByLinkReminder\", \"ConditionalExpression\": \"Order.TextMessageType contains \\\"ReminderForPBL\\\"\", \"MessagePrefixInterval\": 0, \"Process\": null, \"Name\": \"PayByLinkReminder\", \"UpdatedBy\": \"seeddata-importer\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"ContextId\": \"f2626752-a8f4-44e4-968b-ecb2ab88c60a\", \"PK\": \"6862033559765805169\", \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"Unique_Identifier\": \"6862033559765805169__PayByLinkReminder\", \"MessageBody\": \"Hi ${Order.CustomerFirstName}! We have not received payment for your order yet. Please click the link to add payment: ${Order.DSSUrl}\" } Refund by Link Text Sample Refund by Link text is generated when the contact center agent clicks the 'Send Text' button in the Refund by Link section. Email Message Type Message Used Sections in Email Message Rule Condition - When this email gets generated Self-Service Links Included RefundByLinkForRefundProcessing Text Outbound Message Order information When the CSR clicks 'Send Text', the customer receives a text with the link to add new payment method for refund processing in Digital Self-Service. Digital Self-Service Refund By Link URL Refund by Link Text Template { \"Description\": \"Text message to send the Refund By Link to the customer.\", \"TemplateMsgId\": \"RefundByLinkForRefundProcessing\", \"ConditionalExpression\": \"Order.TextMessageType contains \\\"RefundByLinkForRefundProcessing\\\"\", \"MessagePrefixInterval\": 0, \"Name\": \"RefundByLink\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"SequenceNumber\": null, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Please input a new payment method to receive your refund for Order No.: ${Order.OrderId} by clicking on the link: ${Order.DSSUrl}\" } Prevent Shipments on Payment Failure Sample A text is generated when a release is cancelled due to payment failure. Message Used Sections in Email Message Rule Condition - When this email gets generated Self-Service Links Included PaymentFailedOrder Text Outbound Message Order information Customer information Items Order Summary cancellationTrackerLineStatus / orderLineId / orderId status: Success cancelReasonId > Cancel Release on Payment Failure SelfServiceOrderHistoryUrl ##toggle-PaymentFailedOrderTextSample##38## Customizing Text Messages The diagram below illustrates how the text message flow can be customized at various stages. Customizing Text messages Text User Exits User exits can be implemented to customize the text process. For example, to add/remove attributes required by the URL shortening provider to the Text Message published outbound from the order component, implement the Order:Order:UserExit:PrePublishTextMessage extension point. Unlike transactional emails, the outbound text payload from the order component cannot be customized via response template and requires a user exit implementation if additional attributes are required. How to add a Custom Text Message If a new Text Message outbound is required in addition to the out of the box texts, then custom code must be implemented. Text Messages cannot be added via configuration, because these messages require logic to form a curated outbound message. To add a custom text message: Create a Text Message Outbound object Create a service with the required mod type and conditions to publish the Text Message (Note: Once one custom service/API is implemented, it can be used for multiple custom Text Message Types. In this service, use TextMessageId from the input to select a different method by Text message type.) Create a matching Text Template to generate the text. How to Customize Text Templates Sample text templates are available out of the box. These templates receive incoming order data and generate the final outbound text message. To view and modify these templates: Navigate to the Text Message Template Configuration UI Modify the text configuration The following can be configured in text templates: Conditional Expression: These filter conditions are evaluated against the incoming payload to select a template and generate the SMS text. For example, if a condition includes DeliveryMethod = ShipToAddress, then the outbound Text Message payload from the order component must include an order line with DeliveryMethod = ShipToAddress to select this template. Message Body: SMS body text Text Body HTML: defines the text body; can be customized per business requirements or for new themes. This uses a Freemarker template. Message Suffix, Message Suffix Interval, Message Prefix and Message Prefix Interval Description: description of the template configuration. Used for configuration management. To customize a Text template or add a new one, use a sample template and modify the desired attributes. Sample Text Message Template{ \"MessageSuffix\": null, \"Description\": \"Text message to inform customer that items are ready for pickup at curbside\", \"TemplateMsgId\": \"CurbsidePickup\", \"ConditionalExpression\": \"Order.DeliveryMethod contains \\\"PickUpAtStore\\\"\", \"MessagePrefixInterval\": 0, \"Name\": \"CurbsidePickup\", \"MessagePrefix\": null, \"MessageSuffixInterval\": 0, \"TextMessageType\": { \"TextMessageTypeId\": \"Transactional\" }, \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup. When you arrive at the store, stay in your vehicle and follow these instructions: <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>\" } How to Modify Text Message Templates In the illustration below Ready For Pickup Text Message Template is modified to conditionally change the message body depending on the Delivery Method Sub type for the order line. Step#1: From Postman - GET {{url}}/text/api/text/textMsgTemplate?query=\"Name='CurbsidePickup'\" Step#2: Copy Message Body from the Response json to Notepad \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup. When you arrive at the store, stay in your vehicle and follow these instructions: <#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if>\" Step#3: Change it to include conditions to display the Message Body depending on whether it is Curbside Pickup or InStore Pickup: \"MessageBody\": \"Hi ${Order.CustomerFirstName}! Your items are ready for pickup. <#if Order.DeliveryMethodSubType=\\\"Curbside\\\"> When you arrive at the store, stay in your vehicle and follow these instructions:<#if Order.DSSUrl??>${Order.DSSUrl}<#else></#if><#else>\\\"Come down to the store and pickup your order\\\"</#if>\" Step#4: Replace it with the message body in the textMsgTemplate that you got in Step#1 above Step#5: From Postman - POST {{url}}/text/api/text/textMsgTemplate/save - paste json modified in Step#4 in the Body Feature Scope Restricting the hours text messages are sent to customers is not supported in Active Omni; this should be controlled via the third party text provider. For example, if a retailer wants to deliver text messages between 9 AM and 9 PM, this must be done by the text provider. Ship Confirmation Message Only lines using ship to address delivery method can use this text template Ship To Store, Pickup At Store, Store Sales, and Text delivery methods are not supported Backordered and canceled quantities are not published in ship confirmation text message Ready for Pickup Message Only lines using Pickup At Store or Ship To Store delivery method can use this text template The Text outbound message does not support consolidated order event for status update (pickup) simultaneously for more than one store Ship It Instead Confirmation Message Only when an \"PickupAtStore\" order (BOPIS) is successfully converted to \"ShipToAddress\" (Ship To Home) order and mod type OrderLine::UpdateBOPISToShipToAddress is triggered this text template can be used. Message Types and Queues Producer Component Message Type Type Queue Business Significance Consuming Component Order TextMessageServiceMSGType Outbound queue.sendTextEvent Text will not be generated if messages are not published or consumed from this queue component.message Text SendTextEventMSGType Inbound queue.sendTextEvent Text will not be generated if messages are not published to this queue Third party SMS Service provider Implementation Flavor How to integrate Manhattan Active Omni with a Twilio account to send Digital Self-Service links without using a Bitly account To send Digital Self-Service links without relying on a Bitly account, configure your Twilio account to act as the short URL service provider. You can use any supported URL shortening service by working with the services team to populate the following KV store key-value properties: order.shortening.service order.shortening.url order.shortening.access.token order.shortening.domain Order.selfServiceHostName Troubleshooting Text messages are not delivered Verify the status of the text messages sent to Twilio / third party text message providers in the logs in text component and see if any error code is populated. If so, try to rectify it. {{url}}/text/api/text/textMessage Text Component Log Check if the environment URL is configured in KV for below property text.server.base.url Ensure the below Message Type and Extension Point To Message Type exist. If they do not, create them: GET /order/api/ServiceDefinition/outBoundMessageType - look for MessageType\": \"TextMessageServiceMSGType\" GET /order/api/ServiceDefinition/extPointToMessageType - look for \"ExtensionPointId\": \"Order:Order:Event:PublishText\" If they do not exist, create them: Login with system admin POST /order/api/ServiceDefinition/outBoundMessageType/save { \"MessageType\": \"TextMessageServiceMSGType\", \"Transactional\": true, \"PersistMessageToMsgStore\": false, \"OutBoundQueues\": { \"QueueName\": \"queue.sendText\" } } Add an extension point to message type mapping in the order component POST /order/api/ServiceDefinition/extPointToMessageType/save { \"ExtensionPointId\": \"Order:Order:Event:PublishText\", \"MessageType\": \"TextMessageServiceMSGType\" } If there are no errors found, ask services to help troubleshoot One of the Order Process/Order Event is failing Check if the Publish Text Message Service associated with a ModType has errors OR if Shorten URL is enabled, check if there are errors in the third party URL Shortener calls. If errors exist, you either need to rectify the errors or uncheck the URL Shortener from the respective Order Configuration temporarily until the exceptions with third party URL Shortener service provider calls are resolved. Order confirmation text messages are not getting delivered Check if you have configured appropriate From Phone Number in order.sms.from.phone KV property Text Message outbounds are not getting published from order Check if all outbound message types and extension points are configured properly as described above. Text Message outbounds are getting published from order but don't see any entries for the same in Text Component Logs Check if queue.publishText has consumers to consume the messages in Text Component Check if queue.sendText exists and if messages are getting queued up there. If yes, contact a third party text message provider and resolve the issue. I don't see short URLs in the text message Check if you have configured for shortening URLs in Order Config Check if you have properly configured requisite KV Store Properties for third party URL shortening provider/Bitly Short URLs in the Text Message are not functional Check if Long URL attribute populated in the text outbound message works Verify if you have configured KV Store property - order.selfServiceHostName - with the Host Name Pickup Reminder Texts are not getting generated Verify if Order Line Monitoring Rules are configured for the Delivery Method and Order Type Verify if appropriate Order Line Monitoring Rules are configured for the appropriate Miles Stone Id and Event Verify if the Order Line Milestones and Order Line Milestone Events are populated as per the configurations and Next Event Time is also populated accordingly. Invalid data for the field BusinessChannelId If your client uses any different selling channels beyond the provided seed data and is implementing texting, be sure to also configure these as Business Channels in the text component. Text messages for our custom selling channel will fail due to \"Invalid data for the field BusinessChannelId\" despite having configured the Selling Channel Id. POST {{url}}/text/api/text/businessChannel/save { \"BusinessChannelId\": \"WEB-OUTLET\", \"Description\": \"Outlet Microsite orders\" } How to test Delivery Tracking Notifications without real tracking numbers After the necessary configurations are done and if you wish to see if notifications are generated, you can simulate the carrier response and confirm if the notifications are generated. There is no need for real tracking numbers to test end to end feature. Refer here for more details on how to test text notification for delivery tracking w/o sample tracking numbers. OptIn value is not copied from the customer order to return order there by preventing text communication for return order configured notifications If the Customer Master record is not found for a given CustomerId or for any anonymous customer, the OptIn value should be populated by intercepting order save call if the order creation is from the call center or DSS. Related Articles UI ResourcesOrder Status InquiryItem SearchCall Center ConfigurationReturns and ExchangesCustomer Service Insights DashboardTroubleshooting Transactional EmailsCross-Organization VisibilityOverview and NavigationKits in Call CenterOrder Modifications"
}