{
  "id": "3534625",
  "permalink": "giftcard-process-guide-2",
  "title": "Gift Card Cart Actions",
  "type": "topic",
  "level": 5,
  "path": "Manhattan Active® Omni/Store/Process & Configuration Guides/Point of Sale/POS Guides/Gift Card Cart Actions",
  "raw_item": {
    "id": "3534625",
    "text": "Gift Card Cart Actions",
    "title": "Gift Card Cart Actions",
    "permalink": "giftcard-process-guide-2",
    "leaf": false,
    "droppable": true,
    "expanded": true,
    "closed": true,
    "visible": true,
    "editable": true,
    "type": "topic",
    "topicType": "0",
    "status": "1",
    "iconCls": "icon-topic",
    "cls": "",
    "folder_id": "430379",
    "parent": "f;430379",
    "created_date": "1734627399",
    "modified_date": "1751904329",
    "instructor_id": null,
    "loaded": true,
    "haschildren": false,
    "callout": "0",
    "order": "6"
  },
  "success": true,
  "content": "\r\n\r\n\r\n<div class=\"hiq-page-wrap\">\r\n<div class=\"hiq-t-wrap\">\r\n\t\t\r\n  \t  <div class=\"hiq-t \">\r\n\t\t\t\t<ul class=\"breadcrumbs\"><li><a class=\"breadcrumb-links\" hqid=\"1788908\"  href=\"/home\">Home</a></li> <li><span>&rsaquo;&rsaquo;</span><a hqid=\"3500940\" href=\"/omni\" class=\"breadcrumb-links\">Manhattan Active® Omni</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3426481\" href=\"/store-3\" class=\"breadcrumb-links\">Store</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158412\" href=\"/process-configuration-guides-3\" class=\"breadcrumb-links\">Process & Configuration Guides</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"2158737\" href=\"/point-of-sale\" class=\"breadcrumb-links\">Point of Sale</a></li><li><span>&rsaquo;&rsaquo;</span><a hqid=\"3433322\" href=\"/pos-iris-guides\" class=\"breadcrumb-links\">POS Guides</a></li><li> <span>››</span>Gift Card Cart Actions</li></ul>  \t\r\n\t\t<h2><a name=\"gift-card-cart-actions\" id=\"gift-card-cart-actions\"></a>Gift Card Cart Actions</h2>\r\n\r\n<p></p>\r\n\r\n<div class=\"info\"><ul><li><a href=\"/giftcard-process-guide-2$gift-card-cart-actions\">Gift Card Cart Actions</a><ul><li><a href=\"/giftcard-process-guide-2$scope-of-this-document\">Scope of this Document</a></li><li><a href=\"/giftcard-process-guide-2$general-configuration\">General Configuration</a><ul><li><a href=\"/giftcard-process-guide-2$configuring-gift-card-items\">Configuring Gift Card Items</a><ul><li><a href=\"/giftcard-process-guide-2$gift-card-activation\">Gift card Activation</a><ul><li><a href=\"/giftcard-process-guide-2$configuration-possibilities-for-gift-card-activation\">Configuration possibilities for Gift Card Activation</a></li><li><a href=\"/giftcard-process-guide-2$workflow-for-a-gift-card-activation-activate-gift-card-in-cart-false\">Workflow for a Gift card activation (Activate Gift Card in Cart = False):</a></li></ul></li><li><a href=\"/giftcard-process-guide-2$gift-card-activation-during-refund\">Gift Card Activation During Refund</a></li><li><a href=\"/giftcard-process-guide-2$gift-card-reload\">Gift Card Reload</a><ul><li><a href=\"/giftcard-process-guide-2$workflow-for-a-gift-card-reload-activate-gift-card-in-cart-false\">Workflow for a Gift Card Reload (Activate Gift Card in Cart = False):</a></li></ul></li></ul></li></ul></li><li><a href=\"/giftcard-process-guide-2$error-handling\">Error Handling</a><ul><li><a href=\"/giftcard-process-guide-2$retry-failed-gift-card-activation-reload\">Retry Failed Gift Card Activation/Reload</a></li><li><a href=\"/giftcard-process-guide-2$failure-to-activate-reload-retrying-and-returning-failed-gift-card-line-items\">Failure to Activate/Reload - Retrying and Returning Failed Gift Card line items</a><ul><li><a href=\"/giftcard-process-guide-2$nonreturnable-gift-card-items\">Nonreturnable Gift Card items</a></li><li><a href=\"/giftcard-process-guide-2$returnable-gift-card-items\">Returnable Gift Card items</a></li><li><a href=\"/giftcard-process-guide-2$gift-card-failure-example\">Gift Card Failure example</a></li></ul></li></ul></li><li><a href=\"/giftcard-process-guide-2$gift-card-balance-enquiry\">Gift Card Balance Enquiry</a><ul><li><a href=\"/giftcard-process-guide-2$workflow-for-a-gift-card-enquiry\">Workflow for a Gift Card Enquiry</a></li></ul></li><li><a href=\"/giftcard-process-guide-2$static-table-of-gift-card-activate-reload-amounts\">Static Table of Gift Card Activate/Reload Amounts</a></li><li><a href=\"/giftcard-process-guide-2$services\">Services</a></li></ul></li></ul></div>\r\n\r\n<h3><a name=\"scope-of-this-document\" id=\"scope-of-this-document\"></a>Scope of this Document</h3>\r\n\r\n<p>This documentation addresses Gift Card line item&nbsp;actions which are taken at the cart - selling or reloading a gift card, or performing a balance check.&nbsp; For information on using Gift Cards as payment types, see <a href=\"https://omni.helpdocsonline.com/payment-2\">Payment </a>and <a href=\"https://omni.helpdocsonline.com/payment-types$gift-card\">Payment Types</a>&nbsp;guides.</p>\r\n\r\n<p>Manhattan Active Omni Point of Sale provides its customers capability&nbsp;to purchase a gift card which can be pre-denominated, or reload to an existing gift card.&nbsp; The customer can also perform a balance enquiry on an existing gift card&nbsp;as part of the existing sale.</p>\r\n\r\n<p>To perform these&nbsp;actions, itemID(s) must be configured as \"gift card\" actions, to be added to the cart and for which the customer will be charged.&nbsp; &nbsp;The user will have to&nbsp;add a properly configured&nbsp;item to cart and&nbsp;then the OrderLine.isGiftCard will equal to True.&nbsp; A Gift Card line item is in effect a pseudo-SKU.</p>\r\n\r\n<h3><a name=\"general-configuration\" id=\"general-configuration\"></a>General Configuration</h3>\r\n\r\n<p><span>For an item to be treated as a gift card, follow the Item set up configurations as stated below.&nbsp;&nbsp;</span>An item that is required for a Gift card \"Activation\" or&nbsp; for a \"Reload\"&nbsp; will have the following Verification and Checks to validate&nbsp;and fetch a particular item from the item master component, itemEntity.xml.&nbsp;&nbsp;</p>\r\n\r\n<p>The specific Item IDs shown in this document are for your reference only as these Item IDs are used by Manhattan for their internal testing.&nbsp; Each retailer should define their own Item IDs as desired by them.</p>\r\n\r\n<div class=\"tip\">Note: There must be at least two zero-priced Gift Card items to enable minimal Gift Card Sale or Reload functionality, one for NEW and one for RELOAD.&nbsp;&nbsp;Additional items can be defined by the retailer's to either sell or reload pre-valued amounts:</div>\r\n\r\n<h4><a name=\"configuring-gift-card-items\" id=\"configuring-gift-card-items\"></a>Configuring Gift Card Items</h4>\r\n\r\n<p>From master data, item record (item&gt;item) these are the settings that must be configured to set up a 'gift card' item.</p>\r\n\r\n<ul>\r\n\t<li>IsGiftcard = True</li>\r\n\t<li>sellingattributes&gt;activationRequired = True or False, is this a new GC&nbsp;item or GC to be reloaded.\r\n\t<ul>\r\n\t\t<li>If TRUE, the item represents value to be added to a new gift card (to be activated).</li>\r\n\t\t<li>If FALSE, the item represents value to be added to an existing gift card (reload).</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>sellingattributes&gt;valueEntryRequired = True or False,\r\n\t<ul>\r\n\t\t<li>If this is TRUE then the user must provide the value of the Gift Card activate or reload item.&nbsp;\r\n\t\t<ul>\r\n\t\t\t<li>Price is provided from a pre-seeded list of&nbsp;prices (ex. 10, 20, 50).&nbsp;\r\n\t\t\t<ul>\r\n\t\t\t\t<li>The predefined value list is defined in item&gt;giftCardAmount on the server.&nbsp;</li>\r\n\t\t\t\t<li>User will also have ability to type any&nbsp;desired dollar amount and update the Gift Card Value in the table. (For seed values, check below table)&nbsp;</li>\r\n\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t</li>\r\n\t\t<li>If this is FALSE, based on the item identified, the Server can make a call to Price promo and fetch the Gift Card item price, which is assumed to be pre-loaded like any other standard item price.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Configuration possibilities for Gift Card items</strong></p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 896px;\">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 114px; text-align: center; vertical-align: middle;\"><strong>Attributes/Features</strong></td>\r\n\t\t\t<td style=\"width: 178px; text-align: center; vertical-align: middle;\">\r\n\t\t\t<p style=\"text-align: center;\"><strong>Activation</strong><br>\r\n\t\t\t<strong>sample ItemId=900101</strong><br>\r\n\t\t\t<strong>&lt;Sample Test Id&gt;</strong></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 190px; text-align: center; vertical-align: middle;\">\r\n\t\t\t<p style=\"text-align: center;\"><strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">Reload</strong><br style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(0, 255, 255);\">\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">sample ItemId=900102</strong><br style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(0, 255, 255);\">\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">&lt;Sample Test Id&gt;</strong></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 151px; text-align: center; vertical-align: middle;\">\r\n\t\t\t<p><strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif;\">Activation</strong><br style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(0, 255, 255);\">\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">ItemId=900103</strong><br style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(0, 255, 255);\">\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">&lt;Sample Test Id&gt;</strong></p>\r\n\t\t\t</td>\r\n\t\t\t<td style=\"width: 155px; text-align: center; vertical-align: middle;\"><strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">Activation</strong><br>\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">ItemId=900104</strong><br style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; background-color: rgb(0, 255, 255);\">\r\n\t\t\t<strong style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; \">&lt;Sample Test Id&gt;</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 114px; text-align: center; vertical-align: middle;\">isGiftCard</td>\r\n\t\t\t<td style=\"width: 178px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 190px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 151px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 155px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 114px; text-align: center; vertical-align: middle;\">ActivationRequired</td>\r\n\t\t\t<td style=\"width: 178px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 190px; text-align: center; vertical-align: middle;\">No</td>\r\n\t\t\t<td style=\"width: 151px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 155px; text-align: center; vertical-align: middle;\">No</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 114px; text-align: center; vertical-align: middle;\">ValueEntryRequired</td>\r\n\t\t\t<td style=\"width: 178px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 190px; text-align: center; vertical-align: middle;\">Yes</td>\r\n\t\t\t<td style=\"width: 151px; text-align: center; vertical-align: middle;\">No and item price record 100.00 exists</td>\r\n\t\t\t<td style=\"width: 155px; text-align: center; vertical-align: middle;\">No and item price record 50.00 exists</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"width: 114px; text-align: center; vertical-align: middle;\">&nbsp;</td>\r\n\t\t\t<td style=\"width: 178px; text-align: center; vertical-align: middle;\">The Value Entry Required is YES, then, this item is associated to 0.00 price.&nbsp; User assigns price during transaction, by typing or selecting from predefined value list.&nbsp;</td>\r\n\t\t\t<td style=\"width: 190px; text-align: center; vertical-align: middle;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; text-align: center;\">The Value Entry Required is YES,&nbsp; then, this item is associated to 0.00 price.&nbsp; </span>User assigns price during transaction, by typing or selecting from predefined value list.&nbsp;</td>\r\n\t\t\t<td style=\"width: 151px; text-align: center; vertical-align: middle;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; text-align: center;\">If the Value Entry is Required as equal to No. Then, t</span>his will be a New gift card associated to a predetermined price, i.e. 100.00</td>\r\n\t\t\t<td style=\"width: 155px; text-align: center; vertical-align: middle;\"><span style=\"font-family: &quot;Open Sans&quot;, arial, sans-serif; text-align: center;\">If the Value Entry is Required as equal to No. Then, this would be a Reload gift card item associated to a predetermined amount, i.e. 50.00</span></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n<h5><a name=\"gift-card-activation\" id=\"gift-card-activation\"></a>Gift card Activation</h5>\r\n\r\n<p>Associates can trigger purchasing of&nbsp;gift card from the POS active store application. Gift card amounts&nbsp;can be&nbsp;pre-loaded or the associates can enter the amount manually based on the request from the customer. Gift card purchases are linked to an item which is configured as isGiftCard=True and isActivationRequired=True.&nbsp; This item&nbsp;will be added to POS cart.</p>\r\n\r\n<h6><a name=\"configuration-possibilities-for-gift-card-activation\" id=\"configuration-possibilities-for-gift-card-activation\"></a>Configuration possibilities for Gift Card Activation</h6>\r\n\r\n<p>Application Configuration &gt; Manage POS Configuration &gt; POS General Configuration &gt; Common Config &gt; <strong>Activate Gift Card in Cart</strong></p>\r\n\r\n<ul>\r\n\t<li>Activate Gift Card in Cart = False\r\n\t<ul>\r\n\t\t<li>Gift card activation/reload will not occur until the balance due on the order = 0</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p class=\"warning\">Activate Gift Card in Cart = True.&nbsp;<strong>This setting is deprecated and is currently always treated as False.</strong>&nbsp; Gift cards currently are always activated at the end of the transaction, after balance due = 0.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h6><a name=\"workflow-for-a-gift-card-activation-activate-gift-card-in-cart-false\" id=\"workflow-for-a-gift-card-activation-activate-gift-card-in-cart-false\"></a>Workflow for a Gift card activation (Activate Gift Card in Cart = False):</h6>\r\n\r\n<ul>\r\n\t<li>User Selects Gift card &gt; New Card&nbsp; or the user can scan an gift card item</li>\r\n\t<li>Depending on the Value Entry Required flag, is True, a prompt is displayed to select the amount for the gift card to be activated. If False, the item comes with a default price populated by the server, this item will be added to cart like any other item</li>\r\n\t<li>CHECKOUT and navigate to the tender screen.&nbsp;&nbsp;&nbsp;<strong>When all the payment is completed using the available payment options and</strong><strong>&nbsp;balance = 0</strong>, a gift card prompt appears requesting the associate to swipe the gift card for activation\r\n\t<ul>\r\n\t\t<li>UI will direct to collect the card number - through the screen or through the terminal - and request will be sent from terminal to the&nbsp;processor&nbsp;to activate&nbsp;the Gift card with the requested amount.</li>\r\n\t\t<li>Processor&nbsp;sends the response to&nbsp;activate the card including the available&nbsp;balance of this card\r\n\t\t<ul>\r\n\t\t\t<li>POS Service&nbsp;maps this response to payment by creating a Payment Transaction Type as \"Activate\" and&nbsp;Payment Type&nbsp;as \"Gift Card\" using this Transaction ID.</li>\r\n\t\t</ul>\r\n\t\t</li>\r\n\t\t<li>When the transaction is finalized&nbsp;receipts will indicate the Gift Card activation(s) in the GC activation section.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5><a name=\"gift-card-activation-during-refund\" id=\"gift-card-activation-during-refund\"></a><a id=\"close button\" name=\"close button\"></a>Gift Card Activation During Refund</h5>\r\n\r\n<p>Users can activate gift cards as part of the refund process. This functionality is supported for both automatic and override refunds. During this process, the user is presented with a gift card activation screen featuring <b>Activate</b> and <b>Close</b> buttons. If the user chooses to get a refund using a different payment method, they can simply click the <b>Close</b> button and select an alternative tender type.</p>\r\n\r\n<h5><a name=\"gift-card-reload\" id=\"gift-card-reload\"></a>Gift Card Reload</h5>\r\n\r\n<p>Associates can also perform adding more funds to the existing active gift card from the POS active store application. The reload amount can be suggested from the server with pre-defined denominations or the associate can enter the amount manually based on the customer's request. Gift card reloads are linked to an item which is configured as&nbsp;isGiftCard=TRUE and&nbsp;isActivationRequired=FALSE, This item&nbsp;will be added to the POS cart.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h6><a name=\"workflow-for-a-gift-card-reload-activate-gift-card-in-cart-false\" id=\"workflow-for-a-gift-card-reload-activate-gift-card-in-cart-false\"></a>Workflow for a Gift Card Reload (Activate Gift Card in Cart = False):</h6>\r\n\r\n<ul>\r\n\t<li>User Selects Gift card &gt; Reload&nbsp; or the user can scan a Reload gift card item</li>\r\n\t<li>Depending on the Value Entry Required flag, is True, a prompt is displayed to select the amount for the gift card to be activated. If False, the item comes with a default price populated by the server, this item will be added to cart like any other item</li>\r\n\t<li>CHECKOUT and navigate to the tender screen.&nbsp;&nbsp;&nbsp;<strong>When all the payment is completed using the available payment options and</strong><strong>&nbsp;balance = 0</strong>, a gift card prompt appears requesting the associate to swipe the gift card for activation.\r\n\t<ul>\r\n\t\t<li>UI will direct to collect the card number - through the screen or through the terminal - and request will be sent from terminal to the processor&nbsp;to reload the Gift card with the requested amount</li>\r\n\t\t<li>Processor sends the response by adding funds on&nbsp;the card and&nbsp;the new available&nbsp;balance of this card</li>\r\n\t\t<li>POS service&nbsp;maps this response to the payment by creating a Payment Transaction Type as \"Reload\" and the Payment&nbsp;Type&nbsp;as \"Gift Card\" using the Transaction Id</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>When the transaction is finalized&nbsp;receipts will indicate the Gift Card activation(s) in the GC activation section.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"error-handling\" id=\"error-handling\"></a>Error Handling</h3>\r\n\r\n<div class=\"warning\">The existing posGeneralConfig business flag \"Allow Order Completion With GC Activation Failure\" (T/F) flag is deprecated.&nbsp; This setting is always treated as \"true\".</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"retry-failed-gift-card-activation-reload\" id=\"retry-failed-gift-card-activation-reload\"></a>Retry Failed Gift Card Activation/Reload</h4>\r\n\r\n<p>At end of a transaction following full payment, POS attempts to Activate or Reload Gift Card lines.&nbsp; Once user enters the data, either via pinned swipe or keyboard typing, if the card is declined by the Gift Card provider, user is prompted with the option to Retry or Continue.&nbsp;</p>\r\n\r\n<p>Number of retries allowed is configured under POS Store Config&gt;&gt;Store Common Config&gt;&gt;Number of Retries Upon Gift Activation or Reload, which is configured with an integer indicating the number of attempts to allow (ex. 0, 1, 2, 3, etc).&nbsp; To enable the feature, configure a value &gt; 0.</p>\r\n\r\n<p>User can re-attempt as many times as specified under the configuration, after which system either moves to the next Gift Card line or to the Receipt screen.&nbsp; It is not mandatory to retry up to the maximum times allowed, user can skip the retry and continue to the next steps at any time.&nbsp;</p>\r\n\r\n<p>Two new additional attributes are introduced under PaymentMethodAttribute:</p>\r\n\r\n<p><strong>\"Name\": \"OrderLineId\"</strong>&nbsp;: To persist the orderline for which the Gift Card Activation/Reload is performed.&nbsp; This is used in Receipt to show only the final success or failed payment data.</p>\r\n\r\n<p><strong>\"Name\": \"IsGCActivationRetried\"</strong>: Indicates if the Declined Activation/Reload is Retried or not.&nbsp; This is useful for the external systems such as Sales Audit, to know if the store associate Retried in case of failure or not.</p>\r\n\r\n<p>This whole process is applicable even in case of custom implementation where in the Gift Card is processed via the User Exit, in the backend.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"failure-to-activate-reload-retrying-and-returning-failed-gift-card-line-items\" id=\"failure-to-activate-reload-retrying-and-returning-failed-gift-card-line-items\"></a>Failure to Activate/Reload - Retrying and Returning Failed Gift Card line items</h4>\r\n\r\n<p>If a Gift Card item is successfully activated or reloaded, that line item is not returnable in the same way a typical merchandise item would be.&nbsp;</p>\r\n\r\n<h6><a name=\"nonreturnable-gift-card-items\" id=\"nonreturnable-gift-card-items\"></a>Nonreturnable Gift Card items</h6>\r\n\r\n<p>When the Gift Card line is successfully loaded with value, system marks the associated orderline.isReturnable=False.&nbsp; During a validated return of this sale, this line item WILL NOT be displayed as available for return.</p>\r\n\r\n<h6><a name=\"returnable-gift-card-items\" id=\"returnable-gift-card-items\"></a>Returnable Gift Card items</h6>\r\n\r\n<p>Only if the Gift&nbsp;Card line is not Activated/Reloaded successfully, even following any retries, system marks the associated orderline.isReturnable=True.&nbsp;&nbsp;During a validated return of this sale, this line item <strong>WILL be displayed as available for return</strong>.</p>\r\n\r\n<p>If a Gift Card Activation or Reload fails, users will see a pop-up with two options: <strong>Refund</strong> or <strong>Retry</strong>.</p>\r\n\r\n<ul>\r\n\t<li><strong>Refund</strong>: Enables users to void the gift card transaction and proceed. This option will\r\n\r\n\t<ul>\r\n\t\t<li>Automatically void the Gift Card item</li>\r\n\t\t<li>Since the previous balance was 0, there is now a refund due to the customer.</li>\r\n\t\t<li>A Process Refund screen will be displayed, with refund tender options as configured for a regular return.</li>\r\n\t\t<li>Once the user processes the refund, the balance again is 0.00 and user is navigated to receipt screen.&nbsp;</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<ul>\r\n\t<li><strong>Retry</strong>: Allows users to attempt the activation or reload again, either with the same or a different gift card.\r\n\r\n\t<ul>\r\n\t\t<li>Once the number of retries is exhausted, the pop-up will display a <strong>Refund </strong>and <strong>OK</strong>&nbsp;options (no more Retries available).</li>\r\n\t\t<li>OK will take the user to the next action.(Activate/Reload more cards or navigate to receipt screen).</li>\r\n\t\t<li>If the user exhausts the retries as described&nbsp;and never opts to REFUND, they will be expected to return the failed GIFT CARD item(s) as part of a subsequent validated return.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div class=\"tip\"><strong>Note:</strong> Non-validated return of Gift Card is never allowed.&nbsp; Since the isReturnable attribute is part of Orderline data, there must be an associated Order in order to read it.</div>\r\n\r\n<h6><a name=\"gift-card-failure-example\" id=\"gift-card-failure-example\"></a>Gift Card Failure example</h6>\r\n\r\n<p>1. User sells 10.00 item and 100.00 Gift Card.&nbsp; With tax the balance due is 110.89.&nbsp;&nbsp;User tenders 20.00 Cash and 90.89 Credit.</p>\r\n\r\n<p><strong>Result -&nbsp;</strong></p>\r\n\r\n<ul>\r\n\t<li>Transaction Summary&nbsp;\r\n\t<ul>\r\n\t\t<li>Subtotal&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;110.00</li>\r\n\t\t<li>Tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.89</li>\r\n\t\t<li>Total&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 110.89</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>Payment\r\n\t<ul>\r\n\t\t<li>Cash&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 20.00</li>\r\n\t\t<li>Credit&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 90.89</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>At this point, payment is complete and balance due is 0.00</li>\r\n</ul>\r\n\r\n<p>2. User attempts to activate the 100.00 Gift Card several times without success.&nbsp; User selects Refund.&nbsp;</p>\r\n\r\n<p>A typical Refund screen is shown with -100.00 as the Refund amount and refund payment types as configured in Payment Capture Configurations shown.&nbsp;&nbsp;</p>\r\n\r\n<p>User provides 100.00 refund for Cash.</p>\r\n\r\n<p>The final Transaction Summary as shown on the receipt will show:</p>\r\n\r\n<ul>\r\n\t<li>Transaction Summary&nbsp;\r\n\t<ul>\r\n\t\t<li>Subtotal&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10.00&nbsp;&nbsp;(no longer 110.00 due to returned failed Gift Card)</li>\r\n\t\t<li>Tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0.89</li>\r\n\t\t<li>Total&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;10.89</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li>Payment\r\n\t<ul>\r\n\t\t<li>Cash&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 20.00</li>\r\n\t\t<li>Credit&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 90.89</li>\r\n\t\t<li>Cash&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -100.00</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<ul>\r\n\t<li>Note again, at this point, payment is complete and balance due is 0.00.&nbsp; Note that all these actions happened in the same order, as opposed to creating a separate order to Return the failed gift card.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"gift-card-balance-enquiry\" id=\"gift-card-balance-enquiry\"></a>Gift Card Balance Enquiry</h3>\r\n\r\n<p>Customer can present the gift card to the store associates for checking the available balance. Associates can use this functionality as part of same existing sale transaction or a transaction of its own&nbsp;to make a call to the processor to get the balance for this particular gift card. The response&nbsp;will&nbsp;be present on the Payment component, and the customer is informed of the available balance either by print or e-mail.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4><a name=\"workflow-for-a-gift-card-enquiry\" id=\"workflow-for-a-gift-card-enquiry\"></a>Workflow for a Gift Card Enquiry</h4>\r\n\r\n<ul>\r\n\t<li>User Selects Gift Card C enquiry or the user can enter Gift Card number and click OK</li>\r\n\t<li>A new transaction is generated and saved. This on Order mark isConfirmed = True&nbsp; (Or)</li>\r\n\t<li>If an existing transaction is present in the session, the same transaction is used for this enquiry</li>\r\n\t<li>UI will direct to MX, and MX will processor (Payware) to get the balance for this gift card</li>\r\n\t<li>Gateway provider sends the response with the available&nbsp;balance of this card</li>\r\n\t<li>POS service&nbsp;maps this response to the payment by creating a Payment Transaction Type as \"Balance Check\" and PaymentType as \"Gift card\" using this Transaction ID.</li>\r\n\t<li>Customers will receive receipts from the Gift Card activation section</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img src=\"https://dzf8vqv24eqhg.cloudfront.net/userfiles/4665/7671/ckfinder/images/GC_Enquiry.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kemY4dnF2MjRlcWhnLmNsb3VkZnJvbnQubmV0L3VzZXJmaWxlcy80NjY1Lzc2NzEvY2tmaW5kZXIvaW1hZ2VzL0dDX0VucXVpcnkucG5nIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNzU0NzUyMDEwfX19XX0_&Signature=lc4omIwnXEfQYWb6H5~u~OTE6IIHt55MgZETGDsE~MSeQ90gbz5EhQLq1IZvfHmAapnanshPsbr4A8fmYS8qcKadEb1SwbsUzlxLw8sphzZMHVSFuBIcp~WWAT4BQY1ohmRPj8CYBWaeW4F~sNDnq6VOQrSopijhcfJvYDDobRvnqM-xy82sb5NTHegruwO5fnoytlfUZFUwmuBku-tvFV4iWigiz7QFseFkA-ys2n90vbCGztzbCmtje6Jyn2i18NEeytkjDvUSzI2EjR4m0mcXvEWsVay5CC~mKTiC-W2sstphhsN5hp3g7NXFYS2R~AiN94xHqV69VWfeySLGhw__&Key-Pair-Id=K2TK3EG287XSFC\" style=\"border-width: 3px; border-style: solid; width: 776px; height: 620px;\"></p>\r\n\r\n<div class=\"info\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px;\">Note: If the balance enquiry is triggered when the cart is empty, always a new transaction number is created just for this functionality.</div>\r\n\r\n<p style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; padding: 0px;\">&nbsp;</p>\r\n\r\n<h3 style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; padding: 0px;\"><a name=\"static-table-of-gift-card-activate-reload-amounts\" id=\"static-table-of-gift-card-activate-reload-amounts\"></a>Static Table of Gift Card Activate/Reload Amounts</h3>\r\n\r\n<p>During Activate/Reload of a Gift Card from the menu, user can view the predefined amounts.&nbsp; These amounts are taken from the static data defined in iGiftCard Amount table in the Item entity and the current initial seed data can be customized by the retailer.&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"services\" id=\"services\"></a>Services</h3>\r\n\r\n<p>The following APIs are the key APIs related to Gift Card functions.&nbsp;Refer to the API documentation for additional details on&nbsp;each service.</p>\r\n\r\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width: 1213px;\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 259px;\"><strong><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service</font></strong></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 118px;\"><strong><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Component</font></strong></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 300px;\"><strong><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service</font></strong></th>\r\n\t\t\t<th scope=\"col\" style=\"margin-top: 0px; margin-right: 0px; margin-left: 0px; font-weight: normal; width: 520px;\"><strong><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Service Endpoint</font></strong></th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 256px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Gift card activation</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 116px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">posService</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 297px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Order Service Controller</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 517px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">POST /api/posservice/order/addGiftItemToOrder</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 256px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Gift card activation</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 116px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">posService</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 297px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Payment Service Controller</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 517px;\">POST /api/posservice/payment/issueGiftCard</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 256px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Gift card reload</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 116px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">posService</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 297px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Order Service Controller</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 517px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">POST /api/posservice/order/addGiftItemToOrder</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 256px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Gift card enquiry</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 116px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">posService</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 297px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Payment Service Controller</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 517px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">POST /api/posservice/payment/addGiftCardBalance</font></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td style=\"margin: 0px; width: 256px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">gift card amount</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 116px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">item</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 297px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">Gift card amount service</font></td>\r\n\t\t\t<td style=\"margin: 0px; width: 517px;\"><font face=\"Open Sans, Arial, Helvetica, sans-serif\">GET: /api/item/giftCardAmount</font></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n\r\n\t  </div>\r\n </div>\r\n <div id=\"ui-page-fb-wrap\"></div>\r\n <div class=\"hiq-footer-wrap\">\r\n    \r\n                \r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n",
  "content_length": 32473,
  "scraped_at": "2025-08-09T22:01:50.730748",
  "content_clean": "Home ››Manhattan Active® Omni››Store››Process & Configuration Guides››Point of Sale››POS Guides ››Gift Card Cart Actions Gift Card Cart Actions Gift Card Cart ActionsScope of this DocumentGeneral ConfigurationConfiguring Gift Card ItemsGift card ActivationConfiguration possibilities for Gift Card ActivationWorkflow for a Gift card activation (Activate Gift Card in Cart = False):Gift Card Activation During RefundGift Card ReloadWorkflow for a Gift Card Reload (Activate Gift Card in Cart = False):Error HandlingRetry Failed Gift Card Activation/ReloadFailure to Activate/Reload - Retrying and Returning Failed Gift Card line itemsNonreturnable Gift Card itemsReturnable Gift Card itemsGift Card Failure exampleGift Card Balance EnquiryWorkflow for a Gift Card EnquiryStatic Table of Gift Card Activate/Reload AmountsServices Scope of this Document This documentation addresses Gift Card line item actions which are taken at the cart - selling or reloading a gift card, or performing a balance check.  For information on using Gift Cards as payment types, see Payment and Payment Types guides. Manhattan Active Omni Point of Sale provides its customers capability to purchase a gift card which can be pre-denominated, or reload to an existing gift card.  The customer can also perform a balance enquiry on an existing gift card as part of the existing sale. To perform these actions, itemID(s) must be configured as \"gift card\" actions, to be added to the cart and for which the customer will be charged.   The user will have to add a properly configured item to cart and then the OrderLine.isGiftCard will equal to True.  A Gift Card line item is in effect a pseudo-SKU. General Configuration For an item to be treated as a gift card, follow the Item set up configurations as stated below.  An item that is required for a Gift card \"Activation\" or  for a \"Reload\"  will have the following Verification and Checks to validate and fetch a particular item from the item master component, itemEntity.xml. The specific Item IDs shown in this document are for your reference only as these Item IDs are used by Manhattan for their internal testing.  Each retailer should define their own Item IDs as desired by them. Note: There must be at least two zero-priced Gift Card items to enable minimal Gift Card Sale or Reload functionality, one for NEW and one for RELOAD.  Additional items can be defined by the retailer's to either sell or reload pre-valued amounts: Configuring Gift Card Items From master data, item record (item>item) these are the settings that must be configured to set up a 'gift card' item. IsGiftcard = True sellingattributes>activationRequired = True or False, is this a new GC item or GC to be reloaded. If TRUE, the item represents value to be added to a new gift card (to be activated). If FALSE, the item represents value to be added to an existing gift card (reload). sellingattributes>valueEntryRequired = True or False, If this is TRUE then the user must provide the value of the Gift Card activate or reload item. Price is provided from a pre-seeded list of prices (ex. 10, 20, 50). The predefined value list is defined in item>giftCardAmount on the server. User will also have ability to type any desired dollar amount and update the Gift Card Value in the table. (For seed values, check below table) If this is FALSE, based on the item identified, the Server can make a call to Price promo and fetch the Gift Card item price, which is assumed to be pre-loaded like any other standard item price. Configuration possibilities for Gift Card items Attributes/Features Activation sample ItemId=900101 <Sample Test Id> Reload sample ItemId=900102 <Sample Test Id> Activation ItemId=900103 <Sample Test Id> Activation ItemId=900104 <Sample Test Id> isGiftCard Yes Yes Yes Yes ActivationRequired Yes No Yes No ValueEntryRequired Yes Yes No and item price record 100.00 exists No and item price record 50.00 exists The Value Entry Required is YES, then, this item is associated to 0.00 price.  User assigns price during transaction, by typing or selecting from predefined value list. The Value Entry Required is YES,  then, this item is associated to 0.00 price.  User assigns price during transaction, by typing or selecting from predefined value list. If the Value Entry is Required as equal to No. Then, this will be a New gift card associated to a predetermined price, i.e. 100.00 If the Value Entry is Required as equal to No. Then, this would be a Reload gift card item associated to a predetermined amount, i.e. 50.00 Gift card Activation Associates can trigger purchasing of gift card from the POS active store application. Gift card amounts can be pre-loaded or the associates can enter the amount manually based on the request from the customer. Gift card purchases are linked to an item which is configured as isGiftCard=True and isActivationRequired=True.  This item will be added to POS cart. Configuration possibilities for Gift Card Activation Application Configuration > Manage POS Configuration > POS General Configuration > Common Config > Activate Gift Card in Cart Activate Gift Card in Cart = False Gift card activation/reload will not occur until the balance due on the order = 0 Activate Gift Card in Cart = True. This setting is deprecated and is currently always treated as False.  Gift cards currently are always activated at the end of the transaction, after balance due = 0. Workflow for a Gift card activation (Activate Gift Card in Cart = False): User Selects Gift card > New Card  or the user can scan an gift card item Depending on the Value Entry Required flag, is True, a prompt is displayed to select the amount for the gift card to be activated. If False, the item comes with a default price populated by the server, this item will be added to cart like any other item CHECKOUT and navigate to the tender screen.   When all the payment is completed using the available payment options and balance = 0, a gift card prompt appears requesting the associate to swipe the gift card for activation UI will direct to collect the card number - through the screen or through the terminal - and request will be sent from terminal to the processor to activate the Gift card with the requested amount. Processor sends the response to activate the card including the available balance of this card POS Service maps this response to payment by creating a Payment Transaction Type as \"Activate\" and Payment Type as \"Gift Card\" using this Transaction ID. When the transaction is finalized receipts will indicate the Gift Card activation(s) in the GC activation section. Gift Card Activation During Refund Users can activate gift cards as part of the refund process. This functionality is supported for both automatic and override refunds. During this process, the user is presented with a gift card activation screen featuring Activate and Close buttons. If the user chooses to get a refund using a different payment method, they can simply click the Close button and select an alternative tender type. Gift Card Reload Associates can also perform adding more funds to the existing active gift card from the POS active store application. The reload amount can be suggested from the server with pre-defined denominations or the associate can enter the amount manually based on the customer's request. Gift card reloads are linked to an item which is configured as isGiftCard=TRUE and isActivationRequired=FALSE, This item will be added to the POS cart. Workflow for a Gift Card Reload (Activate Gift Card in Cart = False): User Selects Gift card > Reload  or the user can scan a Reload gift card item Depending on the Value Entry Required flag, is True, a prompt is displayed to select the amount for the gift card to be activated. If False, the item comes with a default price populated by the server, this item will be added to cart like any other item CHECKOUT and navigate to the tender screen.   When all the payment is completed using the available payment options and balance = 0, a gift card prompt appears requesting the associate to swipe the gift card for activation. UI will direct to collect the card number - through the screen or through the terminal - and request will be sent from terminal to the processor to reload the Gift card with the requested amount Processor sends the response by adding funds on the card and the new available balance of this card POS service maps this response to the payment by creating a Payment Transaction Type as \"Reload\" and the Payment Type as \"Gift Card\" using the Transaction Id When the transaction is finalized receipts will indicate the Gift Card activation(s) in the GC activation section. Error Handling The existing posGeneralConfig business flag \"Allow Order Completion With GC Activation Failure\" (T/F) flag is deprecated.  This setting is always treated as \"true\". Retry Failed Gift Card Activation/Reload At end of a transaction following full payment, POS attempts to Activate or Reload Gift Card lines.  Once user enters the data, either via pinned swipe or keyboard typing, if the card is declined by the Gift Card provider, user is prompted with the option to Retry or Continue. Number of retries allowed is configured under POS Store Config>>Store Common Config>>Number of Retries Upon Gift Activation or Reload, which is configured with an integer indicating the number of attempts to allow (ex. 0, 1, 2, 3, etc).  To enable the feature, configure a value > 0. User can re-attempt as many times as specified under the configuration, after which system either moves to the next Gift Card line or to the Receipt screen.  It is not mandatory to retry up to the maximum times allowed, user can skip the retry and continue to the next steps at any time. Two new additional attributes are introduced under PaymentMethodAttribute: \"Name\": \"OrderLineId\" : To persist the orderline for which the Gift Card Activation/Reload is performed.  This is used in Receipt to show only the final success or failed payment data. \"Name\": \"IsGCActivationRetried\": Indicates if the Declined Activation/Reload is Retried or not.  This is useful for the external systems such as Sales Audit, to know if the store associate Retried in case of failure or not. This whole process is applicable even in case of custom implementation where in the Gift Card is processed via the User Exit, in the backend. Failure to Activate/Reload - Retrying and Returning Failed Gift Card line items If a Gift Card item is successfully activated or reloaded, that line item is not returnable in the same way a typical merchandise item would be. Nonreturnable Gift Card items When the Gift Card line is successfully loaded with value, system marks the associated orderline.isReturnable=False.  During a validated return of this sale, this line item WILL NOT be displayed as available for return. Returnable Gift Card items Only if the Gift Card line is not Activated/Reloaded successfully, even following any retries, system marks the associated orderline.isReturnable=True.  During a validated return of this sale, this line item WILL be displayed as available for return. If a Gift Card Activation or Reload fails, users will see a pop-up with two options: Refund or Retry. Refund: Enables users to void the gift card transaction and proceed. This option will Automatically void the Gift Card item Since the previous balance was 0, there is now a refund due to the customer. A Process Refund screen will be displayed, with refund tender options as configured for a regular return. Once the user processes the refund, the balance again is 0.00 and user is navigated to receipt screen. Retry: Allows users to attempt the activation or reload again, either with the same or a different gift card. Once the number of retries is exhausted, the pop-up will display a Refund and OK options (no more Retries available). OK will take the user to the next action.(Activate/Reload more cards or navigate to receipt screen). If the user exhausts the retries as described and never opts to REFUND, they will be expected to return the failed GIFT CARD item(s) as part of a subsequent validated return. Note: Non-validated return of Gift Card is never allowed.  Since the isReturnable attribute is part of Orderline data, there must be an associated Order in order to read it. Gift Card Failure example 1. User sells 10.00 item and 100.00 Gift Card.  With tax the balance due is 110.89.  User tenders 20.00 Cash and 90.89 Credit. Result - Transaction Summary Subtotal                     110.00 Tax                                  0.89 Total                            110.89 Payment Cash                                20.00 Credit                              90.89 At this point, payment is complete and balance due is 0.00 2. User attempts to activate the 100.00 Gift Card several times without success.  User selects Refund. A typical Refund screen is shown with -100.00 as the Refund amount and refund payment types as configured in Payment Capture Configurations shown. User provides 100.00 refund for Cash. The final Transaction Summary as shown on the receipt will show: Transaction Summary Subtotal                       10.00  (no longer 110.00 due to returned failed Gift Card) Tax                                  0.89 Total                             10.89 Payment Cash                                20.00 Credit                              90.89 Cash                            -100.00 Note again, at this point, payment is complete and balance due is 0.00.  Note that all these actions happened in the same order, as opposed to creating a separate order to Return the failed gift card. Gift Card Balance Enquiry Customer can present the gift card to the store associates for checking the available balance. Associates can use this functionality as part of same existing sale transaction or a transaction of its own to make a call to the processor to get the balance for this particular gift card. The response will be present on the Payment component, and the customer is informed of the available balance either by print or e-mail. Workflow for a Gift Card Enquiry User Selects Gift Card C enquiry or the user can enter Gift Card number and click OK A new transaction is generated and saved. This on Order mark isConfirmed = True  (Or) If an existing transaction is present in the session, the same transaction is used for this enquiry UI will direct to MX, and MX will processor (Payware) to get the balance for this gift card Gateway provider sends the response with the available balance of this card POS service maps this response to the payment by creating a Payment Transaction Type as \"Balance Check\" and PaymentType as \"Gift card\" using this Transaction ID. Customers will receive receipts from the Gift Card activation section Note: If the balance enquiry is triggered when the cart is empty, always a new transaction number is created just for this functionality. Static Table of Gift Card Activate/Reload Amounts During Activate/Reload of a Gift Card from the menu, user can view the predefined amounts.  These amounts are taken from the static data defined in iGiftCard Amount table in the Item entity and the current initial seed data can be customized by the retailer. Services The following APIs are the key APIs related to Gift Card functions. Refer to the API documentation for additional details on each service. Service Component Service Service Endpoint Gift card activation posService Order Service Controller POST /api/posservice/order/addGiftItemToOrder Gift card activation posService Payment Service Controller POST /api/posservice/payment/issueGiftCard Gift card reload posService Order Service Controller POST /api/posservice/order/addGiftItemToOrder Gift card enquiry posService Payment Service Controller POST /api/posservice/payment/addGiftCardBalance gift card amount item Gift card amount service GET: /api/item/giftCardAmount"
}